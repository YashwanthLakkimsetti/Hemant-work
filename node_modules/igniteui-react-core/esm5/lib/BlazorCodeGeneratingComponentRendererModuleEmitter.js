/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { DotNetCodeGeneratingComponentRendererModuleEmitter } from "./DotNetCodeGeneratingComponentRendererModuleEmitter";
import { markType } from "./type";
/**
 * @hidden
 */
var BlazorCodeGeneratingComponentRendererModuleEmitter = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BlazorCodeGeneratingComponentRendererModuleEmitter, _super);
    function BlazorCodeGeneratingComponentRendererModuleEmitter(a, b, c) {
        var _this = _super.call(this, a, b, c) || this;
        _this.u = 0;
        return _this;
    }
    BlazorCodeGeneratingComponentRendererModuleEmitter.prototype.n = function () {
        _super.prototype.n.call(this);
    };
    BlazorCodeGeneratingComponentRendererModuleEmitter.prototype.k = function (a) {
        _super.prototype.k.call(this, a);
        if (this.u > 0) {
            this.d.k(", ");
        }
        var b = "";
        var c = a.split('/');
        if (c.length == 1) {
            b = c[0];
        }
        else {
            b = c[1];
        }
        if (b == "withDescriptions") {
            this.d.j("typeof(IgbInputModule)");
        }
        else {
            this.d.j("typeof(");
            this.d.j("Igb" + b);
            this.d.j(")");
        }
        this.u++;
    };
    BlazorCodeGeneratingComponentRendererModuleEmitter.prototype.m = function () {
        _super.prototype.m.call(this);
    };
    BlazorCodeGeneratingComponentRendererModuleEmitter.$t = markType(BlazorCodeGeneratingComponentRendererModuleEmitter, 'BlazorCodeGeneratingComponentRendererModuleEmitter', DotNetCodeGeneratingComponentRendererModuleEmitter.$);
    return BlazorCodeGeneratingComponentRendererModuleEmitter;
}(DotNetCodeGeneratingComponentRendererModuleEmitter));
export { BlazorCodeGeneratingComponentRendererModuleEmitter };
