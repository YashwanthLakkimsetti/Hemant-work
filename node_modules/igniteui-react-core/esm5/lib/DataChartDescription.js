/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesViewerDescription } from "./SeriesViewerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DataChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataChartDescription, _super);
    function DataChartDescription() {
        var _this = _super.call(this) || this;
        _this.gv = false;
        _this.hl = 0;
        _this.hm = 0;
        _this.hd = 0;
        _this.he = 0;
        _this.gu = false;
        _this.gw = false;
        _this.h6 = null;
        _this.gt = false;
        _this.hg = 0;
        _this.hf = 0;
        _this.gz = false;
        _this.gx = false;
        _this.gy = false;
        _this.g0 = false;
        _this.h1 = null;
        _this.h5 = null;
        _this.h3 = null;
        _this.h4 = null;
        _this.gr = null;
        _this.ha = 0;
        _this.hc = 0;
        _this.hb = 0;
        _this.g9 = 0;
        _this.h2 = null;
        _this.h8 = null;
        _this.h9 = null;
        _this.hi = 0;
        _this.hk = 0;
        _this.hj = 0;
        _this.hh = 0;
        _this.ia = null;
        _this.h7 = null;
        return _this;
    }
    DataChartDescription.prototype.get_type = function () {
        return "DataChart";
    };
    Object.defineProperty(DataChartDescription.prototype, "isSquare", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            this.gv = a;
            this.e("IsSquare");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "windowScaleHorizontal", {
        get: function () {
            return this.hl;
        },
        set: function (a) {
            this.hl = a;
            this.e("WindowScaleHorizontal");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "windowScaleVertical", {
        get: function () {
            return this.hm;
        },
        set: function (a) {
            this.hm = a;
            this.e("WindowScaleVertical");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualWindowScaleHorizontal", {
        get: function () {
            return this.hd;
        },
        set: function (a) {
            this.hd = a;
            this.e("ActualWindowScaleHorizontal");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualWindowScaleVertical", {
        get: function () {
            return this.he;
        },
        set: function (a) {
            this.he = a;
            this.e("ActualWindowScaleVertical");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.gu;
        },
        set: function (a) {
            this.gu = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            this.gw = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "gridMode", {
        get: function () {
            return this.h6;
        },
        set: function (a) {
            this.h6 = a;
            this.e("GridMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "alignsGridLinesToPixels", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            this.gt = a;
            this.e("AlignsGridLinesToPixels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "autoExpandMarginMaximumValue", {
        get: function () {
            return this.hg;
        },
        set: function (a) {
            this.hg = a;
            this.e("AutoExpandMarginMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "autoExpandMarginExtraPadding", {
        get: function () {
            return this.hf;
        },
        set: function (a) {
            this.hf = a;
            this.e("AutoExpandMarginExtraPadding");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "shouldSuppressAxisLabelTruncation", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            this.gz = a;
            this.e("ShouldSuppressAxisLabelTruncation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "shouldAutoExpandMarginForInitialLabels", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            this.gx = a;
            this.e("ShouldAutoExpandMarginForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "shouldConsiderAutoRotationForInitialLabels", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            this.gy = a;
            this.e("ShouldConsiderAutoRotationForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "suppressAutoMarginAndAngleRecalculation", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            this.g0 = a;
            this.e("SuppressAutoMarginAndAngleRecalculation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "autoMarginAndAngleUpdateMode", {
        get: function () {
            return this.h1;
        },
        set: function (a) {
            this.h1 = a;
            this.e("AutoMarginAndAngleUpdateMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisStroke", {
        get: function () {
            return this.h5;
        },
        set: function (a) {
            this.h5 = a;
            this.e("DefaultAxisStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisMajorStroke", {
        get: function () {
            return this.h3;
        },
        set: function (a) {
            this.h3 = a;
            this.e("DefaultAxisMajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisMinorStroke", {
        get: function () {
            return this.h4;
        },
        set: function (a) {
            this.h4 = a;
            this.e("DefaultAxisMinorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "axes", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            this.gr = a;
            this.e("Axes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginLeft", {
        get: function () {
            return this.ha;
        },
        set: function (a) {
            this.ha = a;
            this.e("ActualPlotAreaMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginTop", {
        get: function () {
            return this.hc;
        },
        set: function (a) {
            this.hc = a;
            this.e("ActualPlotAreaMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginRight", {
        get: function () {
            return this.hb;
        },
        set: function (a) {
            this.hb = a;
            this.e("ActualPlotAreaMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginBottom", {
        get: function () {
            return this.g9;
        },
        set: function (a) {
            this.g9 = a;
            this.e("ActualPlotAreaMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "computedPlotAreaMarginMode", {
        get: function () {
            return this.h2;
        },
        set: function (a) {
            this.h2 = a;
            this.e("ComputedPlotAreaMarginMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "seriesPlotAreaMarginHorizontalMode", {
        get: function () {
            return this.h8;
        },
        set: function (a) {
            this.h8 = a;
            this.e("SeriesPlotAreaMarginHorizontalMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "seriesPlotAreaMarginVerticalMode", {
        get: function () {
            return this.h9;
        },
        set: function (a) {
            this.h9 = a;
            this.e("SeriesPlotAreaMarginVerticalMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginLeft", {
        get: function () {
            return this.hi;
        },
        set: function (a) {
            this.hi = a;
            this.e("PlotAreaMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginTop", {
        get: function () {
            return this.hk;
        },
        set: function (a) {
            this.hk = a;
            this.e("PlotAreaMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginRight", {
        get: function () {
            return this.hj;
        },
        set: function (a) {
            this.hj = a;
            this.e("PlotAreaMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginBottom", {
        get: function () {
            return this.hh;
        },
        set: function (a) {
            this.hh = a;
            this.e("PlotAreaMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "width", {
        get: function () {
            return this.ia;
        },
        set: function (a) {
            this.ia = a;
            this.e("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "height", {
        get: function () {
            return this.h7;
        },
        set: function (a) {
            this.h7 = a;
            this.e("Height");
        },
        enumerable: false,
        configurable: true
    });
    DataChartDescription.$t = markType(DataChartDescription, 'DataChartDescription', SeriesViewerDescription.$);
    return DataChartDescription;
}(SeriesViewerDescription));
export { DataChartDescription };
