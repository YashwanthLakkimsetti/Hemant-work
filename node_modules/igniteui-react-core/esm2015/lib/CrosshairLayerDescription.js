/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CrosshairLayerDescription = /*@__PURE__*/ (() => {
    class CrosshairLayerDescription extends AnnotationLayerDescription {
        constructor() {
            super();
            this.eb = null;
            this.ef = null;
            this.ed = null;
            this.ee = null;
            this.de = false;
            this.dc = false;
            this.ej = null;
            this.eh = null;
            this.di = 0;
            this.d7 = 0;
            this.ei = null;
            this.dk = 0;
            this.dm = 0;
            this.dl = 0;
            this.dj = 0;
            this.dr = 0;
            this.dt = 0;
            this.ds = 0;
            this.dq = 0;
            this.dn = 0;
            this.em = null;
            this.ek = null;
            this.dp = 0;
            this.d8 = 0;
            this.el = null;
            this.du = 0;
            this.eg = null;
            this.ec = null;
            this.dd = false;
        }
        get_type() {
            return "CrosshairLayer";
        }
        get horizontalLineStroke() {
            return this.eb;
        }
        set horizontalLineStroke(a) {
            this.eb = a;
            this.e("HorizontalLineStroke");
        }
        get verticalLineStroke() {
            return this.ef;
        }
        set verticalLineStroke(a) {
            this.ef = a;
            this.e("VerticalLineStroke");
        }
        get targetSeriesName() {
            return this.ed;
        }
        set targetSeriesName(a) {
            this.ed = a;
            this.e("TargetSeriesName");
        }
        get targetSeriesRef() {
            return this.ee;
        }
        set targetSeriesRef(a) {
            this.ee = a;
            this.e("TargetSeriesRef");
        }
        get useInterpolation() {
            return this.de;
        }
        set useInterpolation(a) {
            this.de = a;
            this.e("UseInterpolation");
        }
        get isAxisAnnotationEnabled() {
            return this.dc;
        }
        set isAxisAnnotationEnabled(a) {
            this.dc = a;
            this.e("IsAxisAnnotationEnabled");
        }
        get xAxisAnnotationTextColor() {
            return this.ej;
        }
        set xAxisAnnotationTextColor(a) {
            this.ej = a;
            this.e("XAxisAnnotationTextColor");
        }
        get xAxisAnnotationBackground() {
            return this.eh;
        }
        set xAxisAnnotationBackground(a) {
            this.eh = a;
            this.e("XAxisAnnotationBackground");
        }
        get xAxisAnnotationBackgroundCornerRadius() {
            return this.di;
        }
        set xAxisAnnotationBackgroundCornerRadius(a) {
            this.di = a;
            this.e("XAxisAnnotationBackgroundCornerRadius");
        }
        get xAxisAnnotationInterpolatedValuePrecision() {
            return this.d7;
        }
        set xAxisAnnotationInterpolatedValuePrecision(a) {
            this.d7 = a;
            this.e("XAxisAnnotationInterpolatedValuePrecision");
        }
        get xAxisAnnotationOutline() {
            return this.ei;
        }
        set xAxisAnnotationOutline(a) {
            this.ei = a;
            this.e("XAxisAnnotationOutline");
        }
        get xAxisAnnotationPaddingLeft() {
            return this.dk;
        }
        set xAxisAnnotationPaddingLeft(a) {
            this.dk = a;
            this.e("XAxisAnnotationPaddingLeft");
        }
        get xAxisAnnotationPaddingTop() {
            return this.dm;
        }
        set xAxisAnnotationPaddingTop(a) {
            this.dm = a;
            this.e("XAxisAnnotationPaddingTop");
        }
        get xAxisAnnotationPaddingRight() {
            return this.dl;
        }
        set xAxisAnnotationPaddingRight(a) {
            this.dl = a;
            this.e("XAxisAnnotationPaddingRight");
        }
        get xAxisAnnotationPaddingBottom() {
            return this.dj;
        }
        set xAxisAnnotationPaddingBottom(a) {
            this.dj = a;
            this.e("XAxisAnnotationPaddingBottom");
        }
        get yAxisAnnotationPaddingLeft() {
            return this.dr;
        }
        set yAxisAnnotationPaddingLeft(a) {
            this.dr = a;
            this.e("YAxisAnnotationPaddingLeft");
        }
        get yAxisAnnotationPaddingTop() {
            return this.dt;
        }
        set yAxisAnnotationPaddingTop(a) {
            this.dt = a;
            this.e("YAxisAnnotationPaddingTop");
        }
        get yAxisAnnotationPaddingRight() {
            return this.ds;
        }
        set yAxisAnnotationPaddingRight(a) {
            this.ds = a;
            this.e("YAxisAnnotationPaddingRight");
        }
        get yAxisAnnotationPaddingBottom() {
            return this.dq;
        }
        set yAxisAnnotationPaddingBottom(a) {
            this.dq = a;
            this.e("YAxisAnnotationPaddingBottom");
        }
        get xAxisAnnotationStrokeThickness() {
            return this.dn;
        }
        set xAxisAnnotationStrokeThickness(a) {
            this.dn = a;
            this.e("XAxisAnnotationStrokeThickness");
        }
        get yAxisAnnotationTextColor() {
            return this.em;
        }
        set yAxisAnnotationTextColor(a) {
            this.em = a;
            this.e("YAxisAnnotationTextColor");
        }
        get yAxisAnnotationBackground() {
            return this.ek;
        }
        set yAxisAnnotationBackground(a) {
            this.ek = a;
            this.e("YAxisAnnotationBackground");
        }
        get yAxisAnnotationBackgroundCornerRadius() {
            return this.dp;
        }
        set yAxisAnnotationBackgroundCornerRadius(a) {
            this.dp = a;
            this.e("YAxisAnnotationBackgroundCornerRadius");
        }
        get yAxisAnnotationInterpolatedValuePrecision() {
            return this.d8;
        }
        set yAxisAnnotationInterpolatedValuePrecision(a) {
            this.d8 = a;
            this.e("YAxisAnnotationInterpolatedValuePrecision");
        }
        get yAxisAnnotationOutline() {
            return this.el;
        }
        set yAxisAnnotationOutline(a) {
            this.el = a;
            this.e("YAxisAnnotationOutline");
        }
        get yAxisAnnotationStrokeThickness() {
            return this.du;
        }
        set yAxisAnnotationStrokeThickness(a) {
            this.du = a;
            this.e("YAxisAnnotationStrokeThickness");
        }
        get verticalLineVisibility() {
            return this.eg;
        }
        set verticalLineVisibility(a) {
            this.eg = a;
            this.e("VerticalLineVisibility");
        }
        get horizontalLineVisibility() {
            return this.ec;
        }
        set horizontalLineVisibility(a) {
            this.ec = a;
            this.e("HorizontalLineVisibility");
        }
        get skipUnknownValues() {
            return this.dd;
        }
        set skipUnknownValues(a) {
            this.dd = a;
            this.e("SkipUnknownValues");
        }
    }
    CrosshairLayerDescription.$t = /*@__PURE__*/ markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
})();
