/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ScatterBaseDescription = /*@__PURE__*/ (() => {
    class ScatterBaseDescription extends MarkerSeriesDescription {
        constructor() {
            super();
            this.d9 = null;
            this.ed = null;
            this.ec = null;
            this.eg = null;
            this.ea = null;
            this.ee = null;
            this.eb = null;
            this.ef = null;
            this.d8 = null;
            this.d7 = null;
            this.d2 = null;
            this.dr = 0;
            this.dv = 0;
            this.d6 = null;
            this.dw = 0;
            this.du = 0;
            this.d5 = null;
            this.dt = 0;
            this.d1 = null;
            this.dn = false;
            this.dm = false;
            this.d4 = null;
            this.d3 = null;
        }
        get_type() {
            return "ScatterBase";
        }
        get xAxisRef() {
            return this.d9;
        }
        set xAxisRef(a) {
            this.d9 = a;
            this.e("XAxisRef");
        }
        get yAxisRef() {
            return this.ed;
        }
        set yAxisRef(a) {
            this.ed = a;
            this.e("YAxisRef");
        }
        get xMemberPath() {
            return this.ec;
        }
        set xMemberPath(a) {
            this.ec = a;
            this.e("XMemberPath");
        }
        get yMemberPath() {
            return this.eg;
        }
        set yMemberPath(a) {
            this.eg = a;
            this.e("YMemberPath");
        }
        get xMemberAsLegendLabel() {
            return this.ea;
        }
        set xMemberAsLegendLabel(a) {
            this.ea = a;
            this.e("XMemberAsLegendLabel");
        }
        get yMemberAsLegendLabel() {
            return this.ee;
        }
        set yMemberAsLegendLabel(a) {
            this.ee = a;
            this.e("YMemberAsLegendLabel");
        }
        get xMemberAsLegendUnit() {
            return this.eb;
        }
        set xMemberAsLegendUnit(a) {
            this.eb = a;
            this.e("XMemberAsLegendUnit");
        }
        get yMemberAsLegendUnit() {
            return this.ef;
        }
        set yMemberAsLegendUnit(a) {
            this.ef = a;
            this.e("YMemberAsLegendUnit");
        }
        get trendLineType() {
            return this.d8;
        }
        set trendLineType(a) {
            this.d8 = a;
            this.e("TrendLineType");
        }
        get trendLineBrush() {
            return this.d7;
        }
        set trendLineBrush(a) {
            this.d7 = a;
            this.e("TrendLineBrush");
        }
        get actualTrendLineBrush() {
            return this.d2;
        }
        set actualTrendLineBrush(a) {
            this.d2 = a;
            this.e("ActualTrendLineBrush");
        }
        get trendLineThickness() {
            return this.dr;
        }
        set trendLineThickness(a) {
            this.dr = a;
            this.e("TrendLineThickness");
        }
        get trendLinePeriod() {
            return this.dv;
        }
        set trendLinePeriod(a) {
            this.dv = a;
            this.e("TrendLinePeriod");
        }
        get markerCollisionAvoidance() {
            return this.d6;
        }
        set markerCollisionAvoidance(a) {
            this.d6 = a;
            this.e("MarkerCollisionAvoidance");
        }
        get trendLineZIndex() {
            return this.dw;
        }
        set trendLineZIndex(a) {
            this.dw = a;
            this.e("TrendLineZIndex");
        }
        get maximumMarkers() {
            return this.du;
        }
        set maximumMarkers(a) {
            this.du = a;
            this.e("MaximumMarkers");
        }
        get itemSearchMode() {
            return this.d5;
        }
        set itemSearchMode(a) {
            this.d5 = a;
            this.e("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.dt;
        }
        set itemSearchThreshold(a) {
            this.dt = a;
            this.e("ItemSearchThreshold");
        }
        get actualItemSearchMode() {
            return this.d1;
        }
        set actualItemSearchMode(a) {
            this.d1 = a;
            this.e("ActualItemSearchMode");
        }
        get isCustomScatterStyleAllowed() {
            return this.dn;
        }
        set isCustomScatterStyleAllowed(a) {
            this.dn = a;
            this.e("IsCustomScatterStyleAllowed");
        }
        get isCustomScatterMarkerStyleAllowed() {
            return this.dm;
        }
        set isCustomScatterMarkerStyleAllowed(a) {
            this.dm = a;
            this.e("IsCustomScatterMarkerStyleAllowed");
        }
        get assigningScatterStyleRef() {
            return this.d4;
        }
        set assigningScatterStyleRef(a) {
            this.d4 = a;
            this.e("AssigningScatterStyleRef");
        }
        get assigningScatterMarkerStyleRef() {
            return this.d3;
        }
        set assigningScatterMarkerStyleRef(a) {
            this.d3 = a;
            this.e("AssigningScatterMarkerStyleRef");
        }
    }
    ScatterBaseDescription.$t = /*@__PURE__*/ markType(ScatterBaseDescription, 'ScatterBaseDescription', MarkerSeriesDescription.$);
    return ScatterBaseDescription;
})();
