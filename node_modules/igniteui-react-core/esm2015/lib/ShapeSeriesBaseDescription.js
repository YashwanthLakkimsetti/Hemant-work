/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ShapeSeriesBaseDescription = /*@__PURE__*/ (() => {
    class ShapeSeriesBaseDescription extends SeriesDescription {
        constructor() {
            super();
            this.c3 = false;
            this.c2 = false;
            this.dc = null;
            this.df = null;
            this.c9 = 0;
            this.c8 = 0;
            this.dg = null;
            this.di = null;
            this.dj = null;
            this.c6 = 0;
            this.de = null;
            this.dd = null;
            this.dh = null;
        }
        get_type() {
            return "ShapeSeriesBase";
        }
        get isCustomShapeStyleAllowed() {
            return this.c3;
        }
        set isCustomShapeStyleAllowed(a) {
            this.c3 = a;
            this.e("IsCustomShapeStyleAllowed");
        }
        get isCustomShapeMarkerStyleAllowed() {
            return this.c2;
        }
        set isCustomShapeMarkerStyleAllowed(a) {
            this.c2 = a;
            this.e("IsCustomShapeMarkerStyleAllowed");
        }
        get actualItemSearchMode() {
            return this.dc;
        }
        set actualItemSearchMode(a) {
            this.dc = a;
            this.e("ActualItemSearchMode");
        }
        get itemSearchMode() {
            return this.df;
        }
        set itemSearchMode(a) {
            this.df = a;
            this.e("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.c9;
        }
        set itemSearchThreshold(a) {
            this.c9 = a;
            this.e("ItemSearchThreshold");
        }
        get itemSearchPointsThreshold() {
            return this.c8;
        }
        set itemSearchPointsThreshold(a) {
            this.c8 = a;
            this.e("ItemSearchPointsThreshold");
        }
        get shapeMemberPath() {
            return this.dg;
        }
        set shapeMemberPath(a) {
            this.dg = a;
            this.e("ShapeMemberPath");
        }
        get xAxisRef() {
            return this.di;
        }
        set xAxisRef(a) {
            this.di = a;
            this.e("XAxisRef");
        }
        get yAxisRef() {
            return this.dj;
        }
        set yAxisRef(a) {
            this.dj = a;
            this.e("YAxisRef");
        }
        get shapeFilterResolution() {
            return this.c6;
        }
        set shapeFilterResolution(a) {
            this.c6 = a;
            this.e("ShapeFilterResolution");
        }
        get assigningShapeStyleRef() {
            return this.de;
        }
        set assigningShapeStyleRef(a) {
            this.de = a;
            this.e("AssigningShapeStyleRef");
        }
        get assigningShapeMarkerStyleRef() {
            return this.dd;
        }
        set assigningShapeMarkerStyleRef(a) {
            this.dd = a;
            this.e("AssigningShapeMarkerStyleRef");
        }
        get styleShapeRef() {
            return this.dh;
        }
        set styleShapeRef(a) {
            this.dh = a;
            this.e("StyleShapeRef");
        }
    }
    ShapeSeriesBaseDescription.$t = /*@__PURE__*/ markType(ShapeSeriesBaseDescription, 'ShapeSeriesBaseDescription', SeriesDescription.$);
    return ShapeSeriesBaseDescription;
})();
