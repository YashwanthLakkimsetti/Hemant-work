import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class DataToolTipLayerDescription extends AnnotationLayerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private h8;
    get targetAxisRef(): string;
    set targetAxisRef(a: string);
    private dr;
    get useInterpolation(): boolean;
    set useInterpolation(a: boolean);
    private g9;
    get groupingMode(): string;
    set groupingMode(a: string);
    private g5;
    get actualGroupingMode(): string;
    set actualGroupingMode(a: string);
    private el;
    get positionOffsetX(): number;
    set positionOffsetX(a: number);
    private em;
    get positionOffsetY(): number;
    set positionOffsetY(a: number);
    private d5;
    get defaultPositionOffsetX(): number;
    set defaultPositionOffsetX(a: number);
    private d6;
    get defaultPositionOffsetY(): number;
    set defaultPositionOffsetY(a: number);
    private g7;
    get groupedPositionModeX(): string;
    set groupedPositionModeX(a: string);
    private g3;
    get actualGroupedPositionModeX(): string;
    set actualGroupedPositionModeX(a: string);
    private g8;
    get groupedPositionModeY(): string;
    set groupedPositionModeY(a: string);
    private g4;
    get actualGroupedPositionModeY(): string;
    set actualGroupedPositionModeY(a: string);
    private dq;
    get shouldUpdateWhenSeriesDataChanges(): boolean;
    set shouldUpdateWhenSeriesDataChanges(a: boolean);
    private dg;
    get includedSeries(): string[];
    set includedSeries(a: string[]);
    private dd;
    get excludedSeries(): string[];
    set excludedSeries(a: string[]);
    private df;
    get includedColumns(): string[];
    set includedColumns(a: string[]);
    private dc;
    get excludedColumns(): string[];
    set excludedColumns(a: string[]);
    private ik;
    get valueFormatAbbreviation(): string;
    set valueFormatAbbreviation(a: string);
    private gz;
    get valueFormatMaxFractions(): number;
    set valueFormatMaxFractions(a: number);
    private g0;
    get valueFormatMinFractions(): number;
    set valueFormatMinFractions(a: number);
    private im;
    get valueFormatMode(): string;
    set valueFormatMode(a: string);
    private il;
    get valueFormatCulture(): string;
    set valueFormatCulture(a: string);
    private ds;
    get valueFormatUseGrouping(): boolean;
    set valueFormatUseGrouping(a: boolean);
    private io;
    get valueFormatString(): string;
    set valueFormatString(a: string);
    private dh;
    get valueFormatSpecifiers(): FormatSpecifierDescription[];
    set valueFormatSpecifiers(a: FormatSpecifierDescription[]);
    private e9;
    get valueRowMarginBottom(): number;
    set valueRowMarginBottom(a: number);
    private fa;
    get valueRowMarginLeft(): number;
    set valueRowMarginLeft(a: number);
    private fb;
    get valueRowMarginRight(): number;
    set valueRowMarginRight(a: number);
    private fc;
    get valueRowMarginTop(): number;
    set valueRowMarginTop(a: number);
    private dt;
    get valueRowVisible(): boolean;
    set valueRowVisible(a: boolean);
    private it;
    get valueTextWhenMissingData(): string;
    set valueTextWhenMissingData(a: string);
    private du;
    get valueTextUseSeriesColors(): boolean;
    set valueTextUseSeriesColors(a: boolean);
    private fe;
    get valueTextMarginBottom(): number;
    set valueTextMarginBottom(a: number);
    private ff;
    get valueTextMarginLeft(): number;
    set valueTextMarginLeft(a: number);
    private fg;
    get valueTextMarginRight(): number;
    set valueTextMarginRight(a: number);
    private fh;
    get valueTextMarginTop(): number;
    set valueTextMarginTop(a: number);
    private ip;
    get valueTextColor(): string;
    set valueTextColor(a: string);
    private iq;
    get valueTextFontFamily(): string;
    set valueTextFontFamily(a: string);
    private fd;
    get valueTextFontSize(): number;
    set valueTextFontSize(a: number);
    private ir;
    get valueTextFontStyle(): string;
    set valueTextFontStyle(a: string);
    private is;
    get valueTextFontWeight(): string;
    set valueTextFontWeight(a: string);
    private hc;
    get headerFormatString(): string;
    set headerFormatString(a: string);
    private de;
    get headerFormatSpecifiers(): FormatSpecifierDescription[];
    set headerFormatSpecifiers(a: FormatSpecifierDescription[]);
    private ha;
    get headerFormatCulture(): string;
    set headerFormatCulture(a: string);
    private hb;
    get headerFormatDate(): string;
    set headerFormatDate(a: string);
    private hd;
    get headerFormatTime(): string;
    set headerFormatTime(a: string);
    private he;
    get headerText(): string;
    set headerText(a: string);
    private hf;
    get headerTextColor(): string;
    set headerTextColor(a: string);
    private ec;
    get headerTextMarginBottom(): number;
    set headerTextMarginBottom(a: number);
    private ed;
    get headerTextMarginLeft(): number;
    set headerTextMarginLeft(a: number);
    private ee;
    get headerTextMarginRight(): number;
    set headerTextMarginRight(a: number);
    private ef;
    get headerTextMarginTop(): number;
    set headerTextMarginTop(a: number);
    private d7;
    get headerRowMarginBottom(): number;
    set headerRowMarginBottom(a: number);
    private d8;
    get headerRowMarginLeft(): number;
    set headerRowMarginLeft(a: number);
    private d9;
    get headerRowMarginRight(): number;
    set headerRowMarginRight(a: number);
    private ea;
    get headerRowMarginTop(): number;
    set headerRowMarginTop(a: number);
    private dp;
    get headerRowVisible(): boolean;
    set headerRowVisible(a: boolean);
    private hg;
    get headerTextFontFamily(): string;
    set headerTextFontFamily(a: string);
    private eb;
    get headerTextFontSize(): number;
    set headerTextFontSize(a: number);
    private hh;
    get headerTextFontStyle(): string;
    set headerTextFontStyle(a: string);
    private hi;
    get headerTextFontWeight(): string;
    set headerTextFontWeight(a: string);
    private hu;
    get summaryTitleTextColor(): string;
    set summaryTitleTextColor(a: string);
    private hv;
    get summaryTitleTextFontFamily(): string;
    set summaryTitleTextFontFamily(a: string);
    private es;
    get summaryTitleTextFontSize(): number;
    set summaryTitleTextFontSize(a: number);
    private hw;
    get summaryTitleTextFontStyle(): string;
    set summaryTitleTextFontStyle(a: string);
    private hx;
    get summaryTitleTextFontWeight(): string;
    set summaryTitleTextFontWeight(a: string);
    private hy;
    get summaryType(): string;
    set summaryType(a: string);
    private ht;
    get summaryTitleText(): string;
    set summaryTitleText(a: string);
    private et;
    get summaryTitleTextMarginBottom(): number;
    set summaryTitleTextMarginBottom(a: number);
    private eu;
    get summaryTitleTextMarginLeft(): number;
    set summaryTitleTextMarginLeft(a: number);
    private ev;
    get summaryTitleTextMarginRight(): number;
    set summaryTitleTextMarginRight(a: number);
    private ew;
    get summaryTitleTextMarginTop(): number;
    set summaryTitleTextMarginTop(a: number);
    private eo;
    get summaryRowMarginBottom(): number;
    set summaryRowMarginBottom(a: number);
    private ep;
    get summaryRowMarginLeft(): number;
    set summaryRowMarginLeft(a: number);
    private eq;
    get summaryRowMarginRight(): number;
    set summaryRowMarginRight(a: number);
    private er;
    get summaryRowMarginTop(): number;
    set summaryRowMarginTop(a: number);
    private h4;
    get summaryValueTextColor(): string;
    set summaryValueTextColor(a: string);
    private h5;
    get summaryValueTextFontFamily(): string;
    set summaryValueTextFontFamily(a: string);
    private ey;
    get summaryValueTextFontSize(): number;
    set summaryValueTextFontSize(a: number);
    private h6;
    get summaryValueTextFontStyle(): string;
    set summaryValueTextFontStyle(a: string);
    private h7;
    get summaryValueTextFontWeight(): string;
    set summaryValueTextFontWeight(a: string);
    private ho;
    get summaryLabelText(): string;
    set summaryLabelText(a: string);
    private hp;
    get summaryLabelTextColor(): string;
    set summaryLabelTextColor(a: string);
    private hq;
    get summaryLabelTextFontFamily(): string;
    set summaryLabelTextFontFamily(a: string);
    private en;
    get summaryLabelTextFontSize(): number;
    set summaryLabelTextFontSize(a: number);
    private hr;
    get summaryLabelTextFontStyle(): string;
    set summaryLabelTextFontStyle(a: string);
    private hs;
    get summaryLabelTextFontWeight(): string;
    set summaryLabelTextFontWeight(a: string);
    private hz;
    get summaryUnitsText(): string;
    set summaryUnitsText(a: string);
    private h0;
    get summaryUnitsTextColor(): string;
    set summaryUnitsTextColor(a: string);
    private h1;
    get summaryUnitsTextFontFamily(): string;
    set summaryUnitsTextFontFamily(a: string);
    private ex;
    get summaryUnitsTextFontSize(): number;
    set summaryUnitsTextFontSize(a: number);
    private h2;
    get summaryUnitsTextFontStyle(): string;
    set summaryUnitsTextFontStyle(a: string);
    private h3;
    get summaryUnitsTextFontWeight(): string;
    set summaryUnitsTextFontWeight(a: string);
    private d1;
    get badgeMarginBottom(): number;
    set badgeMarginBottom(a: number);
    private d2;
    get badgeMarginLeft(): number;
    set badgeMarginLeft(a: number);
    private d3;
    get badgeMarginRight(): number;
    set badgeMarginRight(a: number);
    private d4;
    get badgeMarginTop(): number;
    set badgeMarginTop(a: number);
    private g6;
    get badgeShape(): string;
    set badgeShape(a: string);
    private id;
    get unitsDisplayMode(): string;
    set unitsDisplayMode(a: string);
    private ie;
    get unitsText(): string;
    set unitsText(a: string);
    private ig;
    get unitsTextColor(): string;
    set unitsTextColor(a: string);
    private e5;
    get unitsTextMarginBottom(): number;
    set unitsTextMarginBottom(a: number);
    private e6;
    get unitsTextMarginLeft(): number;
    set unitsTextMarginLeft(a: number);
    private e7;
    get unitsTextMarginRight(): number;
    set unitsTextMarginRight(a: number);
    private e8;
    get unitsTextMarginTop(): number;
    set unitsTextMarginTop(a: number);
    private ih;
    get unitsTextFontFamily(): string;
    set unitsTextFontFamily(a: string);
    private e4;
    get unitsTextFontSize(): number;
    set unitsTextFontSize(a: number);
    private ii;
    get unitsTextFontStyle(): string;
    set unitsTextFontStyle(a: string);
    private ij;
    get unitsTextFontWeight(): string;
    set unitsTextFontWeight(a: string);
    private e0;
    get titleTextMarginBottom(): number;
    set titleTextMarginBottom(a: number);
    private e1;
    get titleTextMarginLeft(): number;
    set titleTextMarginLeft(a: number);
    private e2;
    get titleTextMarginRight(): number;
    set titleTextMarginRight(a: number);
    private e3;
    get titleTextMarginTop(): number;
    set titleTextMarginTop(a: number);
    private h9;
    get titleTextColor(): string;
    set titleTextColor(a: string);
    private ia;
    get titleTextFontFamily(): string;
    set titleTextFontFamily(a: string);
    private ez;
    get titleTextFontSize(): number;
    set titleTextFontSize(a: number);
    private ib;
    get titleTextFontStyle(): string;
    set titleTextFontStyle(a: string);
    private ic;
    get titleTextFontWeight(): string;
    set titleTextFontWeight(a: string);
    private hj;
    get labelDisplayMode(): string;
    set labelDisplayMode(a: string);
    private hk;
    get labelTextColor(): string;
    set labelTextColor(a: string);
    private eh;
    get labelTextMarginBottom(): number;
    set labelTextMarginBottom(a: number);
    private ei;
    get labelTextMarginLeft(): number;
    set labelTextMarginLeft(a: number);
    private ej;
    get labelTextMarginRight(): number;
    set labelTextMarginRight(a: number);
    private ek;
    get labelTextMarginTop(): number;
    set labelTextMarginTop(a: number);
    private hl;
    get labelTextFontFamily(): string;
    set labelTextFontFamily(a: string);
    private eg;
    get labelTextFontSize(): number;
    set labelTextFontSize(a: number);
    private hm;
    get labelTextFontStyle(): string;
    set labelTextFontStyle(a: string);
    private hn;
    get labelTextFontWeight(): string;
    set labelTextFontWeight(a: string);
}
