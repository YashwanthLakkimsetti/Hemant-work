import { IgRect } from "igniteui-react-core";
import { IgPoint } from "igniteui-react-core";
import { IgrCategoryAxisBase, IIgrCategoryAxisBaseProps } from "./igr-category-axis-base";
import { CategoryYAxis } from "./CategoryYAxis";
/**
 * Represents a IgxDataChartComponent category Y axis.
*/
export declare class IgrCategoryYAxis extends IgrCategoryAxisBase<IIgrCategoryYAxisProps> {
    protected createImplementation(): CategoryYAxis;
    /**
                                 * @hidden
                                 */
    get i(): CategoryYAxis;
    constructor(props: IIgrCategoryYAxisProps);
    /**
     * Gets if the current axis is a vertical axis.
    */
    get isVertical(): boolean;
    /**
     * Gets or sets the frequency of displayed labels.
     * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
    */
    get interval(): number;
    set interval(v: number);
    /**
     * Gets the effective value for the current Interval.
    */
    get actualInterval(): number;
    set actualInterval(v: number);
    /**
     * Gets or sets the frequency of displayed minor lines.
     * The set value is a factor that determines how the minor lines will be displayed.
    */
    get minorInterval(): number;
    set minorInterval(v: number);
    /**
     * Gets the effective value for the current MinorInterval.
    */
    get actualMinorInterval(): number;
    set actualMinorInterval(v: number);
    getCategoryBoundingBox(point: IgPoint, useInterpolation: boolean, singularWidth: number): IgRect;
    scrollRangeIntoView(minimum: number, maximum: number): void;
    /**
     * Scrolls the specified item into view.
    
    * @param item  * Data item to scroll into view
    */
    scrollIntoView(item: any): void;
    private _actualIntervalChange;
    private _actualIntervalChange_wrapped;
    get actualIntervalChange(): (s: IgrCategoryYAxis, e: number) => void;
    set actualIntervalChange(ev: (s: IgrCategoryYAxis, e: number) => void);
    private _actualMinorIntervalChange;
    private _actualMinorIntervalChange_wrapped;
    get actualMinorIntervalChange(): (s: IgrCategoryYAxis, e: number) => void;
    set actualMinorIntervalChange(ev: (s: IgrCategoryYAxis, e: number) => void);
}
export interface IIgrCategoryYAxisProps extends IIgrCategoryAxisBaseProps {
    /**
     * Gets or sets the frequency of displayed labels.
     * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
    */
    interval?: number | string;
    /**
     * Gets the effective value for the current Interval.
    */
    actualInterval?: number | string;
    /**
     * Gets or sets the frequency of displayed minor lines.
     * The set value is a factor that determines how the minor lines will be displayed.
    */
    minorInterval?: number | string;
    /**
     * Gets the effective value for the current MinorInterval.
    */
    actualMinorInterval?: number | string;
}
