import { AnnotationLayer } from "./AnnotationLayer";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryHighlightLayerFrame } from "./CategoryHighlightLayerFrame";
import { Type } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { Axis } from "./Axis";
import { Frame } from "./Frame";
import { CategoryHighlightFrameRect } from "./CategoryHighlightFrameRect";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { Brush } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CategoryHighlightLayer extends AnnotationLayer {
    static $t: Type;
    protected get_db(): boolean;
    constructor();
    protected bx(): SeriesView;
    ly(a: SeriesView): void;
    protected q8: CategoryHighlightLayerView;
    q7: CategoryAxisBase;
    ra: boolean;
    get rb(): number;
    set rb(a: number);
    static readonly ri: DependencyProperty;
    protected qn(a: Axis, b: boolean): void;
    private q9;
    protected qq(a: Frame, b: SeriesView): void;
    private rg;
    rf(a: Rect, b: CategoryHighlightLayerFrame, c: Axis): void;
    protected qt(a: Frame, b: SeriesView): void;
    protected em(): boolean;
    rh(a: CategoryHighlightFrameRect, b: Rectangle): void;
    protected l3(a: any, b: string, c: any, d: any): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryHighlightLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CategoryHighlightLayer);
    protected b4: CategoryHighlightLayer;
    b5: Pool$1<Rectangle>;
    as(): void;
    protected b6: List$1<Rectangle>;
    private cd;
    private b8;
    private ca;
    private b9;
    cb(a: Brush): Brush;
    cc(a: Brush): Brush;
    b7(a: Rectangle, b: number, c: number, d: number, e: number): void;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
}
