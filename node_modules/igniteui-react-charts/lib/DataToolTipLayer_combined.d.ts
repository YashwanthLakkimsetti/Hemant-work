import { AnnotationLayer } from "./AnnotationLayer";
import { Axis } from "./Axis";
import { DataToolTipLayerGroupingMode } from "igniteui-react-core";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core";
import { Point, Type } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { DataTooltipGroupedPositionX } from "igniteui-react-core";
import { DataTooltipGroupedPositionY } from "igniteui-react-core";
import { DataAbbreviationMode } from "igniteui-react-core";
import { DataLegendValueMode } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { DataLegendHeaderDateMode } from "igniteui-react-core";
import { DataLegendHeaderTimeMode } from "igniteui-react-core";
import { DataLegendSummaryType } from "igniteui-react-core";
import { LegendItemBadgeShape } from "igniteui-react-core";
import { DataLegendUnitsMode } from "igniteui-react-core";
import { DataLegendLabelMode } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { IDataLegend } from "igniteui-react-core";
import { Frame } from "./Frame";
import { Pool$1 } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { PointerTooltip } from "./PointerTooltip";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class DataToolTipLayer extends AnnotationLayer {
    static $t: Type;
    protected get_db(): boolean;
    constructor();
    protected bx(): SeriesView;
    ly(a: SeriesView): void;
    protected r0: DataToolTipLayerView;
    protected get_dk(): boolean;
    rg: Axis;
    su: boolean;
    ry: DataToolTipLayerGroupingMode;
    private rw;
    get rx(): DataToolTipLayerGroupingMode;
    set rx(a: DataToolTipLayerGroupingMode);
    private rz;
    protected l3(a: any, b: string, c: any, d: any): void;
    private sy;
    private sz;
    private wg;
    wk(a: string, b: any): void;
    private wh;
    protected qn(a: Axis, b: boolean): void;
    protected qo(a: Series, b: boolean): void;
    protected qq(a: Frame, b: SeriesView): void;
    private s0;
    private rf;
    private r1;
    ld(): void;
    get yk(): Rect;
    get yj(): Rect;
    get yi(): Rect;
    get ym(): Rect;
    private yl;
    private sq;
    private sn;
    private so;
    private sp;
    private tt;
    private tr;
    private ts;
    private t2;
    private t0;
    private t1;
    private tw;
    private tu;
    private tv;
    private tc;
    private te;
    private td;
    private tl;
    private tn;
    private tm;
    private ti;
    private tk;
    private tj;
    private s8;
    private tf;
    private tg;
    private th;
    private s9;
    private ta;
    private tb;
    private tq;
    private tp;
    private to;
    private tz;
    private ty;
    private tx;
    private s7;
    private yh;
    private s6;
    private s5;
    private ra;
    private q9;
    private sr;
    private ss;
    private wf;
    private sl;
    private wj;
    private wi;
    private t5;
    protected qt(a: Frame, b: SeriesView): void;
    protected em(): boolean;
    s3: number;
    s4: number;
    s1: number;
    s2: number;
    rq: DataTooltipGroupedPositionX;
    private ro;
    get rp(): DataTooltipGroupedPositionX;
    set rp(a: DataTooltipGroupedPositionX);
    private rr;
    ru: DataTooltipGroupedPositionY;
    private rs;
    get rt(): DataTooltipGroupedPositionY;
    set rt(a: DataTooltipGroupedPositionY);
    private rv;
    st: boolean;
    rd: string[];
    q8: string[];
    rc: string[];
    q7: string[];
    rh: DataAbbreviationMode;
    t3: number;
    t4: number;
    rn: DataLegendValueMode;
    vy: string;
    sv: boolean;
    v4: string;
    re: any[];
    yv: Thickness;
    sw: boolean;
    wd: string;
    sx: boolean;
    yw: Thickness;
    yg: Brush;
    private sb;
    get sk(): FontInfo;
    set sk(a: FontInfo);
    um: string;
    rb: any[];
    ui: string;
    ri: DataLegendHeaderDateMode;
    rj: DataLegendHeaderTimeMode;
    ur: string;
    x8: Brush;
    yp: Thickness;
    yo: Thickness;
    sm: boolean;
    private r3;
    get sc(): FontInfo;
    set sc(a: FontInfo);
    yb: Brush;
    private r6;
    get sf(): FontInfo;
    set sf(a: FontInfo);
    rl: DataLegendSummaryType;
    va: string;
    ys: Thickness;
    yr: Thickness;
    yd: Brush;
    private r8;
    get sh(): FontInfo;
    set sh(a: FontInfo);
    u5: string;
    ya: Brush;
    private r5;
    get se(): FontInfo;
    set se(a: FontInfo);
    vg: string;
    yc: Brush;
    private r7;
    get sg(): FontInfo;
    set sg(a: FontInfo);
    yn: Thickness;
    r2: LegendItemBadgeShape;
    rm: DataLegendUnitsMode;
    vr: string;
    yf: Brush;
    yu: Thickness;
    private sa;
    get sj(): FontInfo;
    set sj(a: FontInfo);
    yt: Thickness;
    ye: Brush;
    private r9;
    get si(): FontInfo;
    set si(a: FontInfo);
    rk: DataLegendLabelMode;
    x9: Brush;
    yq: Thickness;
    private r4;
    get sd(): FontInfo;
    set sd(a: FontInfo);
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class DataToolTipLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: DataToolTipLayer);
    b6: Pool$1<any>;
    aj(): void;
    protected b9: List$1<PointerTooltip>;
    private ca;
    private cc;
    private ce;
    private cd;
    protected b4: DataToolTipLayer;
    private b7;
    as(): void;
    private _htmlTest;
    protected get htmlTest(): any;
    protected set htmlTest(a: any);
    b8(a: any, b: Series): boolean;
    cm(a: any): Size;
    cl(): Rect;
    ck(): Rect;
    cj(): Rect;
    ci(a: Point): Point;
    cg(a: any, b: number, c: number, d: number, e: number): void;
    cn(): Size;
    cf(a: any): void;
    ch(): void;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
    b5(a: any): IDataLegend;
}
