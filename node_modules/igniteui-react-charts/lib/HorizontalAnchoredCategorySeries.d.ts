import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { IHorizontalAnchoredCategorySeriesInteractionManager } from "./IHorizontalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericYAxis } from "./NumericYAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryMode } from "./CategoryMode";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { FastItemsSourceEventAction } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class HorizontalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    private ur;
    get us(): IHorizontalAnchoredCategorySeriesInteractionManager;
    ku(): void;
    bv(): SeriesPlotAreaMarginHorizontalMode;
    bw(): SeriesPlotAreaMarginVerticalMode;
    xAxis: CategoryAxisBase;
    yAxis: NumericYAxis;
    protected bp(): SeriesHitTestMode;
    rn(): CategoryAxisBase;
    r8(): NumericAxisBase;
    pw(a: Point): Rect;
    private u5;
    protected ux(a: Point, b: Point, c: boolean): boolean;
    ah(a: Point): Point[][];
    ai(a: Point): Point[][];
    ev(a: Point, b: boolean): boolean;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    gj(a: Point, b: boolean, c: boolean): number;
    hj(a: Point, b: boolean): number;
    hh(a: Point, b: boolean): number;
    f3(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    pl(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    t3(a: Axis): void;
    t4(a: Axis): void;
    si(): boolean;
    protected un: CategoryAxisBase;
    protected ut: NumericAxisBase;
    u1(a: CategoryAxisBase): void;
    u2(a: NumericYAxis): void;
    rh(a: number, b: number): any[];
    protected l3(a: any, b: string, c: any, d: any): void;
    protected k0(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    uv(a: any): boolean;
    uw(a: any): boolean;
    private up;
    get uq(): CategoryMode;
    set uq(a: CategoryMode);
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
