import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries } from "./ITrendLineSeries";
import { TrendLineType } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PriceDisplayType } from "./PriceDisplayType";
import { SeriesView } from "./SeriesView";
import { Type, Point } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { ITrendLineManager } from "./ITrendLineManager";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { GeometryGroup } from "igniteui-react-core";
import { LegendItemBadgeShape } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class FinancialPriceSeries extends FinancialSeries implements ITrendLineSeries {
    static $t: Type;
    protected get_ds(): boolean;
    protected gu(): number;
    protected bx(): SeriesView;
    ly(a: SeriesView): void;
    tm: FinancialPriceSeriesView;
    constructor();
    trendLineType: TrendLineType;
    trendLineBrush: Brush;
    get uu(): Brush;
    set uu(a: Brush);
    static readonly uc: DependencyProperty;
    trendLineThickness: number;
    ux: PenLineCap;
    uw: DoubleCollection;
    trendLinePeriod: number;
    tq: number;
    protected k0(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    tn: PriceDisplayType;
    protected bp(): SeriesHitTestMode;
    pu(a: Point): Rect;
    private tl;
    ak(a: Point): Rect[];
    ev(a: Point, b: boolean): boolean;
    protected ey(a: Point, b: boolean): boolean;
    protected l3(a: any, b: string, c: any, d: any): void;
    private ub;
    ap(a: Axis): AxisRange;
    aq(a: Rect): AxisRange;
    gc(): number;
    en(a: any): boolean;
    e9(a: Rect, b: Rect, c: SeriesView): boolean;
    s2(a: CategoryFrame, b: FinancialSeriesView): void;
    kx(a: boolean, b: SeriesView): void;
    protected m4(a: Rect, b: Rect): void;
    p0(a: SeriesPlotAreaMarginHorizontalMode, b: SeriesPlotAreaMarginVerticalMode): Thickness;
    protected get_c2(): boolean;
    s4(a: CategoryFrame, b: FinancialSeriesView): void;
    ga(): number;
    private ua;
    private to;
    private t9;
    hz(a: any, b: Point): any;
    protected mv(): void;
    protected k7(a: any): void;
    uv: Brush;
    o9(): Brush;
    mm(a: Brush, b: Brush): void;
    protected ba(a: LegendItemBadgeShape): LegendItemBadgeShape;
    t0: string;
    tw: string;
    tr: string;
    t5: string;
    t2: string;
    ty: string;
    tt: string;
    t7: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class FinancialPriceSeriesView extends FinancialSeriesView {
    static $t: Type;
    protected b3: FinancialPriceSeries;
    constructor(a: FinancialPriceSeries);
    b6: Pool$1<Path>;
    co(): Path;
    protected b9: List$1<Path>;
    ce(a: Path): void;
    cg(a: Path): void;
    cf(a: Path): void;
    protected by(): FinancialBucketCalculator;
    as(): void;
    private cn;
    private cm;
    private b4;
    get b5(): ITrendLineManager;
    set b5(a: ITrendLineManager);
    get b7(): boolean;
    ch(): void;
    cb(): void;
    ca(): void;
    ck(): GeometryGroup;
    cj(): GeometryGroup;
    ci(): void;
    protected bb(): void;
    protected bc(): void;
    protected ac(a: number): any;
    private cl;
    protected ab(a: number): any;
    protected a6(a: RenderingContext, b: boolean): void;
    protected a5(a: RenderingContext, b: boolean): void;
    al(a: any): void;
    cc(): void;
    b8: boolean;
    cd(): void;
}
