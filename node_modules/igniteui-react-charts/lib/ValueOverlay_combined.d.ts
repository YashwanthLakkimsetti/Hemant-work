import { Series } from "./Series";
import { IHasCategoryModePreference } from "./IHasCategoryModePreference";
import { Axis } from "./Axis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Type, Point } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { Rect } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Geometry } from "igniteui-react-core";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ValueOverlay extends Series implements IHasCategoryModePreference {
    static $t: Type;
    constructor();
    p3: Axis;
    qm: number;
    qk: number;
    ql: number;
    qh: number;
    gj(a: Point, b: boolean, c: boolean): number;
    qi(a: Point, b: Point): number;
    pl(a: Point, b: boolean, c: boolean): Point;
    hd(a: Point): number;
    ht(a: Point): any;
    en(a: any): boolean;
    ap(a: Axis): AxisRange;
    mi(a: boolean): void;
    qj(): number;
    q4(a: number, b: ValueOverlayView): void;
    e9(a: Rect, b: Rect, c: SeriesView): boolean;
    protected m5(a: Rect, b: Rect): void;
    protected m4(a: Rect, b: Rect): void;
    protected k0(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected l3(a: any, b: string, c: any, d: any): void;
    le(): void;
    kx(a: boolean, b: SeriesView): void;
    private p8;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    get categoryAxis(): CategoryAxisBase;
    protected bx(): SeriesView;
    ly(a: SeriesView): void;
    private p6;
    mj(a: Rect, b: RenderSurface): void;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    p7: boolean;
    p5: (item: any) => string;
    rm: Brush;
    rk: Brush;
    qb: number;
    qn: number;
    rl: Brush;
    get rn(): Thickness;
    qd: number;
    qf: number;
    qe: number;
    qc: number;
    qg: number;
    ag(): Axis[];
    private p4;
    private qa;
    private p9;
    protected q5(a: number, b: boolean): void;
    protected get_isValueOverlay(): boolean;
    q0(a: number): string;
    get q2(): string;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ValueOverlayView extends SeriesView {
    static $t: Type;
    constructor(a: ValueOverlay);
    private bz;
    protected bb(): void;
    protected bc(): void;
    by(a: Geometry): void;
    bx(): void;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
}
