/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { UnknownValuePlotting_$type } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Array_$type, Point_$type, runOn, enumGetBox, markType, markDep } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ViewportUtils } from "./ViewportUtils";
import { PropertyMetadata } from "igniteui-react-core";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
import { Defaults } from "./Defaults";
/**
 * @hidden
 */
var RadialAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialAreaSeries, _super);
    function RadialAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = RadialAreaSeries.$;
        return _this;
    }
    RadialAreaSeries.prototype.get_dd = function () {
        return true;
    };
    RadialAreaSeries.prototype.bx = function () {
        return new RadialAreaSeriesView(this);
    };
    RadialAreaSeries.prototype.ly = function (a) {
        _super.prototype.ly.call(this, a);
        this.t6 = a;
    };
    RadialAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    RadialAreaSeries.prototype.kx = function (a, b) {
        _super.prototype.kx.call(this, a, b);
        this.t6.c1();
    };
    RadialAreaSeries.prototype.sp = function (a, b) {
        _super.prototype.sp.call(this, a, b);
        var c = b.bv;
        var d = b.bu;
        var e = b;
        if (b.o() && !c.isEmpty && !d.isEmpty && this.rk != null && this.rr != null) {
            var f = a.f;
            var g = f.count;
            var h = new List$1(Array_$type, 2, g);
            var i = 0;
            for (var j = 0; j < g; j++) {
                var k = new Array(4);
                h.add(k);
                k[0] = this.rs.d(a.f._inner[j][0], a.f._inner[j][1], c, d);
                k[1] = this.rs.e(a.f._inner[j][0], a.f._inner[j][1], c, d);
                k[2] = this.rs.d(a.f._inner[j][0], a.f._inner[j][2], c, d);
                var l = a.f._inner[j][2];
                k[3] = this.rs.e(a.f._inner[j][0], l, c, d);
                if (l > i) {
                    i = l;
                }
            }
            var m = ViewportUtils.c(0.5, c, d);
            var n = ViewportUtils.f(0.5, c, d);
            this.t5 = { $type: Point_$type, x: m, y: n };
            var o = this.getEffectiveViewport1(e);
            this.ry.a0(this, this.sa(), runOn(this, this.rh), this.sc(b), this.sd(b));
            var p = false;
            var q = this.ry.b;
            if (q != null) {
                p = true;
            }
            if (p) {
                var r = new ScalerParams(0, b.bv, b.bu, this.rk.cg, o);
                this.to(f, -1, this.s3.count, this.rk, r, b.q);
            }
            var s = e.c9;
            var t = e.da;
            var u = e.c7;
            var v = e.c8;
            this.ry.ad(s, true, false, true, true);
            this.ry.ad(t, true, false, true, true);
            this.ry.ad(u, false, true, false, false);
            this.ry.ad(v, false, true, false, false);
            e.c2(a.f.count, h, false, this.t6.cs.b, this.ft, runOn(this, this.tp), this.t7);
            u._opacity = this.ry.j * this.fq;
            v._opacity = 0.5 * this.ry.j * this.fq;
        }
    };
    RadialAreaSeries.prototype.l3 = function (a, b, c, d) {
        _super.prototype.l3.call(this, a, b, c, d);
        switch (b) {
            case RadialAreaSeries.$$p[0]:
                this.mh(false);
                this.lo();
                break;
        }
    };
    RadialAreaSeries.prototype.get_s6 = function () {
        return true;
    };
    RadialAreaSeries.$t = markType(RadialAreaSeries, 'RadialAreaSeries', AnchoredRadialSeries.$);
    RadialAreaSeries.$$p = markDep(DependencyProperty, PropertyMetadata, RadialAreaSeries, 'raisePropertyChanged', ['UnknownValuePlotting:t7:t9', [UnknownValuePlotting_$type, enumGetBox(UnknownValuePlotting_$type, 1)]]);
    return RadialAreaSeries;
}(AnchoredRadialSeries));
export { RadialAreaSeries };
/**
 * @hidden
 */
var RadialAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialAreaSeriesView, _super);
    function RadialAreaSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c0 = null;
        _this.c7 = new Path();
        _this.c9 = new Path();
        _this.c8 = new Path();
        _this.da = new Path();
        _this.c3 = new Path();
        _this.c5 = new Path();
        _this.c4 = new Path();
        _this.c6 = new Path();
        _this.c0 = a;
        return _this;
    }
    RadialAreaSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.qc = Defaults.e;
        }
    };
    RadialAreaSeriesView.prototype.c1 = function () {
        this.c7.ak = null;
        this.c9.ak = null;
        this.c8.ak = null;
        this.da.ak = null;
        this.c3.ak = null;
        this.c5.ak = null;
        this.c4.ak = null;
        this.c6.ak = null;
        this.aq();
    };
    RadialAreaSeriesView.prototype.c2 = function (a, b, c, d, e, f, g) {
        this.cw.sy.i(this.c7, this.c9, this.c8, this.da, a, b, c, d, e, f, g);
        this.aq();
    };
    RadialAreaSeriesView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    RadialAreaSeriesView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.c5.ak = this.c9.ak;
        this.c6.ak = this.da.ak;
        this.c3.ak = this.c7.ak;
        this.c4.ak = this.c8.ak;
        this.c5._stroke = a;
        this.c5.ac = this.e.fu + 3;
        this.c6._stroke = a;
        this.c6.ac = this.e.fu + 3;
        this.c3._fill = a;
        this.c3._opacity = 1;
        this.c4._fill = a;
        this.c4._opacity = 1;
    };
    RadialAreaSeriesView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.c3);
                a.s(this.c4);
                a.s(this.c5);
                a.s(this.c6);
            }
            else {
                a.s(this.c7);
                a.s(this.c8);
                a.s(this.c9);
                a.s(this.da);
            }
        }
    };
    RadialAreaSeriesView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a8.exportPathData(a, this.c9, "lowerShape", ["Lower"]);
        this.e.a8.exportPathData(a, this.da, "upperShape", ["Upper", "Main"]);
        this.e.a8.exportPathData(a, this.c8, "translucentShape", ["Translucent"]);
        this.e.a8.exportPathData(a, this.c7, "fillShape", ["Fill"]);
    };
    RadialAreaSeriesView.$t = markType(RadialAreaSeriesView, 'RadialAreaSeriesView', AnchoredRadialSeriesView.$);
    return RadialAreaSeriesView;
}(AnchoredRadialSeriesView));
export { RadialAreaSeriesView };
