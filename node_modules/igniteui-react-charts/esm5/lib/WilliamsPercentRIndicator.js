/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { WilliamsPercentRIndicatorStrategy } from "./WilliamsPercentRIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var WilliamsPercentRIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WilliamsPercentRIndicator, _super);
    function WilliamsPercentRIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WilliamsPercentRIndicator.prototype.get_ug = function () {
        return new WilliamsPercentRIndicatorStrategy();
    };
    Object.defineProperty(WilliamsPercentRIndicator.prototype, "ug", {
        get: function () {
            return this.get_ug();
        },
        enumerable: false,
        configurable: true
    });
    WilliamsPercentRIndicator.prototype.get_ut = function () {
        return WilliamsPercentRIndicator.$;
    };
    Object.defineProperty(WilliamsPercentRIndicator.prototype, "ut", {
        get: function () {
            return this.get_ut();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WilliamsPercentRIndicator.prototype, "u1", {
        get: function () {
            return typeGetValue(this.c(WilliamsPercentRIndicator.u2));
        },
        set: function (a) {
            this.h(WilliamsPercentRIndicator.u2, a);
        },
        enumerable: false,
        configurable: true
    });
    WilliamsPercentRIndicator.prototype.um = function () {
        return this.u1;
    };
    WilliamsPercentRIndicator.prototype.uv = function (a) {
        this.u1 = a;
    };
    WilliamsPercentRIndicator.$t = markType(WilliamsPercentRIndicator, 'WilliamsPercentRIndicator', StrategyBasedIndicator.$);
    WilliamsPercentRIndicator.u2 = StrategyBasedIndicator.uy(14, WilliamsPercentRIndicator.$);
    return WilliamsPercentRIndicator;
}(StrategyBasedIndicator));
export { WilliamsPercentRIndicator };
