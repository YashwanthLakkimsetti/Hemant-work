/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { ChaikinVolatilityIndicatorStrategy } from "./ChaikinVolatilityIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var ChaikinVolatilityIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ChaikinVolatilityIndicator, _super);
    function ChaikinVolatilityIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChaikinVolatilityIndicator.prototype.get_ug = function () {
        return new ChaikinVolatilityIndicatorStrategy();
    };
    Object.defineProperty(ChaikinVolatilityIndicator.prototype, "ug", {
        get: function () {
            return this.get_ug();
        },
        enumerable: false,
        configurable: true
    });
    ChaikinVolatilityIndicator.prototype.get_ut = function () {
        return ChaikinVolatilityIndicator.$;
    };
    Object.defineProperty(ChaikinVolatilityIndicator.prototype, "ut", {
        get: function () {
            return this.get_ut();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ChaikinVolatilityIndicator.prototype, "u1", {
        get: function () {
            return typeGetValue(this.c(ChaikinVolatilityIndicator.u2));
        },
        set: function (a) {
            this.h(ChaikinVolatilityIndicator.u2, a);
        },
        enumerable: false,
        configurable: true
    });
    ChaikinVolatilityIndicator.prototype.um = function () {
        return this.u1;
    };
    ChaikinVolatilityIndicator.prototype.uv = function (a) {
        this.u1 = a;
    };
    ChaikinVolatilityIndicator.$t = markType(ChaikinVolatilityIndicator, 'ChaikinVolatilityIndicator', StrategyBasedIndicator.$);
    ChaikinVolatilityIndicator.u2 = StrategyBasedIndicator.uy(10, ChaikinVolatilityIndicator.$);
    return ChaikinVolatilityIndicator;
}(StrategyBasedIndicator));
export { ChaikinVolatilityIndicator };
