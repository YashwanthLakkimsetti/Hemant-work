/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, INotifyPropertyChanged_$type, BaseError, PropertyChangedEventArgs, Delegate_$type, fromEnum, String_$type, runOn, delegateCombine, EnumUtil, enumGetBox, typeCast, delegateRemove, markType, TypeRegistrar, getInstanceType } from "igniteui-react-core";
import { IDataLegendTarget_$type } from "igniteui-react-core";
import { ArrayExtension } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { DataSeriesType_$type } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { Color } from "igniteui-react-core";
import { ColorUtil } from "igniteui-react-core";
import { DataToolTipLayerGroupingMode_$type } from "igniteui-react-core";
import { DataTooltipGroupedPositionX_$type } from "igniteui-react-core";
import { DataTooltipGroupedPositionY_$type } from "igniteui-react-core";
import { DataAbbreviationMode_$type } from "igniteui-react-core";
import { DataLegendValueMode_$type } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { DataLegendHeaderDateMode_$type } from "igniteui-react-core";
import { DataLegendHeaderTimeMode_$type } from "igniteui-react-core";
import { DataLegendSummaryType_$type } from "igniteui-react-core";
import { LegendItemBadgeShape_$type } from "igniteui-react-core";
import { DataLegendUnitsMode_$type } from "igniteui-react-core";
import { DataLegendLabelMode_$type } from "igniteui-react-core";
import { BrushCollection } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { HorizontalAlignment_$type } from "igniteui-react-core";
import { UnknownValuePlotting_$type } from "igniteui-react-core";
import { SeriesOutlineMode_$type } from "./SeriesOutlineMode";
import { MarkerOutlineMode_$type } from "./MarkerOutlineMode";
import { MarkerFillMode_$type } from "./MarkerFillMode";
import { MarkerAutomaticBehavior_$type } from "./MarkerAutomaticBehavior";
import { TrendLineType_$type } from "igniteui-react-core";
import { ComputedPlotAreaMarginMode_$type } from "./ComputedPlotAreaMarginMode";
import { SeriesPlotAreaMarginHorizontalMode_$type } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode_$type } from "./SeriesPlotAreaMarginVerticalMode";
import { SeriesHighlightingMode_$type } from "./SeriesHighlightingMode";
import { SeriesHighlightingBehavior_$type } from "./SeriesHighlightingBehavior";
import { LegendHighlightingMode_$type } from "./LegendHighlightingMode";
import { LegendItemBadgeMode_$type } from "igniteui-react-core";
import { ToolTipType_$type } from "./ToolTipType";
import { CrosshairsDisplayMode_$type } from "./CrosshairsDisplayMode";
import { SeriesViewerScrollbarMode_$type } from "./SeriesViewerScrollbarMode";
import { SeriesViewerHorizontalScrollbarPosition_$type } from "./SeriesViewerHorizontalScrollbarPosition";
import { SeriesViewerVerticalScrollbarPosition_$type } from "./SeriesViewerVerticalScrollbarPosition";
import { Defaults } from "./Defaults";
import { Series } from "./Series";
import { DeviceUtils } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { DataSeriesAdapter } from "igniteui-react-core";
import { ObservableCollection$1 } from "igniteui-react-core";
import { Random } from "igniteui-react-core";
import { ObservableColorCollection } from "igniteui-react-core";
import { BrushCollectionUtil } from "igniteui-react-core";
import { ChartSeriesEventArgs } from "./ChartSeriesEventArgs";
import { DomainChartSeriesPointerEventArgs } from "./DomainChartSeriesPointerEventArgs";
import { BrushUtil } from "igniteui-react-core";
import { IUnknownValuePlotting_$type } from "igniteui-react-core";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { isNaN_ } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringEmpty, stringStartsWith } from "igniteui-react-core";
/**
 * @hidden
 */
var DomainChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DomainChart, _super);
    function DomainChart() {
        var _this = _super.call(this) || this;
        _this.iu = null;
        _this.it = null;
        _this.ff = null;
        _this.gc = NaN;
        _this.is = null;
        _this.gp = 0;
        _this.gq = 0;
        _this.gr = 0;
        _this.go = 0;
        _this.gk = 0;
        _this.gm = 0;
        _this.gl = 0;
        _this.gj = 0;
        _this.r8 = null;
        _this.r9 = null;
        _this.f9 = NaN;
        _this.gs = NaN;
        _this.gi = NaN;
        _this.fw = NaN;
        _this.ih = 0;
        _this.c7 = null;
        _this.h7 = null;
        _this.e7 = false;
        _this.bo = null;
        _this.ji = null;
        _this.jk = null;
        _this.c5 = null;
        _this.fj = null;
        _this.propertyChanged = null;
        _this.ig = 0;
        _this.e1 = false;
        _this.bj = null;
        _this.fe = null;
        _this.bn = null;
        _this.d9 = false;
        _this.bb = 0;
        _this.f0 = NaN;
        _this.f1 = NaN;
        _this.fy = DeviceUtils.g(10);
        _this.fz = DeviceUtils.g(10);
        _this.a7 = 0;
        _this.a9 = 0;
        _this.d2 = true;
        _this.e = null;
        _this.b = null;
        _this.d = null;
        _this.a = null;
        _this.ar = 0;
        _this.ib = -1;
        _this.ic = -1;
        _this.a5 = 0;
        _this.je = stringEmpty();
        _this.d3 = true;
        _this.jf = null;
        _this.f = null;
        _this.tg = new Thickness(0, DeviceUtils.g(5));
        _this.d4 = true;
        _this.jg = "N/A";
        _this.d5 = false;
        _this.th = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(2), DeviceUtils.g(0));
        _this.r3 = null;
        _this.dh = null;
        _this.i8 = null;
        _this.c = null;
        _this.i7 = stringEmpty();
        _this.av = 0;
        _this.ax = 0;
        _this.i9 = null;
        _this.rv = null;
        _this.ta = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.s9 = new Thickness(0, DeviceUtils.g(5));
        _this.d1 = true;
        _this.c9 = null;
        _this.ry = null;
        _this.dc = null;
        _this.a1 = 0;
        _this.jb = null;
        _this.td = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.tc = new Thickness(0, DeviceUtils.g(5));
        _this.r0 = null;
        _this.de = null;
        _this.ja = null;
        _this.rx = null;
        _this.db = null;
        _this.jc = null;
        _this.rz = null;
        _this.dd = null;
        _this.s8 = new Thickness(0, DeviceUtils.g(0));
        _this.bu = 0;
        _this.a3 = 0;
        _this.jd = null;
        _this.r2 = null;
        _this.tf = new Thickness(0, DeviceUtils.g(0));
        _this.dg = null;
        _this.te = new Thickness(0, DeviceUtils.g(0));
        _this.r1 = null;
        _this.df = null;
        _this.az = 0;
        _this.rw = null;
        _this.tb = new Thickness(1, DeviceUtils.g(8), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.da = null;
        _this.seriesAdded = null;
        _this.seriesRemoved = null;
        _this.seriesPointerEnter = null;
        _this.seriesPointerLeave = null;
        _this.seriesPointerMove = null;
        _this.seriesPointerDown = null;
        _this.seriesPointerUp = null;
        _this.calloutStyleUpdating = null;
        _this.calloutRenderStyleUpdating = null;
        _this.fi = null;
        _this.dt = null;
        _this.dw = false;
        _this.fc = new Dictionary$2(String_$type, Base.$, 0);
        _this.fd = new List$1(String_$type, 0);
        _this.fp = null;
        _this.fn = null;
        _this.h = null;
        _this.g = null;
        _this.t = null;
        _this.w = null;
        _this.r = null;
        _this.s = null;
        _this.bl = null;
        _this.d8 = true;
        _this.eb = true;
        _this.ed = false;
        _this.ee = false;
        _this.ea = false;
        _this.s5 = new Rect(0, 0, 0, 1, 1);
        _this.jj = null;
        _this.jh = null;
        _this.rm = 1;
        _this.rl = 1;
        _this.c3 = 0;
        _this.gh = NaN;
        _this.gn = NaN;
        _this.cl = 0;
        _this.b2 = 0;
        _this.b0 = 0;
        _this.ga = NaN;
        _this.gb = NaN;
        _this.b7 = null;
        _this.by = 4;
        _this.u = null;
        _this.v = null;
        _this.ie = 400;
        _this.fv = NaN;
        _this.dv = false;
        _this.x = null;
        _this.c1 = 0;
        _this.gt = DeviceUtils.g(1.5);
        _this.du = true;
        _this.ge = NaN;
        _this.gg = NaN;
        _this.gf = NaN;
        _this.gd = NaN;
        _this.an = 0;
        _this.cn = 0;
        _this.cp = 0;
        _this.cj = 0;
        _this.ch = 0;
        _this.bq = 0;
        _this.bv = 0;
        _this.bs = 0;
        _this.ii = 7;
        _this.cz = 4;
        _this.ap = 0;
        _this.d0 = false;
        _this.ru = null;
        _this.fx = NaN;
        _this.rt = null;
        _this.dz = true;
        _this.rp = null;
        _this.rr = null;
        _this.rq = null;
        _this.rs = null;
        _this.h9 = -1;
        _this.ia = -1;
        _this.ec = false;
        _this.d6 = false;
        _this.r4 = null;
        _this.r5 = null;
        _this.id = -1;
        _this.dy = false;
        _this.dx = false;
        _this.fo = null;
        _this.ah = null;
        _this.i5 = null;
        _this.i6 = null;
        _this.i4 = "CalloutLabel";
        _this.i3 = "CalloutContent";
        _this.ct = 0;
        _this.cu = 0;
        _this.cr = 0;
        _this.cx = 0;
        _this.r6 = null;
        _this.r7 = null;
        _this.f6 = NaN;
        _this.f5 = NaN;
        _this.f2 = NaN;
        _this.f3 = NaN;
        _this.f4 = NaN;
        _this.f8 = NaN;
        _this.f7 = NaN;
        _this.d7 = true;
        _this.sa = null;
        _this.sb = null;
        _this.gx = NaN;
        _this.gw = NaN;
        _this.gu = NaN;
        _this.g0 = NaN;
        _this.gv = NaN;
        _this.gz = NaN;
        _this.gy = NaN;
        _this.ef = true;
        _this.fi = new List$1(Delegate_$type, 0);
        _this.p5();
        _this.pl();
        return _this;
    }
    DomainChart.prototype.provideContainer = function (a) {
        if (a == null) {
            this.ql(function (b) {
                b.destroy();
                b.provideContainer(null);
            });
            return;
        }
        var b = this.iu;
        this.iu = a;
        if (this.dt != null && this.iu != null && b == null) {
            this.iu.setTimeout(this.dt, 0);
            this.dt = null;
        }
        var c = ((function () {
            var $ret = new XamDataChart();
            $ret.eb = true;
            return $ret;
        })());
        c.provideContainer(a);
        this.dataChart = c;
        this.p6();
    };
    DomainChart.prototype.destroy = function () {
        this.provideContainer(null);
    };
    DomainChart.prototype.p6 = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = this.dataChart.cq.j.e();
        this.aa = a.a;
        this.ae = a.f;
        this.ac = a.b;
        this.ad = a.c;
        this.ag = a.g;
        this.g3 = Defaults.j;
        this.p7();
    };
    DomainChart.prototype.p7 = function () {
    };
    DomainChart.prototype.p3 = function (a) {
        if (a == null) {
            return;
        }
        a.gv = this.hx;
        a.gt = this.hv;
        a.gu = this.hw;
        a.gs = this.hu;
        a.r1 = this.s1;
        a.gp = this.hq;
        a.gr = this.hs;
        a.gq = this.hr;
        a.go = this.hp;
        a.r0 = this.s0;
        if (!isNaN_(this.hi)) {
            a.gl = this.hi;
        }
    };
    DomainChart.prototype.p0 = function () {
    };
    DomainChart.prototype.p9 = function (a, b) {
        a.hm = this.iq;
        a.cf = this.c8;
    };
    DomainChart.prototype.qu = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "TitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.gv = this.hx;
                }
                break;
            case "TitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.gt = this.hv;
                }
                break;
            case "PixelScalingRatio":
                if (this.dataChart != null) {
                    this.ql(function (d) { return d.gl = _this.hi; });
                }
                break;
            case "TitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.gu = this.hw;
                }
                break;
            case "TitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.gs = this.hu;
                }
                break;
            case "TitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.r1 = this.s1;
                }
                break;
            case "SubtitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.gp = this.hq;
                }
                break;
            case "SubtitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.gr = this.hs;
                }
                break;
            case "SubtitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.gq = this.hr;
                }
                break;
            case "SubtitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.go = this.hp;
                }
                break;
            case "SubtitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.r0 = this.s0;
                }
                break;
            case "LeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.gk = this.hf;
                }
                break;
            case "TopMargin":
                if (this.dataChart != null) {
                    this.dataChart.gw = this.hy;
                }
                break;
            case "RightMargin":
                if (this.dataChart != null) {
                    this.dataChart.gn = this.ho;
                }
                break;
            case "BottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.f9 = this.g2;
                }
                break;
            case "TransitionDuration":
                this.pw(function (d) { return d.hm = _this.iq; });
                break;
            case "TransitionEasingFunction":
                this.pw(function (d) { return d.cf = _this.c8; });
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "tooltipTemplate", {
        get: function () {
            return ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, 0);
        },
        set: function (a) {
            this.tooltipTemplates = a == null ? null : new List$1(Base.$, 1, [a]);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tooltipTemplates", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            var b = this.tooltipTemplates;
            if (a != b) {
                this.ff = a;
                this.qt("TooltipTemplates", b, this.tooltipTemplates);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hi", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            var b = this.gc;
            if (a != b) {
                this.gc = a;
                this.qt("PixelScalingRatio", b, this.hi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "toolTip", {
        get: function () {
            return this.is;
        },
        set: function (a) {
            var b = this.toolTip;
            if (b != a) {
                this.is = a;
                this.qt("ToolTip", b, this.toolTip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hv", {
        get: function () {
            return this.gp;
        },
        set: function (a) {
            var b = this.hv;
            if (a != b) {
                this.gp = a;
                this.qt("TitleLeftMargin", b, this.hv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hw", {
        get: function () {
            return this.gq;
        },
        set: function (a) {
            var b = this.hw;
            if (a != b) {
                this.gq = a;
                this.qt("TitleRightMargin", b, this.hw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hx", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            var b = this.hx;
            if (a != b) {
                this.gr = a;
                this.qt("TitleTopMargin", b, this.hx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hu", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            var b = this.hu;
            if (a != b) {
                this.go = a;
                this.qt("TitleBottomMargin", b, this.hu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hq", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            var b = this.hq;
            if (a != b) {
                this.gk = a;
                this.qt("SubtitleLeftMargin", b, this.hq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hs", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            var b = this.hs;
            if (a != b) {
                this.gm = a;
                this.qt("SubtitleTopMargin", b, this.hs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hr", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            var b = this.hr;
            if (a != b) {
                this.gl = a;
                this.qt("SubtitleRightMargin", b, this.hr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hp", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            var b = this.hp;
            if (a != b) {
                this.gj = a;
                this.qt("SubtitleBottomMargin", b, this.hp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s0", {
        get: function () {
            return this.r8;
        },
        set: function (a) {
            var b = this.s0;
            if (a != b) {
                this.r8 = a;
                this.qt("SubtitleTextColor", b, this.s0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s1", {
        get: function () {
            return this.r9;
        },
        set: function (a) {
            var b = this.s1;
            if (a != b) {
                this.r9 = a;
                this.qt("TitleTextColor", b, this.s1);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_hf = function () {
        return this.f9;
    };
    DomainChart.prototype.set_hf = function (a) {
        var b = this.hf;
        if (a != b) {
            this.f9 = a;
            this.qt("LeftMargin", b, this.hf);
        }
    };
    Object.defineProperty(DomainChart.prototype, "hf", {
        get: function () {
            return this.get_hf();
        },
        set: function (a) {
            this.set_hf(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hy", {
        get: function () {
            return this.gs;
        },
        set: function (a) {
            var b = this.hy;
            if (a != b) {
                this.gs = a;
                this.qt("TopMargin", b, this.hy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ho", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            var b = this.ho;
            if (a != b) {
                this.gi = a;
                this.qt("RightMargin", b, this.ho);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g2", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            var b = this.g2;
            if (a != b) {
                this.fw = a;
                this.qt("BottomMargin", b, this.g2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "iq", {
        get: function () {
            return this.ih;
        },
        set: function (a) {
            var b = this.iq;
            if (a != b) {
                this.ih = a;
                this.qt("TransitionDuration", b, this.iq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c8", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            var b = this.c8;
            if (a != b) {
                this.c7 = a;
                this.qt("TransitionEasingFunction", b, this.c8);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.p4 = function (a) {
        if (this.dataChart == null) {
            return;
        }
        a.j3 = this.oo;
        a.jr = this.od;
    };
    DomainChart.prototype.qa = function (a, b) {
        this.qb(a, b);
    };
    DomainChart.prototype.p1 = function () {
    };
    DomainChart.prototype.qb = function (a, b) {
        if (a == null) {
            return;
        }
        var toolTipTemplate_ = ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, b);
        if (toolTipTemplate_ == null) {
            a.er = true;
        }
        else {
            var series_ = a;
            a.er = false;
            series_.externalObject.tooltipTemplate = toolTipTemplate_;
        }
    };
    DomainChart.prototype.rj = function (a, b, c) {
    };
    DomainChart.prototype.iw = function (a) {
        return a;
        return null;
    };
    DomainChart.prototype.h8 = function (a) {
        return null;
    };
    DomainChart.prototype.qv = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "SubtitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.jr = this.od;
                }
                break;
            case "TitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.j3 = this.oo;
                }
                break;
            case "TooltipTemplate":
                if (this.e7) {
                    return;
                }
                this.e7 = true;
                this.tooltipTemplate = this.iw(this.tooltipTemplate);
                this.e7 = false;
                if (this.dataChart != null) {
                    this.dataChart.hj = this.tooltipTemplate;
                }
                this.toolTip = this.tooltipTemplate;
                break;
            case "ToolTip":
                this.px(function (d, e) { return _this.qb(d, e); });
                break;
            case "TooltipTemplates":
                if (this.tooltipTemplates == null) {
                    break;
                }
                this.e7 = true;
                this.px(function (d, e) {
                    var f = _this.iw(ArrayExtension.getModulus$1(Base.$, _this.tooltipTemplates, e));
                    var series_ = d;
                    var templ_ = f;
                    series_.externalObject.tooltipTemplate = templ_;
                });
                this.e7 = false;
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "bp", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            var b = this.bp;
            if (a != b) {
                this.bo = a;
                this.qt("Widget", b, this.bp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "od", {
        get: function () {
            return this.ji;
        },
        set: function (a) {
            var b = this.od;
            if (a != b) {
                this.ji = a;
                this.qt("SubtitleTextStyle", b, this.od);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "oo", {
        get: function () {
            return this.jk;
        },
        set: function (a) {
            var b = this.oo;
            if (a != b) {
                this.jk = a;
                this.qt("TitleTextStyle", b, this.oo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dataChart", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            var b = this.dataChart;
            if (b != a) {
                this.c5 = a;
                this.qt("DataChart", b, this.dataChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.onDetachedFromUI = function () {
        this.ql(function (a) { return a.onDetachedFromUI(); });
    };
    DomainChart.prototype.onAttachedToUI = function () {
        this.ql(function (a) { return a.onAttachedToUI(); });
    };
    DomainChart.prototype.p5 = function () {
        var e_1, _a, e_2, _b;
        this.fj = new List$1(MarkerType_$type, 0);
        this.au = new DataSeriesAdapter().e;
        if (this.q != null) {
            this.au.includedProperties = this.q;
        }
        if (this.o != null) {
            this.au.excludedProperties = this.o;
        }
        this.au.supportedSeriesTypes = this.fl.toArray();
        this.au.rules.clear();
        try {
            for (var _c = __values(fromEnum(this.fk)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var a = _d.value;
                this.au.rules.add(a);
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        var b = new List$1(String_$type, 0);
        try {
            for (var _e = __values(fromEnum(this.au.rules)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                b.add(getInstanceType(c).typeName);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        var d = this.au.dataSeries;
        d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.qo));
    };
    DomainChart.prototype.e3 = function (a) {
        return a != 24 && this.fl.contains(a);
    };
    DomainChart.prototype.notifyResized = function () {
        this.ql(function (a) { return a.notifyContainerResized(); });
    };
    DomainChart.prototype.qj = function () {
        this.ql(function (a) {
            for (var b = 0; b < a.series.count; b++) {
                a.series._inner[b].lq();
            }
        });
    };
    DomainChart.prototype.pq = function () {
        if (this.dataChart == null) {
            return;
        }
        if (this.e1) {
            this.rd();
        }
        this.dataChart.flush();
    };
    DomainChart.prototype.py = function () {
        if (this.dataChart == null) {
            return;
        }
        this.dataChart.ld();
    };
    DomainChart.prototype.q1 = function (a) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    DomainChart.prototype.ps = function (a) {
        this.pt(function (b, c) { return a(b); });
    };
    DomainChart.prototype.pt = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            a(this.dataChart.series._inner[b], b);
        }
    };
    DomainChart.prototype.pw = function (a) {
        this.px(function (b, c) { return a(b); });
    };
    DomainChart.prototype.px = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!c.db) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.pu = function (a) {
        this.pv(function (b, c) { return a(b); });
    };
    DomainChart.prototype.pv = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.dc) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.ra = function () {
        this.ps(function (a) { return a.mk(); });
    };
    DomainChart.prototype.ql = function (a) {
        this.qm(a, true);
    };
    DomainChart.prototype.qm = function (a, b) {
        this.qn(a, b, null);
    };
    DomainChart.prototype.qn = function (a, b, c) {
        if (this.dataChart == null) {
            return;
        }
        a(this.dataChart);
    };
    DomainChart.prototype.e4 = function (a) {
        if (!this.e3(a.suggestedSeries)) {
            return false;
        }
        var b = a.data;
        if (b == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.ew = function () {
        if (this.dataChart == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.mt = function (a) {
        var b = "series_" + (this.dataChart.series.count + 1) + "_" + EnumUtil.getName(DataSeriesType_$type, a.suggestedSeries);
        return b;
    };
    DomainChart.prototype.mu = function (a, b) {
        if (this.ez && this.fa) {
            var c = "";
            var d = 5 + Math.round(DomainChart.i1.nextDouble() * 4);
            for (var e = 0; e < d; e++) {
                c = c + "\u2588";
            }
            return c;
        }
        if (stringIsNullOrEmpty(a.title)) {
            var f = EnumUtil.getName(DataSeriesType_$type, b);
            return f + (this.dataChart.series.count + 1);
        }
        else {
            return a.title;
        }
    };
    DomainChart.prototype.ms = function () {
        return stringEmpty();
    };
    DomainChart.prototype.rd = function () {
        var e_3, _a, e_4, _b;
        if (this.dataChart == null) {
            return;
        }
        this.e1 = false;
        this.rf();
        if (this.actualItemsSource == null) {
            return;
        }
        var a = new List$1(MarkerType_$type, 0);
        try {
            for (var _c = __values(fromEnum(this.au.dataSeries)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                a.add(this.b4(b.suggestedMarker));
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        this.fj = a;
        var c = 0;
        try {
            for (var _e = __values(fromEnum(this.au.dataSeries)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var d = _f.value;
                if (!this.e4(d)) {
                    continue;
                }
                if (d.index < 0) {
                    d.index = c;
                }
                this.rb(d);
                this.rc(d);
                c++;
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        this.rk();
        this.pt(runOn(this, this.p8));
    };
    DomainChart.prototype.cg = function (seriesType_) {
        return (this.externalObject.createSeries(seriesType_).i);
    };
    DomainChart.prototype.b9 = function () {
        return this.cg(28);
    };
    DomainChart.prototype.cb = function () {
        return this.cg(27);
    };
    DomainChart.prototype.cd = function () {
        return this.cg(29);
    };
    DomainChart.prototype.ce = function () {
        return this.cg(25);
    };
    DomainChart.prototype.ca = function () {
        return this.cg(26);
    };
    DomainChart.prototype.cc = function () {
        return this.cg(32);
    };
    Object.defineProperty(DomainChart.prototype, "bk", {
        get: function () {
            if (TypeRegistrar.isRegistered("AnnotationLayerProxy")) {
                return TypeRegistrar.create("AnnotationLayerProxy");
            }
            else {
                throw new BaseError(1, "annotation layer module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "et", {
        get: function () {
            return (TypeRegistrar.isRegistered("AnnotationLayerProxy"));
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.ev = function (a) {
        if (!this.et) {
            return false;
        }
        return this.bk.matchesType(a);
    };
    DomainChart.prototype.rk = function () {
        var a = this.fh("", true);
        if (a != null) {
            for (var b = 0; b < a.count; b++) {
                this.dataChart.series.add(a._inner[b]);
            }
        }
    };
    DomainChart.prototype.ex = function () {
        return this.aq == 0 || this.aq == 4 || this.aq == 2;
    };
    DomainChart.prototype.ey = function () {
        return this.aq == 0 || this.aq == 4 || this.aq == 3;
    };
    DomainChart.prototype.fh = function (a, b) {
        var e_5, _a, e_6, _b;
        if (!this.et) {
            return null;
        }
        var c = new List$1(Series.$, 0);
        if (b) {
            if (this.dy) {
                var d = 1;
                if (this.fo == null) {
                    try {
                        for (var _c = __values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var e = _d.value;
                            var f = this.b9();
                            this.bk.setTargetSeries(f, e);
                            this.bk.setCollisionChannel(f, "MainChartCollisionChannel");
                            this.ri(f, e, this.au.dataSeries._inner[d - 1]);
                            f.name = a + getInstanceType(f).typeName + d.toString();
                            c.add(f);
                            d++;
                        }
                    }
                    catch (e_5_1) {
                        e_5 = { error: e_5_1 };
                    }
                    finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return))
                                _a.call(_c);
                        }
                        finally {
                            if (e_5)
                                throw e_5.error;
                        }
                    }
                    ;
                }
                else {
                    var g = this.b9();
                    this.ri(g, null, this.au.dataSeries._inner[d - 1]);
                    g.name = a + getInstanceType(g).typeName + d.toString();
                    c.add(g);
                }
            }
        }
        switch (this.ap) {
            case 0:
            case 4:
            case 3:
            case 2:
                {
                    var h = this.cb();
                    this.bk.setCrosshairThickness(h, this.fx);
                    this.bk.setCrosshairUseInterpolation(h, !this.d0);
                    this.bk.setCrosshairHorizontalLineVisibility(h, this.ex() ? 0 : 1);
                    this.bk.setCrosshairHorizontalLineStroke(h, this.rt);
                    this.bk.setCrosshairVerticalLineVisibility(h, this.ey() ? 0 : 1);
                    this.bk.setCrosshairVerticalLineStroke(h, this.ru);
                    this.bk.setCrosshairOnAxesEnabled(h, this.dz);
                    this.bk.setCrosshairXAxisBackground(h, this.rp);
                    this.bk.setCrosshairXAxisForeground(h, this.rq);
                    this.bk.setCrosshairYAxisBackground(h, this.rr);
                    this.bk.setCrosshairYAxisForeground(h, this.rs);
                    this.bk.setCrosshairXAxisPrecision(h, this.h9);
                    this.bk.setCrosshairYAxisPrecision(h, this.ia);
                    c.add(h);
                    break;
                }
            case 1:
                {
                    break;
                }
        }
        if (this.d6) {
            var i = this.cd();
            this.bk.setFinalValueBackground(i, this.r4);
            this.bk.setFinalValueForeground(i, this.r5);
            this.bk.setFinalValuePrecision(i, this.id);
            c.add(i);
        }
        if (b) {
            switch (this.cz) {
                case 1:
                    {
                        var j = this.ce();
                        c.add(j);
                        break;
                    }
                case 2:
                    {
                        var k = this.ca();
                        c.add(k);
                        break;
                    }
                case 4:
                    {
                        var l = this.cc();
                        c.add(l);
                        break;
                    }
                case 3:
                    {
                        this.ps(function (m) { return m.er = false; });
                        break;
                    }
                case 0:
                    {
                        this.ps(function (m) { return m.er = true; });
                        break;
                    }
            }
        }
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var m = _f.value;
                if (stringIsNullOrEmpty(m.name) == false) {
                    continue;
                }
                m.name = a + getInstanceType(m).typeName;
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        return c;
    };
    DomainChart.prototype.ri = function (a, b, c) {
        a.itemsSource = this.fo != null ? this.fo : b.itemsSource;
        this.bk.setXMemberPath(a, this.i5);
        this.bk.setYMemberPath(a, this.i6);
        this.bk.setLabelMemberPath(a, this.i4);
        this.bk.setContentMemberPath(a, this.i3);
        if (this.ah != null) {
            this.bk.setCalloutsAllowedPositions(a, this.ah);
        }
    };
    DomainChart.prototype.rf = function () {
        this.rg(this.dataChart);
    };
    DomainChart.prototype.rg = function (a) {
        var e_7, _a;
        var _this = this;
        if (a != null && a == this.dataChart) {
            this.re();
        }
        if (a == null || a.series.count == 0) {
            return;
        }
        this.ps(function (b) {
            if (_this.ev(b) && _this.bk.isCalloutLayer(b)) {
                _this.bk.removeCalloutStyleUpdating(b, runOn(_this, _this.q0));
            }
            if (_this.ev(b) && _this.bk.isCalloutLayer(b)) {
                _this.bk.removeCalloutRenderStyleUpdating(b, runOn(_this, _this.qz));
            }
            _this.q8(b);
        });
        try {
            for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                this.rh(b);
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
        a.series.clear();
    };
    DomainChart.prototype.rh = function (a) {
        a.itemsSource = null;
        a.legend = null;
        a.ku();
    };
    DomainChart.prototype.qo = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        var c = b.oldItems == null ? "null" : b.oldItems.count.toString();
        var d = b.newItems == null ? "null" : b.newItems.count.toString();
        if (this.e1) {
            return;
        }
        var e = this.qy(runOn(this, this.po), this.e1);
        this.e1 = e.p1;
    };
    DomainChart.prototype.po = function () {
        this.rd();
    };
    DomainChart.prototype.st = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.y, a);
    };
    DomainChart.prototype.sw = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.z, a);
    };
    DomainChart.prototype.su = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ac, a);
    };
    DomainChart.prototype.sv = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ad, a);
    };
    DomainChart.prototype.s4 = function (a) {
        var b = new Color();
        if (this.y == null || this.y.count == 0) {
            b = ArrayExtension.getModulus$1(Color.$, this.fg, a);
        }
        else {
            var c = ArrayExtension.getModulus$1(Brush.$, this.y, a);
            if (c == null) {
                b = ArrayExtension.getModulus$1(Color.$, this.fg, a);
            }
            else {
                b = ColorUtil.q(c);
            }
        }
        return b;
    };
    DomainChart.prototype.ds = function (a) {
        var b = new ObservableColorCollection();
        b.add(ColorUtil.v(a, 0.5));
        b.add(a);
        return b;
    };
    DomainChart.prototype.ab = function (a) {
        var b = this.ds(a);
        var c = BrushCollectionUtil.a(b);
        return c;
    };
    Object.defineProperty(DomainChart.prototype, "fg", {
        get: function () {
            if (this.fe != null) {
                return this.fe;
            }
            this.fe = new List$1(Color.$, 0);
            this.fe.add(ColorUtil.r("#8BDC5C"));
            this.fe.add(ColorUtil.r("#8961A9"));
            this.fe.add(ColorUtil.r("#6DB1FF"));
            this.fe.add(ColorUtil.r("#82E9D9"));
            this.fe.add(ColorUtil.r("#EA3C63"));
            this.fe.add(ColorUtil.r("#735656"));
            this.fe.add(ColorUtil.r("#F8CE4F"));
            this.fe.add(ColorUtil.r("#A8A8B7"));
            this.fe.add(ColorUtil.r("#E051A9"));
            this.fe.add(ColorUtil.r("#FF903B"));
            return this.fe;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.iv = function () {
        if (this.dataChart == null) {
            return null;
        }
        return this.dataChart.u2();
    };
    DomainChart.prototype.qc = function (a, b) {
    };
    DomainChart.prototype.qd = function (a, b, c) {
    };
    DomainChart.prototype.b4 = function (a) {
        if (a == 2) {
            return 3;
        }
        else if (a == 12) {
            return 13;
        }
        else if (a == 6) {
            return 7;
        }
        else if (a == 8) {
            return 9;
        }
        else if (a == 11) {
            return 12;
        }
        else if (a == 1) {
            return 1;
        }
        else if (a == 7) {
            return 8;
        }
        else if (a == 10) {
            return 11;
        }
        else if (a == 4) {
            return 5;
        }
        else if (a == 5) {
            return 6;
        }
        else if (a == 9) {
            return 10;
        }
        else if (a == 3) {
            return 4;
        }
        else if (a == 13) {
            return 0;
        }
        return 2;
    };
    DomainChart.prototype.attachDataLegend = function (a) {
        this.pk(a);
    };
    DomainChart.prototype.pk = function (a) {
        this.bn = a;
        if (this.dataChart != null) {
            if (!this.d9) {
                this.d9 = true;
                this.dataChart.attachDataLegend(a);
            }
        }
    };
    DomainChart.prototype.detachDataLegend = function (a) {
        this.pn(a);
    };
    DomainChart.prototype.pn = function (a) {
        if (this.dataChart != null) {
            this.d9 = false;
            this.dataChart.detachDataLegend(a);
        }
        this.bn = null;
    };
    DomainChart.prototype.getDataLegendSeries = function () {
        return this.p();
    };
    DomainChart.prototype.p = function () {
        if (this.dataChart != null) {
            return this.dataChart.getDataLegendSeries();
        }
        else {
            return new Array(0);
        }
    };
    DomainChart.prototype.qi = function (source_, a, b, c) {
        if (this.au != null) {
            this.au.notifySetItem(source_, a, b, c);
        }
        if (this.dataChart != null) {
            this.dataChart.lv(source_, a, b, c);
        }
    };
    DomainChart.prototype.qe = function (source_) {
        if (this.au != null) {
            this.au.notifyClearItems(source_);
        }
        if (this.dataChart != null) {
            this.dataChart.lm(source_);
        }
    };
    DomainChart.prototype.qf = function (source_, a, b) {
        if (this.au != null) {
            this.au.notifyInsertItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.lt(source_, a, b);
        }
    };
    DomainChart.prototype.qg = function (source_, a, b) {
        if (this.au != null) {
            this.au.notifyRemoveItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.lu(source_, a, b);
        }
    };
    Object.defineProperty(DomainChart.prototype, "bc", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            var b = this.bb;
            this.bb = a;
            if (b != this.bb) {
                this.qt("DataToolTipGroupingMode", enumGetBox(DataToolTipLayerGroupingMode_$type, b), enumGetBox(DataToolTipLayerGroupingMode_$type, this.bb));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g6", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            var b = this.f0;
            this.f0 = a;
            if (b != this.f0) {
                this.qt("DataToolTipPositionOffsetX", b, this.f0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g7", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            var b = this.f1;
            this.f1 = a;
            if (b != this.f1) {
                this.qt("DataToolTipPositionOffsetY", b, this.f1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g4", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            var b = this.fy;
            this.fy = a;
            if (b != this.fy) {
                this.qt("DataToolTipDefaultPositionOffsetX", b, this.fy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g5", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            var b = this.fz;
            this.fz = a;
            if (b != this.fz) {
                this.qt("DataToolTipDefaultPositionOffsetY", b, this.fz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a8", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            var b = this.a7;
            this.a7 = a;
            if (b != this.a7) {
                this.qt("DataToolTipGroupedPositionModeX", enumGetBox(DataTooltipGroupedPositionX_$type, b), enumGetBox(DataTooltipGroupedPositionX_$type, this.a7));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ba", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            var b = this.a9;
            this.a9 = a;
            if (b != this.a9) {
                this.qt("DataToolTipGroupedPositionModeY", enumGetBox(DataTooltipGroupedPositionY_$type, b), enumGetBox(DataTooltipGroupedPositionY_$type, this.a9));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eo", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            var b = this.d2;
            this.d2 = a;
            if (b != this.d2) {
                this.qt(DomainChart.le, b, this.d2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            var b = this.e;
            this.e = a;
            if (b != this.e) {
                this.qt("DataToolTipIncludedSeries", b, this.e);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.qt("DataToolTipExcludedSeries", b, this.b);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            var b = this.d;
            this.d = a;
            if (b != this.d) {
                this.qt("DataToolTipIncludedColumns", b, this.d);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.qt("DataToolTipExcludedColumns", b, this.a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "as", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            var b = this.ar;
            this.ar = a;
            if (b != this.ar) {
                this.qt("DataToolTipValueFormatAbbreviation", enumGetBox(DataAbbreviationMode_$type, b), enumGetBox(DataAbbreviationMode_$type, this.ar));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "il", {
        get: function () {
            return this.ib;
        },
        set: function (a) {
            var b = this.ib;
            this.ib = a;
            if (b != this.ib) {
                this.qt("DataToolTipValueFormatMaxFractions", b, this.ib);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "im", {
        get: function () {
            return this.ic;
        },
        set: function (a) {
            var b = this.ic;
            this.ic = a;
            if (b != this.ic) {
                this.qt("DataToolTipValueFormatMinFractions", b, this.ic);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a6", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            var b = this.a5;
            this.a5 = a;
            if (b != this.a5) {
                this.qt("DataToolTipValueFormatMode", enumGetBox(DataLegendValueMode_$type, b), enumGetBox(DataLegendValueMode_$type, this.a5));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l6", {
        get: function () {
            return this.je;
        },
        set: function (a) {
            var b = this.je;
            this.je = a;
            if (b != this.je) {
                this.qt("DataToolTipValueFormatCulture", b, this.je);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ep", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            var b = this.d3;
            this.d3 = a;
            if (b != this.d3) {
                this.qt("DataToolTipValueFormatUseGrouping", b, this.d3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "mc", {
        get: function () {
            return this.jf;
        },
        set: function (a) {
            var b = this.jf;
            this.jf = a;
            if (b != this.jf) {
                this.qt("DataToolTipValueFormatString", b, this.jf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            var b = this.f;
            this.f = a;
            if (b != this.f) {
                this.qt("DataToolTipValueFormatSpecifiers", b, this.f);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tq", {
        get: function () {
            return this.tg;
        },
        set: function (a) {
            var b = this.tg;
            this.tg = a;
            if (b != this.tg) {
                this.qt("DataToolTipValueRowMargin", b, this.tg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eq", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            var b = this.d4;
            this.d4 = a;
            if (b != this.d4) {
                this.qt("DataToolTipValueRowVisible", b, this.d4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ml", {
        get: function () {
            return this.jg;
        },
        set: function (a) {
            var b = this.jg;
            this.jg = a;
            if (b != this.jg) {
                this.qt("DataToolTipValueTextWhenMissingData", b, this.jg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "er", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            var b = this.d5;
            this.d5 = a;
            if (b != this.d5) {
                this.qt("DataToolTipValueTextUseSeriesColors", b, this.d5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tr", {
        get: function () {
            return this.th;
        },
        set: function (a) {
            var b = this.th;
            this.th = a;
            if (b != this.th) {
                this.qt("DataToolTipValueTextMargin", b, this.th);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sq", {
        get: function () {
            return this.r3;
        },
        set: function (a) {
            var b = this.r3;
            this.r3 = a;
            if (b != this.r3) {
                this.qt("DataToolTipValueTextColor", b, this.r3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dr", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            var b = this.dh;
            this.dh = a;
            if (b != this.dh) {
                this.qt("DataToolTipValueTextStyle", b, this.dh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kw", {
        get: function () {
            return this.i8;
        },
        set: function (a) {
            var b = this.i8;
            this.i8 = a;
            if (b != this.i8) {
                this.qt("DataToolTipHeaderFormatString", b, this.i8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.qt("DataToolTipHeaderFormatSpecifiers", b, this.c);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ks", {
        get: function () {
            return this.i7;
        },
        set: function (a) {
            var b = this.i7;
            this.i7 = a;
            if (b != this.i7) {
                this.qt("DataToolTipHeaderFormatCulture", b, this.i7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aw", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            var b = this.av;
            this.av = a;
            if (b != this.av) {
                this.qt("DataToolTipHeaderFormatDate", enumGetBox(DataLegendHeaderDateMode_$type, b), enumGetBox(DataLegendHeaderDateMode_$type, this.av));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ay", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            var b = this.ax;
            this.ax = a;
            if (b != this.ax) {
                this.qt("DataToolTipHeaderFormatTime", enumGetBox(DataLegendHeaderTimeMode_$type, b), enumGetBox(DataLegendHeaderTimeMode_$type, this.ax));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k1", {
        get: function () {
            return this.i9;
        },
        set: function (a) {
            var b = this.i9;
            this.i9 = a;
            if (b != this.i9) {
                this.qt("DataToolTipHeaderText", b, this.i9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "si", {
        get: function () {
            return this.rv;
        },
        set: function (a) {
            var b = this.rv;
            this.rv = a;
            if (b != this.rv) {
                this.qt("DataToolTipHeaderTextColor", b, this.rv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tk", {
        get: function () {
            return this.ta;
        },
        set: function (a) {
            var b = this.ta;
            this.ta = a;
            if (b != this.ta) {
                this.qt("DataToolTipHeaderTextMargin", b, this.ta);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tj", {
        get: function () {
            return this.s9;
        },
        set: function (a) {
            var b = this.s9;
            this.s9 = a;
            if (b != this.s9) {
                this.qt("DataToolTipHeaderRowMargin", b, this.s9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "en", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            var b = this.d1;
            this.d1 = a;
            if (b != this.d1) {
                this.qt("DataToolTipHeaderRowVisible", b, this.d1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "di", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            var b = this.c9;
            this.c9 = a;
            if (b != this.c9) {
                this.qt("DataToolTipHeaderTextStyle", b, this.c9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sl", {
        get: function () {
            return this.ry;
        },
        set: function (a) {
            var b = this.ry;
            this.ry = a;
            if (b != this.ry) {
                this.qt("DataToolTipSummaryTitleTextColor", b, this.ry);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dl", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            var b = this.dc;
            this.dc = a;
            if (b != this.dc) {
                this.qt("DataToolTipSummaryTitleTextStyle", b, this.dc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a2", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            var b = this.a1;
            this.a1 = a;
            if (b != this.a1) {
                this.qt("DataToolTipSummaryType", enumGetBox(DataLegendSummaryType_$type, b), enumGetBox(DataLegendSummaryType_$type, this.a1));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lk", {
        get: function () {
            return this.jb;
        },
        set: function (a) {
            var b = this.jb;
            this.jb = a;
            if (b != this.jb) {
                this.qt("DataToolTipSummaryTitleText", b, this.jb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tn", {
        get: function () {
            return this.td;
        },
        set: function (a) {
            var b = this.td;
            this.td = a;
            if (b != this.td) {
                this.qt("DataToolTipSummaryTitleTextMargin", b, this.td);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tm", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            var b = this.tc;
            this.tc = a;
            if (b != this.tc) {
                this.qt("DataToolTipSummaryRowMargin", b, this.tc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sn", {
        get: function () {
            return this.r0;
        },
        set: function (a) {
            var b = this.r0;
            this.r0 = a;
            if (b != this.r0) {
                this.qt("DataToolTipSummaryValueTextColor", b, this.r0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dn", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            var b = this.de;
            this.de = a;
            if (b != this.de) {
                this.qt("DataToolTipSummaryValueTextStyle", b, this.de);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lf", {
        get: function () {
            return this.ja;
        },
        set: function (a) {
            var b = this.ja;
            this.ja = a;
            if (b != this.ja) {
                this.qt("DataToolTipSummaryLabelText", b, this.ja);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sk", {
        get: function () {
            return this.rx;
        },
        set: function (a) {
            var b = this.rx;
            this.rx = a;
            if (b != this.rx) {
                this.qt("DataToolTipSummaryLabelTextColor", b, this.rx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dk", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            var b = this.db;
            this.db = a;
            if (b != this.db) {
                this.qt("DataToolTipSummaryLabelTextStyle", b, this.db);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lq", {
        get: function () {
            return this.jc;
        },
        set: function (a) {
            var b = this.jc;
            this.jc = a;
            if (b != this.jc) {
                this.qt("DataToolTipSummaryUnitsText", b, this.jc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sm", {
        get: function () {
            return this.rz;
        },
        set: function (a) {
            var b = this.rz;
            this.rz = a;
            if (b != this.rz) {
                this.qt("DataToolTipSummaryUnitsTextColor", b, this.rz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dm", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            var b = this.dd;
            this.dd = a;
            if (b != this.dd) {
                this.qt("DataToolTipSummaryUnitsTextStyle", b, this.dd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ti", {
        get: function () {
            return this.s8;
        },
        set: function (a) {
            var b = this.s8;
            this.s8 = a;
            if (b != this.s8) {
                this.qt("DataToolTipBadgeMargin", b, this.s8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bw", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            var b = this.bu;
            this.bu = a;
            if (b != this.bu) {
                this.qt("DataToolTipBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.bu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a4", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            var b = this.a3;
            this.a3 = a;
            if (b != this.a3) {
                this.qt("DataToolTipUnitsDisplayMode", enumGetBox(DataLegendUnitsMode_$type, b), enumGetBox(DataLegendUnitsMode_$type, this.a3));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l0", {
        get: function () {
            return this.jd;
        },
        set: function (a) {
            var b = this.jd;
            this.jd = a;
            if (b != this.jd) {
                this.qt("DataToolTipUnitsText", b, this.jd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sp", {
        get: function () {
            return this.r2;
        },
        set: function (a) {
            var b = this.r2;
            this.r2 = a;
            if (b != this.r2) {
                this.qt("DataToolTipUnitsTextColor", b, this.r2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tp", {
        get: function () {
            return this.tf;
        },
        set: function (a) {
            var b = this.tf;
            this.tf = a;
            if (b != this.tf) {
                this.qt("DataToolTipUnitsTextMargin", b, this.tf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dq", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            var b = this.dg;
            this.dg = a;
            if (b != this.dg) {
                this.qt("DataToolTipUnitsTextStyle", b, this.dg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "to", {
        get: function () {
            return this.te;
        },
        set: function (a) {
            var b = this.te;
            this.te = a;
            if (b != this.te) {
                this.qt("DataToolTipTitleTextMargin", b, this.te);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "so", {
        get: function () {
            return this.r1;
        },
        set: function (a) {
            var b = this.r1;
            this.r1 = a;
            if (b != this.r1) {
                this.qt("DataToolTipTitleTextColor", b, this.r1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dp", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            var b = this.df;
            this.df = a;
            if (b != this.df) {
                this.qt("DataToolTipTitleTextStyle", b, this.df);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a0", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            var b = this.az;
            this.az = a;
            if (b != this.az) {
                this.qt("DataToolTipLabelDisplayMode", enumGetBox(DataLegendLabelMode_$type, b), enumGetBox(DataLegendLabelMode_$type, this.az));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sj", {
        get: function () {
            return this.rw;
        },
        set: function (a) {
            var b = this.rw;
            this.rw = a;
            if (b != this.rw) {
                this.qt("DataToolTipLabelTextColor", b, this.rw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tl", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            var b = this.tb;
            this.tb = a;
            if (b != this.tb) {
                this.qt("DataToolTipLabelTextMargin", b, this.tb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dj", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            var b = this.da;
            this.da = a;
            if (b != this.da) {
                this.qt("DataToolTipLabelTextStyle", b, this.da);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.q2 = function (a) {
        if (this.seriesAdded != null && a != null) {
            this.seriesAdded(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.q8 = function (a) {
        if (this.seriesRemoved != null && a != null) {
            this.seriesRemoved(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.q4 = function (a, b) {
        if (this.seriesPointerEnter != null && a != null) {
            this.seriesPointerEnter(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.q5 = function (a, b) {
        if (this.seriesPointerLeave != null && a != null) {
            this.seriesPointerLeave(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.q6 = function (a, b) {
        if (this.seriesPointerMove != null && a != null) {
            this.seriesPointerMove(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.q3 = function (a, b) {
        if (this.seriesPointerDown != null && a != null) {
            this.seriesPointerDown(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.q7 = function (a, b) {
        if (this.seriesPointerUp != null && a != null) {
            this.seriesPointerUp(this, new DomainChartSeriesPointerEventArgs(a, b));
        }
    };
    DomainChart.prototype.q0 = function (a, b) {
        if (this.calloutStyleUpdating != null && a != null) {
            this.calloutStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.qz = function (a, b) {
        if (this.calloutRenderStyleUpdating != null && a != null) {
            this.calloutRenderStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.qx = function (a) {
        var _this = this;
        if (!this.fi.contains(a)) {
            this.fi.add(a);
            var b = false;
            var c = this.qy(function () {
                a();
                _this.fi.remove(a);
            }, b);
            b = c.p1;
        }
    };
    DomainChart.prototype.qy = function (a, b) {
        if (!b) {
            b = true;
            if (this.iu != null) {
                this.iu.setTimeout(a, 0);
            }
            else {
                this.dt = a;
            }
        }
        return {
            p1: b
        };
    };
    DomainChart.prototype.get_e5 = function () {
        return true;
    };
    Object.defineProperty(DomainChart.prototype, "e5", {
        get: function () {
            return this.get_e5();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.p2 = function (a) {
        var _this = this;
        var b = a == this.dataChart;
        if (b) {
            a.ag = this.y;
        }
        if (b) {
            a.aj = this.z;
        }
        a.ah = this.ac;
        a.ai = this.ad;
        a.ba = this.bz;
        a.legend = this.legend;
        a.tq = this.e0;
        a.tt = this.e6 && this.e5;
        if (b) {
            a.b1 = this.cv;
            a.b2 = this.cw;
            a.gc = this.g8;
            a.ru = this.sx;
            a.gd = this.g9;
            a.ge = this.ha;
            a.gf = this.hb;
            a.rv = this.sy;
            a.by = this.cs;
            a.d1 = this.eu;
            a.gg = this.hc;
            a.gh = this.hd;
            a.gi = this.he;
            a.gx = this.h0;
            a.r3 = this.s2;
            a.g3 = this.h6;
            a.gy = this.h1;
            a.gz = this.h2;
            a.r4 = this.s3;
            a.b3 = this.cy;
            a.fd = this.fb;
            a.g0 = this.h3;
            a.g1 = this.h4;
            a.g2 = this.h5;
        }
        a.tb = this.co;
        a.te = this.cq;
        if (this.bn != null) {
            if (!this.d9) {
                this.pk(this.bn);
            }
        }
        if (a.br != this.ck || a.bp != this.ci) {
            a.cq.b4(this.iu);
            a.br = this.ck;
            a.bp = this.ci;
        }
        a.s4 = this.ao;
        if (!isNaN_(this.hk)) {
            a.uv = this.hk;
        }
        if (!isNaN_(this.hm)) {
            a.ux = this.hm;
        }
        if (!isNaN_(this.hl)) {
            a.uw = this.hl;
        }
        if (!isNaN_(this.hj)) {
            a.uu = this.hj;
        }
        a.a7 = this.br;
        a.seriesMouseEnter = delegateCombine(a.seriesMouseEnter, function (c, d) { return _this.q4(d.series, d.item); });
        a.seriesMouseLeave = delegateCombine(a.seriesMouseLeave, function (c, d) { return _this.q5(d.series, d.item); });
        a.seriesMouseMove = delegateCombine(a.seriesMouseMove, function (c, d) { return _this.q6(d.series, d.item); });
        a.seriesMouseLeftButtonDown = delegateCombine(a.seriesMouseLeftButtonDown, function (c, d) { return _this.q3(d.series, d.item); });
        a.seriesMouseLeftButtonUp = delegateCombine(a.seriesMouseLeftButtonUp, function (c, d) { return _this.q7(d.series, d.item); });
        if (b) {
            a.sv = this.s7;
        }
        if (b) {
            a.jw = this.oh;
        }
        a.re = this.ro;
        if (b) {
            a.jk = this.n6;
        }
        a.rd = this.rn;
        a.tm = this.eg;
        a.dn = this.eh;
        a.gk = this.hf;
        a.gn = this.ho;
        a.gw = this.hy;
        a.f9 = this.g2;
        if (a == this.dataChart) {
            this.rd();
        }
        this.p3(a);
        this.p4(a);
    };
    DomainChart.prototype.af = function (a) {
        var e_8, _a;
        if (!this.e9 || !this.fa || this.itemsSource != null) {
            return a;
        }
        if (a == null) {
            return null;
        }
        var b = new BrushCollection();
        try {
            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                var d = BrushUtil.r(c);
                b.add(d);
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        return b;
    };
    DomainChart.prototype.sz = function (a) {
        if (!this.e9 || !this.fa || this.itemsSource != null) {
            return a;
        }
        var b = BrushUtil.g(0, 0, 0, 0);
        return b;
    };
    DomainChart.prototype.p8 = function (a, b) {
        if (!isNaN_(this.hn)) {
            a.gt = this.hn;
        }
        if (!isNaN_(this.ht) && !a.dc) {
            a.gz = this.ht;
        }
        if (!isNaN_(this.g3) && a.dc) {
            a.gz = this.g3;
        }
        a.legendItemBadgeShape = this.bx;
        a.a9 = this.bt;
        a.bt = this.cm;
        a.mz(this.b3);
        a.my(this.b1);
        a.gq = this.hg;
        if (!isNaN_(this.hh)) {
            a.m0(this.hh);
        }
        if (!isNaN_(this.g1)) {
            a.fz = this.g1;
        }
        if (a.isUsableInLegend) {
            a.legend = this.legend;
        }
        if (typeCast(IUnknownValuePlotting_$type, a) !== null) {
            a.unknownValuePlotting = this.c4;
        }
        a.dw = this.e2;
        if (this.ev(a) && this.bk.isCalloutLayer(a)) {
            this.bk.setCalloutStyleUpdatingEventEnabled(a, this.ej);
            this.bk.addCalloutStyleUpdating(a, runOn(this, this.q0));
        }
        if (this.ev(a) && this.bk.isCalloutLayer(a)) {
            this.bk.setCalloutRenderStyleUpdatingEventEnabled(a, this.ej);
            this.bk.addCalloutRenderStyleUpdating(a, runOn(this, this.qz));
        }
        if (this.ev(a) && this.bk.isDataToolTipLayer(a)) {
            this.ph(a);
        }
        this.pi(a, b);
        this.pj(a, b);
        this.p9(a, b);
        this.qa(a, b);
        this.q2(a);
    };
    Object.defineProperty(DomainChart.prototype, "ei", {
        get: function () {
            return this.dw;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.pp = function () {
        if (!this.dw) {
            this.dw = true;
            this.pz();
        }
    };
    DomainChart.prototype.pz = function () {
        this.p0();
        this.p1();
    };
    DomainChart.prototype.q9 = function (a) {
        if (this.d9 && this.bn != null) {
            this.d9 = false;
            if (a != null) {
                a.detachDataLegend(this.bn);
            }
        }
        this.rg(a);
    };
    DomainChart.prototype.pj = function (a, b) {
        var c = typeCast(ITrendLineSeries_$type, a);
        if (c != null) {
            c.trendLineBrush = ArrayExtension.getModulus$1(Brush.$, this.ag, b);
            c.trendLineThickness = this.hz;
            c.trendLineType = this.c2;
            c.trendLinePeriod = this.ir;
        }
    };
    DomainChart.prototype.b6 = function (a, b) {
        if (this.b8 == null || this.b8.count == 0) {
            if (this.fj == null || this.fj.count == 0) {
                return a != null && a.d2 ? 1 : 2;
            }
            var c = ArrayExtension.getModulus$1(MarkerType_$type, this.fj, b);
            if (c == 0 && a != null) {
                c = a.d2 ? 1 : 2;
                if (c == 2) {
                    c = this.b5(a);
                }
            }
            if (c == 2) {
                if (a == null) {
                    return 1;
                }
                else {
                    return 2;
                }
            }
            return c;
        }
        return ArrayExtension.getModulus$1(MarkerType_$type, this.b8, b);
    };
    DomainChart.prototype.b5 = function (a) {
        return 2;
    };
    DomainChart.prototype.ft = function () {
        if (this.itemsSource != null) {
            return this.itemsSource;
        }
        if (this.e9) {
            return this.fu();
        }
        return null;
    };
    DomainChart.prototype.get_ez = function () {
        if (this.itemsSource == null && this.e9) {
            if (this.fu() != null) {
                return true;
            }
        }
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "ez", {
        get: function () {
            return this.get_ez();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.fu = function () {
        return null;
    };
    DomainChart.prototype.qt = function (a, b, c) {
        var _this = this;
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        switch (a) {
            case "DataChart":
                this.q9(typeCast(XamDataChart.$, b));
                this.p2(typeCast(XamDataChart.$, c));
                break;
            case "ShouldUseSkeletonStyleForMockData":
            case "ShouldDisplayMockData":
                this.actualItemsSource = this.ft();
                this.y = this.af(this.aa);
                this.z = this.af(this.ae);
                break;
            case "ActualBrushes":
                this.qn(function (d) { return d.ag = _this.y; }, true, a);
                break;
            case "ActualOutlines":
                this.qn(function (d) { return d.aj = _this.z; }, true, a);
                break;
            case "ActualItemsSource":
                if (this.e9) {
                    this.y = this.af(this.aa);
                    this.z = this.af(this.ae);
                }
                this.au.itemsSource = this.actualItemsSource;
                break;
            case "ItemsSource":
                this.actualItemsSource = this.ft();
                break;
            case "IncludedProperties":
                this.au.includedProperties = this.q;
                break;
            case "ExcludedProperties":
                this.au.excludedProperties = this.o;
                break;
            case "Brushes":
                this.y = this.af(this.aa);
                break;
            case "Outlines":
                this.z = this.af(this.ae);
                break;
            case "Legend":
                this.ql(function (d) { return d.legend = _this.legend; });
                break;
            case "HighlightingMode":
                this.ql(function (d) { return d.br = _this.ck; });
                break;
            case "HighlightingBehavior":
                this.ql(function (d) { return d.bp = _this.ci; });
                break;
            case "LegendHighlightingMode":
                this.ql(function (d) { return d.a7 = _this.br; });
                break;
            case "LegendItemBadgeShape":
                this.ql(function (d) { return d.a9 = _this.bx; });
                break;
            case "LegendItemBadgeMode":
                this.ql(function (d) { return d.a8 = _this.bt; });
                break;
            case "PlotAreaMarginLeft":
                this.ql(function (d) { return d.uv = _this.hk; });
                break;
            case "PlotAreaMarginTop":
                this.ql(function (d) { return d.ux = _this.hm; });
                break;
            case "PlotAreaMarginRight":
                this.ql(function (d) { return d.uw = _this.hl; });
                break;
            case "PlotAreaMarginBottom":
                this.ql(function (d) { return d.uu = _this.hj; });
                break;
            case "ComputedPlotAreaMarginMode":
                this.ql(function (d) { return d.s4 = _this.ao; });
                break;
            case "IsHorizontalZoomEnabled":
                this.ql(function (d) { return d.tq = _this.e0; });
                break;
            case "IsVerticalZoomEnabled":
                this.ql(function (d) { return d.tt = _this.e6; });
                break;
            case "WindowRect":
                this.qm(function (d) { return d.sv = _this.s7; }, false);
                break;
            case "Title":
                this.qm(function (d) { return d.jw = _this.oh; }, false);
                break;
            case "Subtitle":
                this.qm(function (d) { return d.jk = _this.n6; }, false);
                break;
            case "TitleAlignment":
                this.ql(function (d) { return d.re = _this.ro; });
                break;
            case "SubtitleAlignment":
                this.ql(function (d) { return d.rd = _this.rn; });
                break;
            case "UnknownValuePlotting":
                this.ps(function (d) {
                    if (typeCast(IUnknownValuePlotting_$type, d) !== null) {
                        d.unknownValuePlotting = _this.c4;
                    }
                });
                break;
            case "IsSeriesHighlightingEnabled":
                this.ps(function (d) { return d.dw = _this.e2; });
                break;
            case "Thickness":
                if (!isNaN_(this.ht)) {
                    this.pw(function (d) { return d.gz = _this.ht; });
                }
                break;
            case "OutlineMode":
                this.pw(function (d) { return d.bt = _this.cm; });
                break;
            case "MarkerFillOpacity":
                this.pw(function (d) { return d.gq = _this.hg; });
                break;
            case "MarkerThickness":
                if (!isNaN_(this.hh)) {
                    this.pw(function (d) { return d.m0(_this.hh); });
                }
                break;
            case "MarkerOutlineMode":
                this.pw(function (d) { return d.mz(_this.b3); });
                break;
            case "MarkerFillMode":
                this.pw(function (d) { return d.my(_this.b1); });
                break;
            case "Resolution":
                if (!isNaN_(this.hn)) {
                    this.ps(function (d) { return d.gt = _this.hn; });
                }
                break;
            case "AreaFillOpacity":
                if (!isNaN_(this.g1)) {
                    this.ps(function (d) { return d.fz = _this.g1; });
                }
                break;
            case "ShouldAvoidAxisAnnotationCollisions":
                this.pr(function (d) {
                    d.ct = _this.e8;
                    d.cv = _this.e8;
                }, true);
                break;
            case "TrendLineBrushes":
            case "TrendLineType":
            case "TrendLineThickness":
            case "TrendLinePeriod":
                this.pt(function (d, e) { return _this.pj(d, e); });
                break;
            case "MarkerMaxCount":
                this.px(function (d, e) { return _this.pi(d, e); });
                break;
            case "MarkerTypes":
                var d = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), b);
                if (d != null) {
                    d.collectionChanged = delegateRemove(d.collectionChanged, runOn(this, this.qr));
                }
                var e = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), c);
                if (e != null) {
                    e.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.qr));
                }
                this.px(function (f, g) { return _this.pi(f, g); });
                break;
            case "MarkerAutomaticBehavior":
                this.ql(function (f) { return f.ba = _this.bz; });
                this.px(function (f, g) { return _this.pi(f, g); });
                break;
            case "MarkerBrushes":
                this.ql(function (f) { return f.ah = _this.ac; });
                break;
            case "MarkerOutlines":
                this.ql(function (f) { return f.ai = _this.ad; });
                break;
            case "AlignsGridLinesToPixels":
                this.ql(function (f) { return f.tm = _this.eg; });
                break;
            case "AnimateSeriesWhenAxisRangeChanges":
                this.ql(function (f) { return f.dn = _this.eh; });
                break;
            case "ToolTipType":
            case "CrosshairsDisplayMode":
            case "CrosshairsSnapToData":
            case "CrosshairsLineVerticalStroke":
            case "CrosshairsLineHorizontalStroke":
            case "CrosshairsLineThickness":
            case "CrosshairsAnnotationXAxisBackground":
            case "CrosshairsAnnotationXAxisTextColor":
            case "CrosshairsAnnotationYAxisBackground":
            case "CrosshairsAnnotationYAxisTextColor":
            case "CrosshairsAnnotationEnabled":
            case "CrosshairsAnnotationXAxisPrecision":
            case "CrosshairsAnnotationYAxisPrecision":
            case "FinalValueAnnotationsVisible":
            case "FinalValueAnnotationsPrecision":
            case "FinalValueAnnotationsTextColor":
            case "FinalValueAnnotationsBackground":
            case "CalloutsVisible":
            case "CalloutsAllowedPositions":
            case "CalloutsItemsSource":
            case "CalloutsXMemberPath":
            case "CalloutsYMemberPath":
            case "CalloutsLabelMemberPath":
            case "CalloutsContentMemberPath":
                var f = this.qy(runOn(this, this.po), this.e1);
                this.e1 = f.p1;
                break;
            case "DataToolTipGroupingMode":
            case "DataToolTipPositionOffsetX":
            case "DataToolTipPositionOffsetY":
            case "DataToolTipDefaultPositionOffsetX":
            case "DataToolTipDefaultPositionOffsetY":
            case "DataToolTipGroupedPositionModeX":
            case "DataToolTipGroupedPositionModeY":
            case DomainChart.le:
            case "DataToolTipIncludedSeries":
            case "DataToolTipExcludedSeries":
            case "DataToolTipIncludedColumns":
            case "DataToolTipExcludedColumns":
            case "DataToolTipValueFormatAbbreviation":
            case "DataToolTipValueFormatMaxFractions":
            case "DataToolTipValueFormatMinFractions":
            case "DataToolTipValueFormatMode":
            case "DataToolTipValueFormatCulture":
            case "DataToolTipValueFormatUseGrouping":
            case "DataToolTipValueFormatString":
            case "DataToolTipValueFormatSpecifiers":
            case "DataToolTipValueRowMargin":
            case "DataToolTipValueRowVisible":
            case "DataToolTipValueTextWhenMissingData":
            case "DataToolTipValueTextUseSeriesColors":
            case "DataToolTipValueTextMargin":
            case "DataToolTipValueTextColor":
            case "DataToolTipValueTextStyle":
            case "DataToolTipHeaderFormatString":
            case "DataToolTipHeaderFormatSpecifiers":
            case "DataToolTipHeaderFormatCulture":
            case "DataToolTipHeaderFormatDate":
            case "DataToolTipHeaderFormatTime":
            case "DataToolTipHeaderText":
            case "DataToolTipHeaderTextColor":
            case "DataToolTipHeaderTextMargin":
            case "DataToolTipHeaderRowMargin":
            case "DataToolTipHeaderRowVisible":
            case "DataToolTipHeaderTextStyle":
            case "DataToolTipSummaryTitleTextColor":
            case "DataToolTipSummaryTitleTextStyle":
            case "DataToolTipSummaryType":
            case "DataToolTipSummaryTitleText":
            case "DataToolTipSummaryTitleTextMargin":
            case "DataToolTipSummaryRowMargin":
            case "DataToolTipSummaryValueTextColor":
            case "DataToolTipSummaryValueTextStyle":
            case "DataToolTipSummaryLabelText":
            case "DataToolTipSummaryLabelTextColor":
            case "DataToolTipSummaryLabelTextStyle":
            case "DataToolTipSummaryUnitsText":
            case "DataToolTipSummaryUnitsTextColor":
            case "DataToolTipSummaryUnitsTextStyle":
            case "DataToolTipBadgeMargin":
            case "DataToolTipBadgeShape":
            case "DataToolTipUnitsDisplayMode":
            case "DataToolTipUnitsText":
            case "DataToolTipUnitsTextColor":
            case "DataToolTipUnitsTextMargin":
            case "DataToolTipUnitsTextStyle":
            case "DataToolTipTitleTextMargin":
            case "DataToolTipTitleTextColor":
            case "DataToolTipTitleTextStyle":
            case "DataToolTipLabelDisplayMode":
            case "DataToolTipLabelTextColor":
            case "DataToolTipLabelTextMargin":
            case "DataToolTipLabelTextStyle":
                this.qp(a, b, c);
                break;
            case "HorizontalViewScrollbarMode":
                this.ql(function (g) { return g.b1 = _this.cv; });
                break;
            case "VerticalViewScrollbarMode":
                this.ql(function (g) { return g.b2 = _this.cw; });
                break;
            case "HorizontalViewScrollbarCornerRadius":
                this.ql(function (g) { return g.gc = _this.g8; });
                break;
            case "HorizontalViewScrollbarFill":
                this.ql(function (g) { return g.ru = _this.sx; });
                break;
            case "HorizontalViewScrollbarMaxOpacity":
                this.ql(function (g) { return g.gf = _this.hb; });
                break;
            case "HorizontalViewScrollbarOutline":
                this.ql(function (g) { return g.rv = _this.sy; });
                break;
            case "HorizontalViewScrollbarStrokeThickness":
                this.ql(function (g) { return g.gg = _this.hc; });
                break;
            case "VerticalViewScrollbarCornerRadius":
                this.ql(function (g) { return g.gx = _this.h0; });
                break;
            case "VerticalViewScrollbarFill":
                this.ql(function (g) { return g.r3 = _this.s2; });
                break;
            case "VerticalViewScrollbarMaxOpacity":
                this.ql(function (g) { return g.gz = _this.h2; });
                break;
            case "VerticalViewScrollbarOutline":
                this.ql(function (g) { return g.r4 = _this.s3; });
                break;
            case "VerticalViewScrollbarStrokeThickness":
                this.ql(function (g) { return g.g0 = _this.h3; });
                break;
            case "HorizontalViewScrollbarHeight":
                this.ql(function (g) { return g.gd = _this.g9; });
                break;
            case "HorizontalViewScrollbarInset":
                this.ql(function (g) { return g.ge = _this.ha; });
                break;
            case DomainChart.m5:
                this.ql(function (g) { return g.d1 = _this.eu; });
                break;
            case "HorizontalViewScrollbarTrackStartInset":
                this.ql(function (g) { return g.gi = _this.he; });
                break;
            case "HorizontalViewScrollbarTrackEndInset":
                this.ql(function (g) { return g.gh = _this.hd; });
                break;
            case "VerticalViewScrollbarPosition":
                this.ql(function (g) { return g.b3 = _this.cy; });
                break;
            case "HorizontalViewScrollbarPosition":
                this.ql(function (g) { return g.by = _this.cs; });
                break;
        }
        this.qu(a, b, c);
        this.qv(a, b, c);
    };
    DomainChart.prototype.qp = function (a, b, c) {
        var _this = this;
        if (!this.fc.containsKey(a)) {
            this.fd.add(a);
            this.fc.addItem(a, c);
        }
        else {
            this.fc.item(a, c);
        }
        this.pu(function (d) {
            if (_this.bk.isDataToolTipLayer(d)) {
                _this.ph(d);
            }
        });
    };
    DomainChart.prototype.ph = function (a) {
        for (var b = 0; b < this.fd.count; b++) {
            var c = this.fd._inner[b];
            var d = this.fc.item(c);
            if (stringStartsWith(c, "DataToolTip")) {
                c = c.substr(("DataToolTip").length);
            }
            this.bk.updateDataToolTipPropertyByName(a, c, d);
        }
    };
    DomainChart.prototype.qr = function (a, b) {
        var _this = this;
        this.px(function (c, d) { return _this.pi(c, d); });
    };
    Object.defineProperty(DomainChart.prototype, "itemsSource", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            var b = this.itemsSource;
            if (b != a) {
                this.fp = a;
                this.qt("ItemsSource", b, this.itemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "actualItemsSource", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            var b = this.actualItemsSource;
            if (b != a) {
                this.fn = a;
                this.qt("ActualItemsSource", b, this.actualItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "q", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            var b = this.h;
            this.h = a;
            if (b != this.h) {
                this.qt("IncludedProperties", b, this.h);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            var b = this.g;
            this.g = a;
            if (b != this.g) {
                this.qt("ExcludedProperties", b, this.g);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aa", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.aa;
            if (a != b) {
                this.t = a;
                this.qt("Brushes", b, this.aa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ae", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            var b = this.ae;
            if (a != b) {
                this.w = a;
                this.qt("Outlines", b, this.ae);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.r;
            if (a != b) {
                this.r = a;
                this.qt("ActualBrushes", b, this.y);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "z", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.s = a;
                this.qt("ActualOutlines", b, this.z);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "legend", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            var b = this.legend;
            if (a != b) {
                this.bl = a;
                this.qt("Legend", b, this.legend);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_e0 = function () {
        return this.d8;
    };
    DomainChart.prototype.set_e0 = function (a) {
        var b = this.e0;
        if (a != b) {
            this.d8 = a;
            this.qt("IsHorizontalZoomEnabled", b, this.e0);
        }
    };
    Object.defineProperty(DomainChart.prototype, "e0", {
        get: function () {
            return this.get_e0();
        },
        set: function (a) {
            this.set_e0(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_e6 = function () {
        return this.eb;
    };
    DomainChart.prototype.set_e6 = function (a) {
        var b = this.e6;
        if (a != b) {
            this.eb = a;
            this.qt("IsVerticalZoomEnabled", b, this.e6);
        }
    };
    Object.defineProperty(DomainChart.prototype, "e6", {
        get: function () {
            return this.get_e6();
        },
        set: function (a) {
            this.set_e6(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_e9 = function () {
        return this.ed;
    };
    DomainChart.prototype.set_e9 = function (a) {
        var b = this.e9;
        if (a != b) {
            this.ed = a;
            this.qt("ShouldDisplayMockData", b, this.e9);
        }
    };
    Object.defineProperty(DomainChart.prototype, "e9", {
        get: function () {
            return this.get_e9();
        },
        set: function (a) {
            this.set_e9(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_fa = function () {
        return this.ee;
    };
    DomainChart.prototype.set_fa = function (a) {
        var b = this.fa;
        if (a != b) {
            this.ee = a;
            this.qt("ShouldUseSkeletonStyleForMockData", b, this.fa);
        }
    };
    Object.defineProperty(DomainChart.prototype, "fa", {
        get: function () {
            return this.get_fa();
        },
        set: function (a) {
            this.set_fa(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_e2 = function () {
        return this.ea;
    };
    DomainChart.prototype.set_e2 = function (a) {
        var b = this.e2;
        if (a != b) {
            this.ea = a;
            this.qt("IsSeriesHighlightingEnabled", b, this.e2);
        }
    };
    Object.defineProperty(DomainChart.prototype, "e2", {
        get: function () {
            return this.get_e2();
        },
        set: function (a) {
            this.set_e2(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s7", {
        get: function () {
            return this.s5;
        },
        set: function (a) {
            var b = this.s7;
            if (Rect.l_op_Inequality(a, b)) {
                this.s5 = a;
                this.qt("WindowRect", b, this.s7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s6", {
        get: function () {
            return this.dataChart != null ? this.dataChart.su : Rect.empty;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "oh", {
        get: function () {
            return this.jj;
        },
        set: function (a) {
            var b = this.oh;
            if (a != b) {
                this.jj = a;
                this.qt("Title", b, this.oh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n6", {
        get: function () {
            return this.jh;
        },
        set: function (a) {
            var b = this.n6;
            if (a != b) {
                this.jh = a;
                this.qt("Subtitle", b, this.n6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ro", {
        get: function () {
            return this.rm;
        },
        set: function (a) {
            var b = this.ro;
            if (b != a) {
                this.rm = a;
                this.qt("TitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.ro));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "rn", {
        get: function () {
            return this.rl;
        },
        set: function (a) {
            var b = this.rn;
            if (b != a) {
                this.rl = a;
                this.qt("SubtitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.rn));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c4", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            var b = this.c4;
            if (a != b) {
                this.c3 = a;
                this.qt("UnknownValuePlotting", enumGetBox(UnknownValuePlotting_$type, b), enumGetBox(UnknownValuePlotting_$type, this.c4));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_hn = function () {
        return this.gh;
    };
    DomainChart.prototype.set_hn = function (a) {
        var b = this.hn;
        if (a != b) {
            this.gh = a;
            this.qt("Resolution", b, this.hn);
        }
    };
    Object.defineProperty(DomainChart.prototype, "hn", {
        get: function () {
            return this.get_hn();
        },
        set: function (a) {
            this.set_hn(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ht", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            var b = this.ht;
            if (a != b) {
                this.gn = a;
                this.qt("Thickness", b, this.ht);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cm", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            var b = this.cm;
            if (a != b) {
                this.cl = a;
                this.qt("OutlineMode", enumGetBox(SeriesOutlineMode_$type, b), enumGetBox(SeriesOutlineMode_$type, this.cm));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "b3", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            var b = this.b3;
            if (a != b) {
                this.b2 = a;
                this.qt("MarkerOutlineMode", enumGetBox(MarkerOutlineMode_$type, b), enumGetBox(MarkerOutlineMode_$type, this.b3));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "b1", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            var b = this.b1;
            if (a != b) {
                this.b0 = a;
                this.qt("MarkerFillMode", enumGetBox(MarkerFillMode_$type, b), enumGetBox(MarkerFillMode_$type, this.b1));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hg", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            var b = this.hg;
            if (a != b) {
                this.ga = a;
                this.qt("MarkerFillOpacity", b, this.hg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hh", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            var b = this.hh;
            if (a != b) {
                this.gb = a;
                this.qt("MarkerThickness", b, this.hh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "b8", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            var b = this.b8;
            if (a != b) {
                this.b7 = a;
                this.qt("MarkerTypes", b, this.b8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bz", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            var b = this.bz;
            if (a != b) {
                this.by = a;
                this.qt("MarkerAutomaticBehavior", enumGetBox(MarkerAutomaticBehavior_$type, b), enumGetBox(MarkerAutomaticBehavior_$type, this.bz));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ac", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            var b = this.ac;
            if (a != b) {
                this.u = a;
                this.qt("MarkerBrushes", b, this.ac);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ad", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            var b = this.ad;
            if (!Base.equalsStatic(a, b)) {
                this.v = a;
                this.qt("MarkerOutlines", b, this.ad);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ip", {
        get: function () {
            return this.ie;
        },
        set: function (a) {
            var b = this.ie;
            if (a != b) {
                this.ie = a;
                this.qt("MarkerMaxCount", b, this.ie);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g1", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            var b = this.g1;
            if (a != b) {
                this.fv = a;
                this.qt("AreaFillOpacity", b, this.g1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eh", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            var b = this.dv;
            if (a != b) {
                this.dv = a;
                this.qt("AnimateSeriesWhenAxisRangeChanges", b, this.dv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ag", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.ag;
            if (a != b) {
                this.x = a;
                this.qt("TrendLineBrushes", b, this.ag);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c2", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            var b = this.c2;
            if (a != b) {
                this.c1 = a;
                this.qt("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.c2));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hz", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            var b = this.hz;
            if (a != b) {
                this.gt = a;
                this.qt("TrendLineThickness", b, this.hz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eg", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            var b = this.eg;
            if (a != b) {
                this.du = a;
                this.qt("AlignsGridLinesToPixels", b, this.eg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hk", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            var b = this.ge;
            this.ge = a;
            if (a != b) {
                this.qt("PlotAreaMarginLeft", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hm", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            var b = this.gg;
            this.gg = a;
            if (a != b) {
                this.qt("PlotAreaMarginTop", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hl", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            var b = this.gf;
            this.gf = a;
            if (a != b) {
                this.qt("PlotAreaMarginRight", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hj", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            var b = this.gd;
            this.gd = a;
            if (a != b) {
                this.qt("PlotAreaMarginBottom", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.qs = function () {
    };
    Object.defineProperty(DomainChart.prototype, "ao", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.ao;
            if (a != b) {
                this.an = a;
                this.qt("ComputedPlotAreaMarginMode", enumGetBox(ComputedPlotAreaMarginMode_$type, b), enumGetBox(ComputedPlotAreaMarginMode_$type, this.ao));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "co", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            var b = this.co;
            if (a != b) {
                this.cn = a;
                this.qt("SeriesPlotAreaMarginHorizontalMode", enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, b), enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, this.co));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cq", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            var b = this.cq;
            if (a != b) {
                this.cp = a;
                this.qt("SeriesPlotAreaMarginVerticalMode", enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, b), enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, this.cq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ck", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            var b = this.ck;
            if (a != b) {
                this.cj = a;
                this.qt("HighlightingMode", enumGetBox(SeriesHighlightingMode_$type, b), enumGetBox(SeriesHighlightingMode_$type, this.ck));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ci", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            var b = this.ci;
            if (a != b) {
                this.ch = a;
                this.qt("HighlightingBehavior", enumGetBox(SeriesHighlightingBehavior_$type, b), enumGetBox(SeriesHighlightingBehavior_$type, this.ci));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "br", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            var b = this.br;
            if (a != b) {
                this.bq = a;
                this.qt("LegendHighlightingMode", enumGetBox(LegendHighlightingMode_$type, b), enumGetBox(LegendHighlightingMode_$type, this.br));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bx", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            var b = this.bx;
            if (a != b) {
                this.bv = a;
                this.qt("LegendItemBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.bx));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bt", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            var b = this.bt;
            if (a != b) {
                this.bs = a;
                this.qt("LegendItemBadgeMode", enumGetBox(LegendItemBadgeMode_$type, b), enumGetBox(LegendItemBadgeMode_$type, this.bt));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ir", {
        get: function () {
            return this.ii;
        },
        set: function (a) {
            var b = this.ir;
            if (a != b) {
                this.ii = a;
                this.qt("TrendLinePeriod", b, this.ir);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c0", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            var b = this.c0;
            if (a != b) {
                this.cz = a;
                this.qt("ToolTipType", enumGetBox(ToolTipType_$type, b), enumGetBox(ToolTipType_$type, this.c0));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aq", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            var b = this.aq;
            if (a != b) {
                this.ap = a;
                this.qt("CrosshairsDisplayMode", enumGetBox(CrosshairsDisplayMode_$type, b), enumGetBox(CrosshairsDisplayMode_$type, this.aq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "em", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            var b = this.em;
            if (a != b) {
                this.d0 = a;
                this.qt("CrosshairsSnapToData", b, this.em);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sh", {
        get: function () {
            return this.ru;
        },
        set: function (a) {
            var b = this.sh;
            if (a != b) {
                this.ru = a;
                this.qt("CrosshairsLineVerticalStroke", b, this.sh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g3", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            var b = this.g3;
            if (a != b) {
                this.fx = a;
                this.qt("CrosshairsLineThickness", b, this.g3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sg", {
        get: function () {
            return this.rt;
        },
        set: function (a) {
            var b = this.sg;
            if (a != b) {
                this.rt = a;
                this.qt("CrosshairsLineHorizontalStroke", b, this.sg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "el", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            var b = this.el;
            if (a != b) {
                this.dz = a;
                this.qt("CrosshairsAnnotationEnabled", b, this.el);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sc", {
        get: function () {
            return this.rp;
        },
        set: function (a) {
            var b = this.sc;
            if (a != b) {
                this.rp = a;
                this.qt("CrosshairsAnnotationXAxisBackground", b, this.sc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "se", {
        get: function () {
            return this.rr;
        },
        set: function (a) {
            var b = this.se;
            if (a != b) {
                this.rr = a;
                this.qt("CrosshairsAnnotationYAxisBackground", b, this.se);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sd", {
        get: function () {
            return this.rq;
        },
        set: function (a) {
            var b = this.sd;
            if (a != b) {
                this.rq = a;
                this.qt("CrosshairsAnnotationXAxisTextColor", b, this.sd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sf", {
        get: function () {
            return this.rs;
        },
        set: function (a) {
            var b = this.sf;
            if (a != b) {
                this.rs = a;
                this.qt("CrosshairsAnnotationYAxisTextColor", b, this.sf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ij", {
        get: function () {
            return this.h9;
        },
        set: function (a) {
            var b = this.ij;
            if (a != b) {
                this.h9 = a;
                this.qt("CrosshairsAnnotationXAxisPrecision", b, this.ij);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ik", {
        get: function () {
            return this.ia;
        },
        set: function (a) {
            var b = this.ik;
            if (a != b) {
                this.ia = a;
                this.qt("CrosshairsAnnotationYAxisPrecision", b, this.ik);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "e8", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            var b = this.e8;
            if (a != b) {
                this.ec = a;
                this.qt("ShouldAvoidAxisAnnotationCollisions", b, this.e8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "es", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            var b = this.es;
            if (a != b) {
                this.d6 = a;
                this.qt("FinalValueAnnotationsVisible", b, this.es);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sr", {
        get: function () {
            return this.r4;
        },
        set: function (a) {
            var b = this.sr;
            if (a != b) {
                this.r4 = a;
                this.qt("FinalValueAnnotationsBackground", b, this.sr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ss", {
        get: function () {
            return this.r5;
        },
        set: function (a) {
            var b = this.ss;
            if (a != b) {
                this.r5 = a;
                this.qt("FinalValueAnnotationsTextColor", b, this.ss);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "io", {
        get: function () {
            return this.id;
        },
        set: function (a) {
            var b = this.io;
            if (a != b) {
                this.id = a;
                this.qt("FinalValueAnnotationsPrecision", b, this.io);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ek", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            var b = this.ek;
            if (a != b) {
                this.dy = a;
                this.qt("CalloutsVisible", b, this.ek);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ej", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            var b = this.ej;
            if (a != b) {
                this.dx = a;
                this.qt("CalloutStyleUpdatingEventEnabled", b, this.ej);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "calloutsItemsSource", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            var b = this.calloutsItemsSource;
            if (a != b) {
                this.fo = a;
                this.qt("CalloutsItemsSource", b, this.calloutsItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ai", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            var b = this.ai;
            if (a != b) {
                this.ah = a;
                this.qt("CalloutsAllowedPositions", b, this.ai);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j1", {
        get: function () {
            return this.i5;
        },
        set: function (a) {
            var b = this.j1;
            if (a != b) {
                this.i5 = a;
                this.qt("CalloutsXMemberPath", b, this.j1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j3", {
        get: function () {
            return this.i6;
        },
        set: function (a) {
            var b = this.j3;
            if (a != b) {
                this.i6 = a;
                this.qt("CalloutsYMemberPath", b, this.j3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jx", {
        get: function () {
            return this.i4;
        },
        set: function (a) {
            var b = this.jx;
            if (a != b) {
                this.i4 = a;
                this.qt("CalloutsLabelMemberPath", b, this.jx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ju", {
        get: function () {
            return this.i3;
        },
        set: function (a) {
            var b = this.ju;
            if (a != b) {
                this.i3 = a;
                this.qt("CalloutsContentMemberPath", b, this.ju);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cv", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            var b = this.ct;
            this.ct = a;
            if (b != this.ct) {
                this.qt("HorizontalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.ct));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cw", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            var b = this.cu;
            this.cu = a;
            if (b != this.cu) {
                this.qt("VerticalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.cu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cs", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            var b = this.cr;
            this.cr = a;
            if (b != this.cr) {
                this.qt("HorizontalViewScrollbarPosition", enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, b), enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, this.cr));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cy", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            var b = this.cx;
            this.cx = a;
            if (b != this.cx) {
                this.qt("VerticalViewScrollbarPosition", enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, b), enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, this.cx));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sx", {
        get: function () {
            return this.r6;
        },
        set: function (a) {
            var b = this.r6;
            this.r6 = a;
            if (b != this.r6) {
                this.qt("HorizontalViewScrollbarFill", b, this.r6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sy", {
        get: function () {
            return this.r7;
        },
        set: function (a) {
            var b = this.r7;
            this.r7 = a;
            if (b != this.r7) {
                this.qt("HorizontalViewScrollbarOutline", b, this.r7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hc", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            var b = this.f6;
            this.f6 = a;
            if (b != this.f6) {
                this.qt("HorizontalViewScrollbarStrokeThickness", b, this.f6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hb", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            var b = this.f5;
            this.f5 = a;
            if (b != this.f5) {
                this.qt("HorizontalViewScrollbarMaxOpacity", b, this.f5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g8", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            var b = this.f2;
            this.f2 = a;
            if (b != this.f2) {
                this.qt("HorizontalViewScrollbarCornerRadius", b, this.f2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "g9", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            var b = this.f3;
            this.f3 = a;
            if (b != this.f3) {
                this.qt("HorizontalViewScrollbarHeight", b, this.f3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ha", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            var b = this.f4;
            this.f4 = a;
            if (b != this.f4) {
                this.qt("HorizontalViewScrollbarInset", b, this.f4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "he", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            var b = this.f8;
            this.f8 = a;
            if (b != this.f8) {
                this.qt("HorizontalViewScrollbarTrackStartInset", b, this.f8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hd", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            var b = this.f7;
            this.f7 = a;
            if (b != this.f7) {
                this.qt("HorizontalViewScrollbarTrackEndInset", b, this.f7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eu", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            var b = this.d7;
            this.d7 = a;
            if (b != this.d7) {
                this.qt(DomainChart.m5, b, this.d7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s2", {
        get: function () {
            return this.sa;
        },
        set: function (a) {
            var b = this.sa;
            this.sa = a;
            if (b != this.sa) {
                this.qt("VerticalViewScrollbarFill", b, this.sa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s3", {
        get: function () {
            return this.sb;
        },
        set: function (a) {
            var b = this.sb;
            this.sb = a;
            if (b != this.sb) {
                this.qt("VerticalViewScrollbarOutline", b, this.sb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h3", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            var b = this.gx;
            this.gx = a;
            if (b != this.gx) {
                this.qt("VerticalViewScrollbarStrokeThickness", b, this.gx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h2", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            var b = this.gw;
            this.gw = a;
            if (b != this.gw) {
                this.qt("VerticalViewScrollbarMaxOpacity", b, this.gw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h0", {
        get: function () {
            return this.gu;
        },
        set: function (a) {
            var b = this.gu;
            this.gu = a;
            if (b != this.gu) {
                this.qt("VerticalViewScrollbarCornerRadius", b, this.gu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h6", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            var b = this.g0;
            this.g0 = a;
            if (b != this.g0) {
                this.qt("VerticalViewScrollbarWidth", b, this.g0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h1", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            var b = this.gv;
            this.gv = a;
            if (b != this.gv) {
                this.qt("VerticalViewScrollbarInset", b, this.gv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h5", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            var b = this.gz;
            this.gz = a;
            if (b != this.gz) {
                this.qt("VerticalViewScrollbarTrackStartInset", b, this.gz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "h4", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            var b = this.gy;
            this.gy = a;
            if (b != this.gy) {
                this.qt("VerticalViewScrollbarTrackEndInset", b, this.gy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fb", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            var b = this.ef;
            this.ef = a;
            if (b != this.ef) {
                this.qt(DomainChart.pa, b, this.ef);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.$t = markType(DomainChart, 'DomainChart', Base.$, [INotifyPropertyChanged_$type, IDataLegendTarget_$type]);
    DomainChart.i2 = new Random(0);
    DomainChart.i1 = new Random(0);
    DomainChart.le = "DataToolTipShouldUpdateWhenSeriesDataChanges";
    DomainChart.m5 = "HorizontalViewScrollbarShouldAddAutoTrackInsets";
    DomainChart.pa = "VerticalViewScrollbarShouldAddAutoTrackInsets";
    return DomainChart;
}(Base));
export { DomainChart };
