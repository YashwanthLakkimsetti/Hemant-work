/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, delegateCombine, delegateRemove, markType } from "igniteui-react-core";
import { IAnnotationLayerProxy_$type } from "./IAnnotationLayerProxy";
import { CalloutLayer } from "./CalloutLayer";
import { DataToolTipLayer } from "./DataToolTipLayer";
/**
 * @hidden
 */
var AnnotationLayerProxy = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnnotationLayerProxy, _super);
    function AnnotationLayerProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnnotationLayerProxy.prototype.matchesType = function (a) {
        if (!a.dc) {
            return false;
        }
        return true;
    };
    AnnotationLayerProxy.prototype.setCrosshairHorizontalLineVisibility = function (a, b) {
        a.tw = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairVerticalLineVisibility = function (a, b) {
        a.tx = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairHorizontalLineStroke = function (a, b) {
        a.tm = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairVerticalLineStroke = function (a, b) {
        a.tn = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairXAxisForeground = function (a, b) {
        a.tq = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairYAxisForeground = function (a, b) {
        a.tt = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairXAxisBackground = function (a, b) {
        a.to = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairYAxisBackground = function (a, b) {
        a.tr = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairYAxisPrecision = function (a, b) {
        a.rv = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairXAxisPrecision = function (a, b) {
        a.ru = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairOnAxesEnabled = function (a, b) {
        a.rd = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairUseInterpolation = function (a, b) {
        a.rf = b;
    };
    AnnotationLayerProxy.prototype.setCrosshairThickness = function (a, b) {
        a.gz = b;
    };
    AnnotationLayerProxy.prototype.setFinalValuePrecision = function (a, b) {
        a.rk = b;
    };
    AnnotationLayerProxy.prototype.setFinalValueBackground = function (a, b) {
        a.se = b;
    };
    AnnotationLayerProxy.prototype.setFinalValueForeground = function (a, b) {
        a.sg = b;
    };
    AnnotationLayerProxy.prototype.setContentMemberPath = function (a, b) {
        a.tn = b;
    };
    AnnotationLayerProxy.prototype.setCalloutsAllowedPositions = function (a, b) {
        a.ri = b;
    };
    AnnotationLayerProxy.prototype.setLabelMemberPath = function (a, b) {
        a.tx = b;
    };
    AnnotationLayerProxy.prototype.setXMemberPath = function (a, b) {
        a.t8 = b;
    };
    AnnotationLayerProxy.prototype.setYMemberPath = function (a, b) {
        a.ub = b;
    };
    AnnotationLayerProxy.prototype.setTargetSeries = function (a, b) {
        a.rm = b;
    };
    AnnotationLayerProxy.prototype.setCollisionChannel = function (a, b) {
        a.tk = b;
    };
    AnnotationLayerProxy.prototype.isCalloutLayer = function (a) {
        if (typeCast(CalloutLayer.$, a) !== null) {
            return true;
        }
        return false;
    };
    AnnotationLayerProxy.prototype.isDataToolTipLayer = function (a) {
        if (typeCast(DataToolTipLayer.$, a) !== null) {
            return true;
        }
        return false;
    };
    AnnotationLayerProxy.prototype.addCalloutStyleUpdating = function (a, b) {
        var c = a;
        c.calloutStyleUpdating = delegateCombine(c.calloutStyleUpdating, b);
    };
    AnnotationLayerProxy.prototype.removeCalloutStyleUpdating = function (a, b) {
        var c = a;
        c.calloutStyleUpdating = delegateRemove(c.calloutStyleUpdating, b);
    };
    AnnotationLayerProxy.prototype.addCalloutRenderStyleUpdating = function (a, b) {
        var c = a;
        c.calloutRenderStyleUpdating = delegateCombine(c.calloutRenderStyleUpdating, b);
    };
    AnnotationLayerProxy.prototype.removeCalloutRenderStyleUpdating = function (a, b) {
        var c = a;
        c.calloutRenderStyleUpdating = delegateRemove(c.calloutRenderStyleUpdating, b);
    };
    AnnotationLayerProxy.prototype.setCalloutStyleUpdatingEventEnabled = function (a, b) {
        a.sd = b;
    };
    AnnotationLayerProxy.prototype.setCalloutRenderStyleUpdatingEventEnabled = function (a, b) {
        a.sc = b;
    };
    AnnotationLayerProxy.prototype.updateDataToolTipPropertyByName = function (a, b, c) {
        a.wk(b, c);
    };
    AnnotationLayerProxy.$t = markType(AnnotationLayerProxy, 'AnnotationLayerProxy', Base.$, [IAnnotationLayerProxy_$type]);
    return AnnotationLayerProxy;
}(Base));
export { AnnotationLayerProxy };
