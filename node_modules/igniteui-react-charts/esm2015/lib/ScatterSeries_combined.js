/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ScatterBase } from "./ScatterBase";
import { markType } from "igniteui-react-core";
import { ScatterFrame } from "./ScatterFrame";
import { ScatterBaseView } from "./ScatterBaseView";
import { Defaults } from "./Defaults";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
export let ScatterSeries = /*@__PURE__*/ (() => {
    class ScatterSeries extends ScatterBase {
        constructor() {
            super();
            this.ab = ScatterSeries.$;
            this.r2 = new ScatterFrame();
            this.r4 = new ScatterFrame();
            this.r0 = new ScatterFrame();
        }
        get_c4() {
            return true;
        }
        bx() {
            return new ScatterSeriesView(this);
        }
        gv() {
            return 0.7;
        }
        p6() {
            if (this.p5 == 0) {
                return 2;
            }
            return super.p6();
        }
        ly(a) {
            super.ly(a);
            this.u1 = a;
        }
    }
    ScatterSeries.$t = /*@__PURE__*/ markType(ScatterSeries, 'ScatterSeries', ScatterBase.$);
    return ScatterSeries;
})();
/**
 * @hidden
 */
export let ScatterSeriesView = /*@__PURE__*/ (() => {
    class ScatterSeriesView extends ScatterBaseView {
        constructor(a) {
            super(a);
            this.df = null;
            this.df = a;
        }
        as() {
            super.as();
            if (!this.q) {
                this.b1.qc = Defaults.e;
            }
        }
        af() {
            let a = new Color();
            a.colorString = "rgba(95,95,95,0.5)";
            this.e.pa = a;
            this.e.gw = 3;
            this.e.gx = 2;
            this.e.gy = 2;
            this.e.e7 = false;
        }
    }
    ScatterSeriesView.$t = /*@__PURE__*/ markType(ScatterSeriesView, 'ScatterSeriesView', ScatterBaseView.$);
    return ScatterSeriesView;
})();
