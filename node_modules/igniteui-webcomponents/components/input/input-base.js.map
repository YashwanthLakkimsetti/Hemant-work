{"version":3,"file":"input-base.js","sourceRoot":"","sources":["../../../src/components/input/input-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, nothing, TemplateResult } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport type { ReactiveTheme, ThemeController } from '../../theming/types.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { partNameMap } from '../common/util.js';\nimport { styles } from './themes/light/input.base.css.js';\nimport { styles as bootstrap } from './themes/light/input.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/input.fluent.css.js';\nimport { styles as indigo } from './themes/light/input.indigo.css.js';\nimport { styles as material } from './themes/light/input.material.css.js';\n\nlet nextId = 0;\n\nexport interface IgcInputEventMap {\n  /* alternateName: inputOcurred */\n  igcInput: CustomEvent<string>;\n  /* blazorSuppress */\n  igcChange: CustomEvent<string>;\n  igcFocus: CustomEvent<void>;\n  igcBlur: CustomEvent<void>;\n}\n\n@themes({ bootstrap, material, fluent, indigo })\nexport abstract class IgcInputBaseComponent\n  extends SizableMixin(\n    EventEmitterMixin<IgcInputEventMap, Constructor<LitElement>>(LitElement)\n  )\n  implements ReactiveTheme\n{\n  protected static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  public static styles = styles;\n\n  protected inputId = `input-${nextId++}`;\n\n  /** The value attribute of the control. */\n  @blazorSuppress()\n  public abstract value: string;\n\n  @query('input', true)\n  protected input!: HTMLInputElement;\n\n  @queryAssignedElements({ slot: 'prefix' })\n  protected prefixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'suffix' })\n  protected suffixes!: Array<HTMLElement>;\n\n  protected themeController!: ThemeController;\n\n  /** The name attribute of the control. */\n  @property()\n  public name!: string;\n\n  @property({ reflect: true, type: Boolean })\n  public outlined = false;\n\n  /** Makes the control a required field. */\n  @property({ reflect: true, type: Boolean })\n  public required = false;\n\n  /** Makes the control a disabled field. */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  /** Makes the control a readonly field. */\n  @property({ reflect: true, type: Boolean })\n  public readonly = false;\n\n  /** The placeholder attribute of the control. */\n  @property({ type: String })\n  public placeholder!: string;\n\n  /** The label for the control. */\n  @property({ type: String })\n  public label!: string;\n\n  constructor() {\n    super();\n    this.size = 'medium';\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.shadowRoot!.addEventListener('slotchange', () => this.requestUpdate());\n  }\n\n  public themeAdopted(controller: ThemeController): void {\n    this.themeController = controller;\n  }\n\n  /** Sets focus on the control. */\n  @alternateName('focusComponent')\n  public override focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the control. */\n  @alternateName('blurComponent')\n  public override blur() {\n    this.input.blur();\n  }\n\n  protected abstract renderInput(): TemplateResult;\n\n  protected resolvePartNames(base: string) {\n    return {\n      [base]: true,\n      prefixed: this.prefixes.length > 0,\n      suffixed: this.suffixes.length > 0,\n      filled: !!this.value,\n    };\n  }\n\n  protected handleFocus() {\n    this.emitEvent('igcFocus');\n  }\n\n  protected handleBlur() {\n    this.emitEvent('igcBlur');\n  }\n\n  protected handleChange() {\n    this.value = this.input.value;\n    this.emitEvent('igcChange', { detail: this.value });\n  }\n\n  /** Sets the text selection range of the control */\n  public setSelectionRange(\n    start: number,\n    end: number,\n    direction: 'backward' | 'forward' | 'none' = 'none'\n  ) {\n    this.input.setSelectionRange(start, end, direction);\n  }\n\n  /** Replaces the selected text in the input. */\n  public setRangeText(\n    replacement: string,\n    start: number,\n    end: number,\n    selectMode: 'select' | 'start' | 'end' | 'preserve' = 'preserve'\n  ) {\n    this.input.setRangeText(replacement, start, end, selectMode);\n  }\n\n  private renderPrefix() {\n    return html`<div part=\"prefix\">\n      <slot name=\"prefix\"></slot>\n    </div>`;\n  }\n\n  private renderSuffix() {\n    return html`<div part=\"suffix\">\n      <slot name=\"suffix\"></slot>\n    </div>`;\n  }\n\n  private renderLabel() {\n    return this.label\n      ? html`<label part=\"label\" for=\"${this.inputId}\"> ${this.label} </label>`\n      : nothing;\n  }\n\n  private renderMaterial() {\n    return html`\n      <div\n        part=\"${partNameMap({\n          ...this.resolvePartNames('container'),\n          labelled: this.label,\n        })}\"\n      >\n        <div part=\"start\">${this.renderPrefix()}</div>\n        ${this.renderInput()}\n        <div part=\"notch\">${this.renderLabel()}</div>\n        <div part=\"filler\"></div>\n        <div part=\"end\">${this.renderSuffix()}</div>\n      </div>\n      <div part=\"helper-text\">\n        <slot name=\"helper-text\"></slot>\n      </div>\n    `;\n  }\n\n  private renderStandard() {\n    return html`${this.renderLabel()}\n      <div part=\"${partNameMap(this.resolvePartNames('container'))}\">\n        ${this.renderPrefix()} ${this.renderInput()} ${this.renderSuffix()}\n      </div>\n      <div part=\"helper-text\">\n        <slot name=\"helper-text\"></slot>\n      </div>`;\n  }\n\n  protected override render() {\n    return html`${this.themeController.theme === 'material'\n      ? this.renderMaterial()\n      : this.renderStandard()}`;\n  }\n}\n"]}