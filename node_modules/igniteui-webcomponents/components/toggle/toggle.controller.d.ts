import { ReactiveController, ReactiveControllerHost } from 'lit';
import { IgcToggleDirective } from './toggle.directive.js';
import type { DirectiveResult } from 'lit/directive';
import type { IgcToggleComponent } from './types';
/**
 * Controller, bundling the creation of a toggle directive and handling global events,
 * related to the configuration of togglable components.
 */
export declare class IgcToggleController implements ReactiveController {
    private host;
    private sourceElement?;
    private initialScrollTop;
    private initialScrollLeft;
    private _target;
    /** The directive that marks the toggle. */
    toggleDirective: DirectiveResult<typeof IgcToggleDirective>;
    rendered: Promise<void>;
    set target(value: HTMLElement);
    /** The element, relative to which, the toggle will be positioned. */
    get target(): HTMLElement;
    constructor(host: ReactiveControllerHost & IgcToggleComponent & HTMLElement, target?: HTMLElement);
    hostConnected(): void;
    hostDisconnected(): void;
    updateToggleDir(): void;
    private addEventListeners;
    private removeEventListeners;
    private blockScroll;
    /** The document's click event handler to override in the host component if necessary. */
    private documentClicked;
    /** The document's scroll event handler to override in the host component if necessary. */
    private handleScroll;
}
