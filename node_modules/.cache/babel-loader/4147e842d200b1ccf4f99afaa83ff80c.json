{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ColorScaleInterpolationMode_$type } from \"./ColorScaleInterpolationMode\";\nimport { IgrColorScale } from \"./igr-color-scale\";\nimport { CustomPaletteColorScale } from \"./CustomPaletteColorScale\";\nimport { toColorCollection, fromColorCollection, ensureEnum } from \"igniteui-react-core\";\n/**\n * ColorScale class for selecting a color from a given palette, or interpolating between adjacent colors in that palette.\n*/\n\nvar IgrCustomPaletteColorScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrCustomPaletteColorScale, _super);\n\n  function IgrCustomPaletteColorScale(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCustomPaletteColorScale.prototype.createImplementation = function () {\n    return new CustomPaletteColorScale();\n  };\n\n  Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"minimumValue\", {\n    /**\n     * The lowest value to assign a color.  Any given value less than this value will be made Transparent.\n    */\n    get: function get() {\n      return this.i.minimumValue;\n    },\n    set: function set(v) {\n      this.i.minimumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"maximumValue\", {\n    /**\n     * The highest value to assign a color.  Any given value greater than this value will be made Transparent.\n    */\n    get: function get() {\n      return this.i.maximumValue;\n    },\n    set: function set(v) {\n      this.i.maximumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"palette\", {\n    /**\n     * A list of colors to select from or interpolate between.\n    */\n    get: function get() {\n      return fromColorCollection(this.i.palette);\n    },\n    set: function set(v) {\n      this.i.palette = toColorCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"interpolationMode\", {\n    /**\n     * The approach to use when getting a color from the palette.\n    */\n    get: function get() {\n      return this.i.interpolationMode;\n    },\n    set: function set(v) {\n      this.i.interpolationMode = ensureEnum(ColorScaleInterpolationMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrCustomPaletteColorScale.prototype.providePalette = function (colors) {\n    this.i.providePalette(colors);\n  };\n\n  return IgrCustomPaletteColorScale;\n}(IgrColorScale);\n\nexport { IgrCustomPaletteColorScale };","map":{"version":3,"names":["__extends","ColorScaleInterpolationMode_$type","IgrColorScale","CustomPaletteColorScale","toColorCollection","fromColorCollection","ensureEnum","IgrCustomPaletteColorScale","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","minimumValue","set","v","maximumValue","palette","interpolationMode","providePalette","colors"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-custom-palette-color-scale.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { ColorScaleInterpolationMode_$type } from \"./ColorScaleInterpolationMode\";\nimport { IgrColorScale } from \"./igr-color-scale\";\nimport { CustomPaletteColorScale } from \"./CustomPaletteColorScale\";\nimport { toColorCollection, fromColorCollection, ensureEnum } from \"igniteui-react-core\";\n/**\n * ColorScale class for selecting a color from a given palette, or interpolating between adjacent colors in that palette.\n*/\nvar IgrCustomPaletteColorScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrCustomPaletteColorScale, _super);\n    function IgrCustomPaletteColorScale(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCustomPaletteColorScale.prototype.createImplementation = function () {\n        return new CustomPaletteColorScale();\n    };\n    Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"minimumValue\", {\n        /**\n         * The lowest value to assign a color.  Any given value less than this value will be made Transparent.\n        */\n        get: function () {\n            return this.i.minimumValue;\n        },\n        set: function (v) {\n            this.i.minimumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"maximumValue\", {\n        /**\n         * The highest value to assign a color.  Any given value greater than this value will be made Transparent.\n        */\n        get: function () {\n            return this.i.maximumValue;\n        },\n        set: function (v) {\n            this.i.maximumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"palette\", {\n        /**\n         * A list of colors to select from or interpolate between.\n        */\n        get: function () {\n            return fromColorCollection(this.i.palette);\n        },\n        set: function (v) {\n            this.i.palette = toColorCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteColorScale.prototype, \"interpolationMode\", {\n        /**\n         * The approach to use when getting a color from the palette.\n        */\n        get: function () {\n            return this.i.interpolationMode;\n        },\n        set: function (v) {\n            this.i.interpolationMode = ensureEnum(ColorScaleInterpolationMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrCustomPaletteColorScale.prototype.providePalette = function (colors) {\n        this.i.providePalette(colors);\n    };\n    return IgrCustomPaletteColorScale;\n}(IgrColorScale));\nexport { IgrCustomPaletteColorScale };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}