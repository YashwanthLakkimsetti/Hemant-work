{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { PointSeries } from \"./PointSeries\";\n/**\n * Represents a IgxDataChartComponent point series.\n*\n* You can use the `IgrPointSeries` plot a value along a category or date.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPointSeries\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* const series1 = new IgrPointSeries({ name: \"series1\" });\n* series1.xAxisName = \"xAxis\";\n* series1.yAxisName = \"yAxis\";\n* series1.markerType = MarkerType.Circle;\n* series1.valueMemberPath = \"USA\";\n* ```\n*/\n\nvar IgrPointSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrPointSeries, _super);\n\n  function IgrPointSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrPointSeries.prototype.createImplementation = function () {\n    return new PointSeries();\n  };\n\n  Object.defineProperty(IgrPointSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPointSeries.prototype, \"hasOnlyMarkers\", {\n    /**\n     * Gets whether the series has only marker as visuals\n    */\n    get: function get() {\n      return this.i.c4;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrPointSeries;\n}(IgrHorizontalAnchoredCategorySeries);\n\nexport { IgrPointSeries };","map":{"version":3,"names":["__extends","IgrHorizontalAnchoredCategorySeries","PointSeries","IgrPointSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","c4"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-point-series.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { PointSeries } from \"./PointSeries\";\n/**\n * Represents a IgxDataChartComponent point series.\n*\n* You can use the `IgrPointSeries` plot a value along a category or date.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPointSeries\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* const series1 = new IgrPointSeries({ name: \"series1\" });\n* series1.xAxisName = \"xAxis\";\n* series1.yAxisName = \"yAxis\";\n* series1.markerType = MarkerType.Circle;\n* series1.valueMemberPath = \"USA\";\n* ```\n*/\nvar IgrPointSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrPointSeries, _super);\n    function IgrPointSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrPointSeries.prototype.createImplementation = function () {\n        return new PointSeries();\n    };\n    Object.defineProperty(IgrPointSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPointSeries.prototype, \"hasOnlyMarkers\", {\n        /**\n         * Gets whether the series has only marker as visuals\n        */\n        get: function () {\n            return this.i.c4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrPointSeries;\n}(IgrHorizontalAnchoredCategorySeries));\nexport { IgrPointSeries };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,mCAAT,QAAoD,2CAApD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAChEJ,SAAS,CAACG,cAAD,EAAiBC,MAAjB,CAAT;;EACA,SAASD,cAAT,CAAwBE,KAAxB,EAA+B;IAC3B,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,cAAc,CAACI,SAAf,CAAyBC,oBAAzB,GAAgD,YAAY;IACxD,OAAO,IAAIN,WAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,cAAc,CAACI,SAArC,EAAgD,GAAhD,EAAqD;IACjD;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANgD;IAOjDC,UAAU,EAAE,KAPqC;IAQjDC,YAAY,EAAE;EARmC,CAArD;EAUAL,MAAM,CAACC,cAAP,CAAsBP,cAAc,CAACI,SAArC,EAAgD,gBAAhD,EAAkE;IAC9D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAN6D;IAO9DH,UAAU,EAAE,KAPkD;IAQ9DC,YAAY,EAAE;EARgD,CAAlE;EAUA,OAAOX,cAAP;AACH,CA7BiD,CA6BhDF,mCA7BgD,CAAlD;;AA8BA,SAASE,cAAT"},"metadata":{},"sourceType":"module"}