{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { NumericAngleAxis } from \"./NumericAngleAxis\";\n/**\n * Represents a IgxDataChartComponent angle based axis for polar series.\n*/\n\nvar IgrNumericAngleAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrNumericAngleAxis, _super);\n\n  function IgrNumericAngleAxis(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrNumericAngleAxis.prototype.createImplementation = function () {\n    return new NumericAngleAxis();\n  };\n\n  Object.defineProperty(IgrNumericAngleAxis.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrNumericAngleAxis.prototype, \"isAngular\", {\n    /**\n     * Gets if the current axis is of angular axis type\n    */\n    get: function get() {\n      return this.i.b8;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrNumericAngleAxis.prototype, \"startAngleOffset\", {\n    /**\n     * Indicates the angle in degress that the chart's 0th angle should be offset.\n    */\n    get: function get() {\n      return this.i.np;\n    },\n    set: function set(v) {\n      this.i.np = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Gets the scaled angle value in radians based on the raw input.\n  \r\n  * @param unscaledAngle  * The unscaled angle.\n  */\n\n  IgrNumericAngleAxis.prototype.getScaledAngle = function (unscaledAngle) {\n    var iv = this.i.getScaledAngle(unscaledAngle);\n    return iv;\n  };\n  /**\n   * Gets the raw axis value back from the angle that would be used on the chart.\n  \r\n  * @param scaledAngle  * The chart angle value.\n  */\n\n\n  IgrNumericAngleAxis.prototype.getUnscaledAngle = function (scaledAngle) {\n    var iv = this.i.getUnscaledAngle(scaledAngle);\n    return iv;\n  };\n\n  return IgrNumericAngleAxis;\n}(IgrNumericAxisBase);\n\nexport { IgrNumericAngleAxis };","map":{"version":3,"names":["__extends","IgrNumericAxisBase","NumericAngleAxis","IgrNumericAngleAxis","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","b8","np","set","v","getScaledAngle","unscaledAngle","iv","getUnscaledAngle","scaledAngle"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-numeric-angle-axis.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { NumericAngleAxis } from \"./NumericAngleAxis\";\n/**\n * Represents a IgxDataChartComponent angle based axis for polar series.\n*/\nvar IgrNumericAngleAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrNumericAngleAxis, _super);\n    function IgrNumericAngleAxis(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrNumericAngleAxis.prototype.createImplementation = function () {\n        return new NumericAngleAxis();\n    };\n    Object.defineProperty(IgrNumericAngleAxis.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrNumericAngleAxis.prototype, \"isAngular\", {\n        /**\n         * Gets if the current axis is of angular axis type\n        */\n        get: function () {\n            return this.i.b8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrNumericAngleAxis.prototype, \"startAngleOffset\", {\n        /**\n         * Indicates the angle in degress that the chart's 0th angle should be offset.\n        */\n        get: function () {\n            return this.i.np;\n        },\n        set: function (v) {\n            this.i.np = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the scaled angle value in radians based on the raw input.\n    \r\n    * @param unscaledAngle  * The unscaled angle.\n    */\n    IgrNumericAngleAxis.prototype.getScaledAngle = function (unscaledAngle) {\n        var iv = this.i.getScaledAngle(unscaledAngle);\n        return (iv);\n    };\n    /**\n     * Gets the raw axis value back from the angle that would be used on the chart.\n    \r\n    * @param scaledAngle  * The chart angle value.\n    */\n    IgrNumericAngleAxis.prototype.getUnscaledAngle = function (scaledAngle) {\n        var iv = this.i.getUnscaledAngle(scaledAngle);\n        return (iv);\n    };\n    return IgrNumericAngleAxis;\n}(IgrNumericAxisBase));\nexport { IgrNumericAngleAxis };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACrEJ,SAAS,CAACG,mBAAD,EAAsBC,MAAtB,CAAT;;EACA,SAASD,mBAAT,CAA6BE,KAA7B,EAAoC;IAChC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,mBAAmB,CAACI,SAApB,CAA8BC,oBAA9B,GAAqD,YAAY;IAC7D,OAAO,IAAIN,gBAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,mBAAmB,CAACI,SAA1C,EAAqD,GAArD,EAA0D;IACtD;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANqD;IAOtDC,UAAU,EAAE,KAP0C;IAQtDC,YAAY,EAAE;EARwC,CAA1D;EAUAL,MAAM,CAACC,cAAP,CAAsBP,mBAAmB,CAACI,SAA1C,EAAqD,WAArD,EAAkE;IAC9D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAN6D;IAO9DH,UAAU,EAAE,KAPkD;IAQ9DC,YAAY,EAAE;EARgD,CAAlE;EAUAL,MAAM,CAACC,cAAP,CAAsBP,mBAAmB,CAACI,SAA1C,EAAqD,kBAArD,EAAyE;IACrE;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOE,EAAd;IACH,CANoE;IAOrEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOE,EAAP,GAAY,CAACE,CAAb;IACH,CAToE;IAUrEN,UAAU,EAAE,KAVyD;IAWrEC,YAAY,EAAE;EAXuD,CAAzE;EAaA;AACJ;AACA;AACA;AACA;;EACIX,mBAAmB,CAACI,SAApB,CAA8Ba,cAA9B,GAA+C,UAAUC,aAAV,EAAyB;IACpE,IAAIC,EAAE,GAAG,KAAKP,CAAL,CAAOK,cAAP,CAAsBC,aAAtB,CAAT;IACA,OAAQC,EAAR;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;;;EACInB,mBAAmB,CAACI,SAApB,CAA8BgB,gBAA9B,GAAiD,UAAUC,WAAV,EAAuB;IACpE,IAAIF,EAAE,GAAG,KAAKP,CAAL,CAAOQ,gBAAP,CAAwBC,WAAxB,CAAT;IACA,OAAQF,EAAR;EACH,CAHD;;EAIA,OAAOnB,mBAAP;AACH,CA5DsD,CA4DrDF,kBA5DqD,CAAvD;;AA6DA,SAASE,mBAAT"},"metadata":{},"sourceType":"module"}