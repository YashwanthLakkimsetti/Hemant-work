{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar GeographicXYTriangulatingSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicXYTriangulatingSeriesDescriptionMetadata, _super);\n\n  function GeographicXYTriangulatingSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicXYTriangulatingSeriesDescriptionMetadata.b = function (a) {\n    if (GeographicXYTriangulatingSeriesDescriptionMetadata.a == null) {\n      GeographicXYTriangulatingSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicXYTriangulatingSeriesDescriptionMetadata.c(GeographicXYTriangulatingSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicXYTriangulatingSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicXYTriangulatingSeriesDescriptionMetadata.a);\n  };\n\n  GeographicXYTriangulatingSeriesDescriptionMetadata.c = function (a) {\n    GeographicMapSeriesHostDescriptionMetadata.c(a);\n    a.item(\"LongitudeMemberPath\", \"String\");\n    a.item(\"LatitudeMemberPath\", \"String\");\n    a.item(\"TrianglesSourceRef\", \"(w:TrianglesSource,wf:TrianglesSource)DataRef::object\");\n    a.item(\"TriangleVertexMemberPath1\", \"String\");\n    a.item(\"TriangleVertexMemberPath2\", \"String\");\n    a.item(\"TriangleVertexMemberPath3\", \"String\");\n  };\n\n  GeographicXYTriangulatingSeriesDescriptionMetadata.d = function (a) {\n    GeographicXYTriangulatingSeriesDescriptionMetadata.b(a);\n    a.t(\"GeographicXYTriangulatingSeries\", GeographicXYTriangulatingSeriesDescriptionMetadata.a);\n  };\n\n  GeographicXYTriangulatingSeriesDescriptionMetadata.$t = markType(GeographicXYTriangulatingSeriesDescriptionMetadata, 'GeographicXYTriangulatingSeriesDescriptionMetadata');\n  GeographicXYTriangulatingSeriesDescriptionMetadata.a = null;\n  return GeographicXYTriangulatingSeriesDescriptionMetadata;\n}(Base);\n\nexport { GeographicXYTriangulatingSeriesDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","GeographicMapSeriesHostDescriptionMetadata","GeographicXYTriangulatingSeriesDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/GeographicXYTriangulatingSeriesDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\n * @hidden\n */\nvar GeographicXYTriangulatingSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicXYTriangulatingSeriesDescriptionMetadata, _super);\n    function GeographicXYTriangulatingSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicXYTriangulatingSeriesDescriptionMetadata.b = function (a) {\n        if (GeographicXYTriangulatingSeriesDescriptionMetadata.a == null) {\n            GeographicXYTriangulatingSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicXYTriangulatingSeriesDescriptionMetadata.c(GeographicXYTriangulatingSeriesDescriptionMetadata.a);\n        }\n        if (a.g(GeographicXYTriangulatingSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicXYTriangulatingSeriesDescriptionMetadata.a);\n    };\n    GeographicXYTriangulatingSeriesDescriptionMetadata.c = function (a) {\n        GeographicMapSeriesHostDescriptionMetadata.c(a);\n        a.item(\"LongitudeMemberPath\", \"String\");\n        a.item(\"LatitudeMemberPath\", \"String\");\n        a.item(\"TrianglesSourceRef\", \"(w:TrianglesSource,wf:TrianglesSource)DataRef::object\");\n        a.item(\"TriangleVertexMemberPath1\", \"String\");\n        a.item(\"TriangleVertexMemberPath2\", \"String\");\n        a.item(\"TriangleVertexMemberPath3\", \"String\");\n    };\n    GeographicXYTriangulatingSeriesDescriptionMetadata.d = function (a) {\n        GeographicXYTriangulatingSeriesDescriptionMetadata.b(a);\n        a.t(\"GeographicXYTriangulatingSeries\", GeographicXYTriangulatingSeriesDescriptionMetadata.a);\n    };\n    GeographicXYTriangulatingSeriesDescriptionMetadata.$t = markType(GeographicXYTriangulatingSeriesDescriptionMetadata, 'GeographicXYTriangulatingSeriesDescriptionMetadata');\n    GeographicXYTriangulatingSeriesDescriptionMetadata.a = null;\n    return GeographicXYTriangulatingSeriesDescriptionMetadata;\n}(Base));\nexport { GeographicXYTriangulatingSeriesDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,0CAAT,QAA2D,8CAA3D;AACA;AACA;AACA;;AACA,IAAIC,kDAAkD;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACpGP,SAAS,CAACM,kDAAD,EAAqDC,MAArD,CAAT;;EACA,SAASD,kDAAT,GAA8D;IAC1D,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,kDAAkD,CAACI,CAAnD,GAAuD,UAAUC,CAAV,EAAa;IAChE,IAAIL,kDAAkD,CAACK,CAAnD,IAAwD,IAA5D,EAAkE;MAC9DL,kDAAkD,CAACK,CAAnD,GAAuD,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAvD;MACAI,kDAAkD,CAACM,CAAnD,CAAqDN,kDAAkD,CAACK,CAAxG;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,kDAAkD,CAACK,CAAvD,CAAJ,EAA+D;MAC3D;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,kDAAkD,CAACK,CAAvD;EACH,CATD;;EAUAL,kDAAkD,CAACM,CAAnD,GAAuD,UAAUD,CAAV,EAAa;IAChEN,0CAA0C,CAACO,CAA3C,CAA6CD,CAA7C;IACAA,CAAC,CAACI,IAAF,CAAO,qBAAP,EAA8B,QAA9B;IACAJ,CAAC,CAACI,IAAF,CAAO,oBAAP,EAA6B,QAA7B;IACAJ,CAAC,CAACI,IAAF,CAAO,oBAAP,EAA6B,uDAA7B;IACAJ,CAAC,CAACI,IAAF,CAAO,2BAAP,EAAoC,QAApC;IACAJ,CAAC,CAACI,IAAF,CAAO,2BAAP,EAAoC,QAApC;IACAJ,CAAC,CAACI,IAAF,CAAO,2BAAP,EAAoC,QAApC;EACH,CARD;;EASAT,kDAAkD,CAACU,CAAnD,GAAuD,UAAUL,CAAV,EAAa;IAChEL,kDAAkD,CAACI,CAAnD,CAAqDC,CAArD;IACAA,CAAC,CAACM,CAAF,CAAI,iCAAJ,EAAuCX,kDAAkD,CAACK,CAA1F;EACH,CAHD;;EAIAL,kDAAkD,CAACY,EAAnD,GAAwDf,QAAQ,CAACG,kDAAD,EAAqD,oDAArD,CAAhE;EACAA,kDAAkD,CAACK,CAAnD,GAAuD,IAAvD;EACA,OAAOL,kDAAP;AACH,CA/BqF,CA+BpFL,IA/BoF,CAAtF;;AAgCA,SAASK,kDAAT"},"metadata":{},"sourceType":"module"}