{"ast":null,"code":"import { FinancialCalculationDataSource as FinancialCalculationDataSource_internal } from \"./FinancialCalculationDataSource\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents the data contract between a financial series and the\n * decoupled calculation responsibilities which implement its mathmatical logic.\n * The FinancialCalculationDataSource contract represents the subset\n * of data which needs to be provided in order to test or run a calculation,\n * and its intentionally a subset of the information available to the series,\n * in order to make calculation strategies more easily testable and usable in isolation to\n * the financial series container.\n*/\n\nvar IgrFinancialCalculationDataSource =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrFinancialCalculationDataSource() {\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrFinancialCalculationDataSource.prototype.createImplementation = function () {\n    return new FinancialCalculationDataSource_internal();\n  };\n\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"i\", {\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialCalculationDataSource.prototype.onImplementationCreated = function () {};\n\n  IgrFinancialCalculationDataSource.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"openColumn\", {\n    get: function get() {\n      return this.i.series.getOpenColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"highColumn\", {\n    get: function get() {\n      return this.i.series.getHighColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"lowColumn\", {\n    get: function get() {\n      return this.i.series.getLowColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"closeColumn\", {\n    get: function get() {\n      return this.i.series.getCloseColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"volumeColumn\", {\n    get: function get() {\n      return this.i.series.getVolumeColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"indicatorColumn\", {\n    get: function get() {\n      return this.i.series.indicatorColumn.asArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"typicalColumn\", {\n    /**\n    * An enumerable list of typical prices provided by the series to use\n    * in calculations.\n    */\n    get: function get() {\n      if (this.i.typicalColumn == null) {\n        return null;\n      }\n\n      return this.i.typicalColumn.externalObject;\n    },\n    set: function set(v) {\n      v == null ? this.i.typicalColumn = null : this.i.typicalColumn = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueRange\", {\n    /**\n     * And enumerable list of true range values provided by the series to use\n     * in calculations.\n    */\n    get: function get() {\n      if (this.i.trueRange == null) {\n        return null;\n      }\n\n      return this.i.trueRange.externalObject;\n    },\n    set: function set(v) {\n      v == null ? this.i.trueRange = null : this.i.trueRange = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueLow\", {\n    /**\n     * An enumerable list of true low values provided by the series to use\n     * in calculations.\n    */\n    get: function get() {\n      if (this.i.trueLow == null) {\n        return null;\n      }\n\n      return this.i.trueLow.externalObject;\n    },\n    set: function set(v) {\n      v == null ? this.i.trueLow = null : this.i.trueLow = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"period\", {\n    /**\n     * The period to use when calculating, if applicable.\n    */\n    get: function get() {\n      return this.i.period;\n    },\n    set: function set(v) {\n      this.i.period = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"shortPeriod\", {\n    /**\n     * The short period to use when calculating, if applicable.\n    */\n    get: function get() {\n      return this.i.shortPeriod;\n    },\n    set: function set(v) {\n      this.i.shortPeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"longPeriod\", {\n    /**\n     * The long period to use when calculating, if applicable.\n    */\n    get: function get() {\n      return this.i.longPeriod;\n    },\n    set: function set(v) {\n      this.i.longPeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"count\", {\n    /**\n     * The count of the values in the series.\n    */\n    get: function get() {\n      return this.i.count;\n    },\n    set: function set(v) {\n      this.i.count = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateFrom\", {\n    /**\n     * The starting index from which to calculate\n    */\n    get: function get() {\n      return this.i.calculateFrom;\n    },\n    set: function set(v) {\n      this.i.calculateFrom = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateCount\", {\n    /**\n     * The number of items from the starting index from which to calculate\n    */\n    get: function get() {\n      return this.i.calculateCount;\n    },\n    set: function set(v) {\n      this.i.calculateCount = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"multiplier\", {\n    /**\n     * If the calculation supports some sort of scaling factor,\n     * this value will be used.\n    */\n    get: function get() {\n      return this.i.multiplier;\n    },\n    set: function set(v) {\n      this.i.multiplier = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"minimumValue\", {\n    /**\n     * If the calculation determines the range of indicator values,\n     * it will set the minimum and maximux properties.\n     * This will contain the previous minimum value when the indicator\n     * calculation is called again, in case this makes the update of the\n     * value speedier.\n    */\n    get: function get() {\n      return this.i.minimumValue;\n    },\n    set: function set(v) {\n      this.i.minimumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"maximumValue\", {\n    /**\n     * If the calculation determines the range of indicator values,\n     * it will set the minimum and maximux properties.\n     * This will contain the previous minimum value when the indicator\n     * calculation is called again, in case this makes the update of the\n     * value speedier.\n    */\n    get: function get() {\n      return this.i.maximumValue;\n    },\n    set: function set(v) {\n      this.i.maximumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"specifiesRange\", {\n    /**\n     * The calculation strategy should set this to true if it\n     * specifes the minimum and maximum value properties.\n    */\n    get: function get() {\n      return this.i.specifiesRange;\n    },\n    set: function set(v) {\n      this.i.specifiesRange = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialCalculationDataSource.prototype.findByName = function (name) {\n    if (this.typicalColumn && this.typicalColumn.name && this.typicalColumn.name == name) {\n      return this.typicalColumn;\n    }\n\n    if (this.trueRange && this.trueRange.name && this.trueRange.name == name) {\n      return this.trueRange;\n    }\n\n    if (this.trueLow && this.trueLow.name && this.trueLow.name == name) {\n      return this.trueLow;\n    }\n\n    return null;\n  };\n\n  return IgrFinancialCalculationDataSource;\n}();\n\nexport { IgrFinancialCalculationDataSource };","map":{"version":3,"names":["FinancialCalculationDataSource","FinancialCalculationDataSource_internal","ensureBool","IgrFinancialCalculationDataSource","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","Object","defineProperty","get","enumerable","configurable","_provideImplementation","i","series","getOpenColumnAsArray","getHighColumnAsArray","getLowColumnAsArray","getCloseColumnAsArray","getVolumeColumnAsArray","indicatorColumn","asArray","typicalColumn","set","v","trueRange","trueLow","period","shortPeriod","longPeriod","count","calculateFrom","calculateCount","multiplier","minimumValue","maximumValue","specifiesRange","findByName","name"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-financial-calculation-data-source.js"],"sourcesContent":["import { FinancialCalculationDataSource as FinancialCalculationDataSource_internal } from \"./FinancialCalculationDataSource\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents the data contract between a financial series and the\n * decoupled calculation responsibilities which implement its mathmatical logic.\n * The FinancialCalculationDataSource contract represents the subset\n * of data which needs to be provided in order to test or run a calculation,\n * and its intentionally a subset of the information available to the series,\n * in order to make calculation strategies more easily testable and usable in isolation to\n * the financial series container.\n*/\nvar IgrFinancialCalculationDataSource = /** @class */ /*@__PURE__*/ (function () {\n    function IgrFinancialCalculationDataSource() {\n        this._implementation = this.createImplementation();\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    }\n    IgrFinancialCalculationDataSource.prototype.createImplementation = function () {\n        return new FinancialCalculationDataSource_internal();\n    };\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialCalculationDataSource.prototype.onImplementationCreated = function () {\n    };\n    IgrFinancialCalculationDataSource.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"openColumn\", {\n        get: function () {\n            return this.i.series.getOpenColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"highColumn\", {\n        get: function () {\n            return this.i.series.getHighColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"lowColumn\", {\n        get: function () {\n            return this.i.series.getLowColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"closeColumn\", {\n        get: function () {\n            return this.i.series.getCloseColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"volumeColumn\", {\n        get: function () {\n            return this.i.series.getVolumeColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"indicatorColumn\", {\n        get: function () {\n            return this.i.series.indicatorColumn.asArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"typicalColumn\", {\n        /**\n     * An enumerable list of typical prices provided by the series to use\n     * in calculations.\n    */\n        get: function () {\n            if (this.i.typicalColumn == null) {\n                return null;\n            }\n            return this.i.typicalColumn.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.typicalColumn = null : this.i.typicalColumn = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueRange\", {\n        /**\n         * And enumerable list of true range values provided by the series to use\n         * in calculations.\n        */\n        get: function () {\n            if (this.i.trueRange == null) {\n                return null;\n            }\n            return this.i.trueRange.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.trueRange = null : this.i.trueRange = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueLow\", {\n        /**\n         * An enumerable list of true low values provided by the series to use\n         * in calculations.\n        */\n        get: function () {\n            if (this.i.trueLow == null) {\n                return null;\n            }\n            return this.i.trueLow.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.trueLow = null : this.i.trueLow = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"period\", {\n        /**\n         * The period to use when calculating, if applicable.\n        */\n        get: function () {\n            return this.i.period;\n        },\n        set: function (v) {\n            this.i.period = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"shortPeriod\", {\n        /**\n         * The short period to use when calculating, if applicable.\n        */\n        get: function () {\n            return this.i.shortPeriod;\n        },\n        set: function (v) {\n            this.i.shortPeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"longPeriod\", {\n        /**\n         * The long period to use when calculating, if applicable.\n        */\n        get: function () {\n            return this.i.longPeriod;\n        },\n        set: function (v) {\n            this.i.longPeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"count\", {\n        /**\n         * The count of the values in the series.\n        */\n        get: function () {\n            return this.i.count;\n        },\n        set: function (v) {\n            this.i.count = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateFrom\", {\n        /**\n         * The starting index from which to calculate\n        */\n        get: function () {\n            return this.i.calculateFrom;\n        },\n        set: function (v) {\n            this.i.calculateFrom = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateCount\", {\n        /**\n         * The number of items from the starting index from which to calculate\n        */\n        get: function () {\n            return this.i.calculateCount;\n        },\n        set: function (v) {\n            this.i.calculateCount = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"multiplier\", {\n        /**\n         * If the calculation supports some sort of scaling factor,\n         * this value will be used.\n        */\n        get: function () {\n            return this.i.multiplier;\n        },\n        set: function (v) {\n            this.i.multiplier = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"minimumValue\", {\n        /**\n         * If the calculation determines the range of indicator values,\n         * it will set the minimum and maximux properties.\n         * This will contain the previous minimum value when the indicator\n         * calculation is called again, in case this makes the update of the\n         * value speedier.\n        */\n        get: function () {\n            return this.i.minimumValue;\n        },\n        set: function (v) {\n            this.i.minimumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"maximumValue\", {\n        /**\n         * If the calculation determines the range of indicator values,\n         * it will set the minimum and maximux properties.\n         * This will contain the previous minimum value when the indicator\n         * calculation is called again, in case this makes the update of the\n         * value speedier.\n        */\n        get: function () {\n            return this.i.maximumValue;\n        },\n        set: function (v) {\n            this.i.maximumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"specifiesRange\", {\n        /**\n         * The calculation strategy should set this to true if it\n         * specifes the minimum and maximum value properties.\n        */\n        get: function () {\n            return this.i.specifiesRange;\n        },\n        set: function (v) {\n            this.i.specifiesRange = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialCalculationDataSource.prototype.findByName = function (name) {\n        if (this.typicalColumn && this.typicalColumn.name && this.typicalColumn.name == name) {\n            return this.typicalColumn;\n        }\n        if (this.trueRange && this.trueRange.name && this.trueRange.name == name) {\n            return this.trueRange;\n        }\n        if (this.trueLow && this.trueLow.name && this.trueLow.name == name) {\n            return this.trueLow;\n        }\n        return null;\n    };\n    return IgrFinancialCalculationDataSource;\n}());\nexport { IgrFinancialCalculationDataSource };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}