{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { NumericRadiusAxis } from \"./NumericRadiusAxis\";\n/**\n * Represents a IgxDataChartComponent radius axis for polar and radial series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}   >\n*\n*     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" />\n*     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n*\n* </IgrDataChart>\n* ```\n*\n* ```ts\n* this.series1.angleAxisName = \"AngleAxis\";\n* this.series1.valueAxisName = \"numericYAxis\";\n* ```\n*/\n\nvar IgrNumericRadiusAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrNumericRadiusAxis, _super);\n\n  function IgrNumericRadiusAxis(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrNumericRadiusAxis.prototype.createImplementation = function () {\n    return new NumericRadiusAxis();\n  };\n\n  Object.defineProperty(IgrNumericRadiusAxis.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrNumericRadiusAxis.prototype, \"isRadial\", {\n    /**\n     * Checks if the axis is of radial axis type\n    *\n    * ```ts\n    * let isRadial: boolean = this.series.isRadial;\n    * ```\n    */\n    get: function get() {\n      return this.i.cl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrNumericRadiusAxis.prototype, \"radiusExtentScale\", {\n    /**\n     * Defines the percentage of the maximum radius extent to use as the maximum radius. Should be\n     * a value between 0.0 and 1.0.\n    */\n    get: function get() {\n      return this.i.nw;\n    },\n    set: function set(v) {\n      this.i.nw = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrNumericRadiusAxis.prototype, \"innerRadiusExtentScale\", {\n    /**\n     * Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be\n     * a value between 0.0 and 1.0.\n    */\n    get: function get() {\n      return this.i.nv;\n    },\n    set: function set(v) {\n      this.i.nv = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Returns a world coordinates radius length (0 - 0.5) from a raw axis value.\n  \r\n  * @param unscaledValue  * The raw axis value.\n  */\n\n  IgrNumericRadiusAxis.prototype.getScaledValue = function (unscaledValue) {\n    var iv = this.i.ns(unscaledValue);\n    return iv;\n  };\n  /**\n   * Returns a raw axis value from the world coordinates radius length provided.\n  \r\n  * @param scaledValue  * The scaled world coordinates radius length.\n  *\n  * Class containing several properties which are used as parameters passed to scaling operations in a `IgrSeriesViewer`.\n  */\n\n\n  IgrNumericRadiusAxis.prototype.getUnscaledValue = function (scaledValue) {\n    var iv = this.i.nu(scaledValue);\n    return iv;\n  };\n\n  return IgrNumericRadiusAxis;\n}(IgrNumericAxisBase);\n\nexport { IgrNumericRadiusAxis };","map":{"version":3,"names":["__extends","IgrNumericAxisBase","NumericRadiusAxis","IgrNumericRadiusAxis","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","cl","nw","set","v","nv","getScaledValue","unscaledValue","iv","ns","getUnscaledValue","scaledValue","nu"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-numeric-radius-axis.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { NumericRadiusAxis } from \"./NumericRadiusAxis\";\n/**\n * Represents a IgxDataChartComponent radius axis for polar and radial series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}   >\n*\n*     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" />\n*     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n*\n* </IgrDataChart>\n* ```\n*\n* ```ts\n* this.series1.angleAxisName = \"AngleAxis\";\n* this.series1.valueAxisName = \"numericYAxis\";\n* ```\n*/\nvar IgrNumericRadiusAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrNumericRadiusAxis, _super);\n    function IgrNumericRadiusAxis(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrNumericRadiusAxis.prototype.createImplementation = function () {\n        return new NumericRadiusAxis();\n    };\n    Object.defineProperty(IgrNumericRadiusAxis.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrNumericRadiusAxis.prototype, \"isRadial\", {\n        /**\n         * Checks if the axis is of radial axis type\n        *\n        * ```ts\n        * let isRadial: boolean = this.series.isRadial;\n        * ```\n        */\n        get: function () {\n            return this.i.cl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrNumericRadiusAxis.prototype, \"radiusExtentScale\", {\n        /**\n         * Defines the percentage of the maximum radius extent to use as the maximum radius. Should be\n         * a value between 0.0 and 1.0.\n        */\n        get: function () {\n            return this.i.nw;\n        },\n        set: function (v) {\n            this.i.nw = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrNumericRadiusAxis.prototype, \"innerRadiusExtentScale\", {\n        /**\n         * Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be\n         * a value between 0.0 and 1.0.\n        */\n        get: function () {\n            return this.i.nv;\n        },\n        set: function (v) {\n            this.i.nv = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns a world coordinates radius length (0 - 0.5) from a raw axis value.\n    \r\n    * @param unscaledValue  * The raw axis value.\n    */\n    IgrNumericRadiusAxis.prototype.getScaledValue = function (unscaledValue) {\n        var iv = this.i.ns(unscaledValue);\n        return (iv);\n    };\n    /**\n     * Returns a raw axis value from the world coordinates radius length provided.\n    \r\n    * @param scaledValue  * The scaled world coordinates radius length.\n    *\n    * Class containing several properties which are used as parameters passed to scaling operations in a `IgrSeriesViewer`.\n    */\n    IgrNumericRadiusAxis.prototype.getUnscaledValue = function (scaledValue) {\n        var iv = this.i.nu(scaledValue);\n        return (iv);\n    };\n    return IgrNumericRadiusAxis;\n}(IgrNumericAxisBase));\nexport { IgrNumericRadiusAxis };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACtEJ,SAAS,CAACG,oBAAD,EAAuBC,MAAvB,CAAT;;EACA,SAASD,oBAAT,CAA8BE,KAA9B,EAAqC;IACjC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,oBAAoB,CAACI,SAArB,CAA+BC,oBAA/B,GAAsD,YAAY;IAC9D,OAAO,IAAIN,iBAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,GAAtD,EAA2D;IACvD;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANsD;IAOvDC,UAAU,EAAE,KAP2C;IAQvDC,YAAY,EAAE;EARyC,CAA3D;EAUAL,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,UAAtD,EAAkE;IAC9D;AACR;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAV6D;IAW9DH,UAAU,EAAE,KAXkD;IAY9DC,YAAY,EAAE;EAZgD,CAAlE;EAcAL,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,mBAAtD,EAA2E;IACvE;AACR;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOE,EAAd;IACH,CAPsE;IAQvEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOE,EAAP,GAAY,CAACE,CAAb;IACH,CAVsE;IAWvEN,UAAU,EAAE,KAX2D;IAYvEC,YAAY,EAAE;EAZyD,CAA3E;EAcAL,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,wBAAtD,EAAgF;IAC5E;AACR;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOK,EAAd;IACH,CAP2E;IAQ5EF,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOK,EAAP,GAAY,CAACD,CAAb;IACH,CAV2E;IAW5EN,UAAU,EAAE,KAXgE;IAY5EC,YAAY,EAAE;EAZ8D,CAAhF;EAcA;AACJ;AACA;AACA;AACA;;EACIX,oBAAoB,CAACI,SAArB,CAA+Bc,cAA/B,GAAgD,UAAUC,aAAV,EAAyB;IACrE,IAAIC,EAAE,GAAG,KAAKR,CAAL,CAAOS,EAAP,CAAUF,aAAV,CAAT;IACA,OAAQC,EAAR;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIpB,oBAAoB,CAACI,SAArB,CAA+BkB,gBAA/B,GAAkD,UAAUC,WAAV,EAAuB;IACrE,IAAIH,EAAE,GAAG,KAAKR,CAAL,CAAOY,EAAP,CAAUD,WAAV,CAAT;IACA,OAAQH,EAAR;EACH,CAHD;;EAIA,OAAOpB,oBAAP;AACH,CAjFuD,CAiFtDF,kBAjFsD,CAAxD;;AAkFA,SAASE,oBAAT"},"metadata":{},"sourceType":"module"}