{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrCategorySeries } from \"./igr-category-series\";\n/**\n * Represents the base class for all IgxDataChartComponent ranged category/value series.\n*\n* The `IgrRangeCategorySeries` represents the base class for all IgxDataChartComponent ranged category/value series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrRangeColumnSeries\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series1 = new IgrRangeColumnSeries({ name: \"series1\" });\n* series1.highMemberPath = \"High\";\n* series1.lowMemberPath  = \"Low\";\n* series1.xAxisName = \"xAxis\";\n* series1.yAxisName = \"yAxis\";\n* this.chart.series.add(series1);\n* ```\n*/\n\nvar IgrRangeCategorySeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrRangeCategorySeries, _super);\n\n  function IgrRangeCategorySeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrRangeCategorySeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRangeCategorySeries.prototype, \"lowMemberPath\", {\n    /**\n     * Gets or sets the value mapping property for the current series object.\n    *\n    * The `lowMemberPath` is used for low mapping property of the current series object.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *     <IgrRangeColumnSeries\n    *         name=\"series1\"\n    *         xAxisName=\"xAxis\"\n    *         yAxisName=\"yAxis\"\n    *         highMemberPath=\"High\"\n    *         lowMemberPath=\"Low\" />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * const series1 = new IgrRangeColumnSeries({ name: \"series1\" });\n    * series1.highMemberPath = \"High\";\n    * series1.lowMemberPath  = \"Low\";\n    * ```\n    */\n    get: function get() {\n      return this.i.to;\n    },\n    set: function set(v) {\n      this.i.to = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRangeCategorySeries.prototype, \"highMemberPath\", {\n    /**\n     * Gets or sets the value mapping property for the current series object.\n    *\n    * Use `highMemberPath` propert for high mapping of the current series object.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *     <IgrRangeColumnSeries\n    *         name=\"series1\"\n    *         xAxisName=\"xAxis\"\n    *         yAxisName=\"yAxis\"\n    *         highMemberPath=\"High\"\n    *         lowMemberPath=\"Low\" />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.highMemberPath = \"high\";\n    * ```\n    *\n    * ```ts\n    * const series1 = new IgrRangeColumnSeries({ name: \"series1\" });\n    * series1.highMemberPath = \"High\";\n    * series1.lowMemberPath  = \"Low\";\n    * ```\n    */\n    get: function get() {\n      return this.i.tl;\n    },\n    set: function set(v) {\n      this.i.tl = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrRangeCategorySeries.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.hw(item, memberPathName);\n    return iv;\n  };\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The series is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  *\n  * `scrollIntoView` method Scrolls the series to display the item for the specified data item.\n  */\n\n\n  IgrRangeCategorySeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n\n  return IgrRangeCategorySeries;\n}(IgrCategorySeries);\n\nexport { IgrRangeCategorySeries };","map":{"version":3,"names":["__extends","IgrCategorySeries","IgrRangeCategorySeries","_super","props","call","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","to","set","v","tl","getItemValue","item","memberPathName","iv","hw","scrollIntoView","en"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-range-category-series.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrCategorySeries } from \"./igr-category-series\";\n/**\n * Represents the base class for all IgxDataChartComponent ranged category/value series.\n*\n* The `IgrRangeCategorySeries` represents the base class for all IgxDataChartComponent ranged category/value series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrRangeColumnSeries\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series1 = new IgrRangeColumnSeries({ name: \"series1\" });\n* series1.highMemberPath = \"High\";\n* series1.lowMemberPath  = \"Low\";\n* series1.xAxisName = \"xAxis\";\n* series1.yAxisName = \"yAxis\";\n* this.chart.series.add(series1);\n* ```\n*/\nvar IgrRangeCategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrRangeCategorySeries, _super);\n    function IgrRangeCategorySeries(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrRangeCategorySeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRangeCategorySeries.prototype, \"lowMemberPath\", {\n        /**\n         * Gets or sets the value mapping property for the current series object.\n        *\n        * The `lowMemberPath` is used for low mapping property of the current series object.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *     <IgrRangeColumnSeries\n        *         name=\"series1\"\n        *         xAxisName=\"xAxis\"\n        *         yAxisName=\"yAxis\"\n        *         highMemberPath=\"High\"\n        *         lowMemberPath=\"Low\" />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * const series1 = new IgrRangeColumnSeries({ name: \"series1\" });\n        * series1.highMemberPath = \"High\";\n        * series1.lowMemberPath  = \"Low\";\n        * ```\n        */\n        get: function () {\n            return this.i.to;\n        },\n        set: function (v) {\n            this.i.to = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRangeCategorySeries.prototype, \"highMemberPath\", {\n        /**\n         * Gets or sets the value mapping property for the current series object.\n        *\n        * Use `highMemberPath` propert for high mapping of the current series object.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *     <IgrRangeColumnSeries\n        *         name=\"series1\"\n        *         xAxisName=\"xAxis\"\n        *         yAxisName=\"yAxis\"\n        *         highMemberPath=\"High\"\n        *         lowMemberPath=\"Low\" />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.highMemberPath = \"high\";\n        * ```\n        *\n        * ```ts\n        * const series1 = new IgrRangeColumnSeries({ name: \"series1\" });\n        * series1.highMemberPath = \"High\";\n        * series1.lowMemberPath  = \"Low\";\n        * ```\n        */\n        get: function () {\n            return this.i.tl;\n        },\n        set: function (v) {\n            this.i.tl = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrRangeCategorySeries.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.hw(item, memberPathName);\n        return (iv);\n    };\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The series is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    *\n    * `scrollIntoView` method Scrolls the series to display the item for the specified data item.\n    */\n    IgrRangeCategorySeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    return IgrRangeCategorySeries;\n}(IgrCategorySeries));\nexport { IgrRangeCategorySeries };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,sBAAsB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACxEH,SAAS,CAACE,sBAAD,EAAyBC,MAAzB,CAAT;;EACA,SAASD,sBAAT,CAAgCE,KAAhC,EAAuC;IACnC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDE,MAAM,CAACC,cAAP,CAAsBL,sBAAsB,CAACM,SAA7C,EAAwD,GAAxD,EAA6D;IACzD;AACR;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANwD;IAOzDC,UAAU,EAAE,KAP6C;IAQzDC,YAAY,EAAE;EAR2C,CAA7D;EAUAN,MAAM,CAACC,cAAP,CAAsBL,sBAAsB,CAACM,SAA7C,EAAwD,eAAxD,EAAyE;IACrE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAhCoE;IAiCrEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,EAAP,GAAYE,CAAZ;IACH,CAnCoE;IAoCrEL,UAAU,EAAE,KApCyD;IAqCrEC,YAAY,EAAE;EArCuD,CAAzE;EAuCAN,MAAM,CAACC,cAAP,CAAsBL,sBAAsB,CAACM,SAA7C,EAAwD,gBAAxD,EAA0E;IACtE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOI,EAAd;IACH,CApCqE;IAqCtEF,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOI,EAAP,GAAYD,CAAZ;IACH,CAvCqE;IAwCtEL,UAAU,EAAE,KAxC0D;IAyCtEC,YAAY,EAAE;EAzCwD,CAA1E;;EA2CAV,sBAAsB,CAACM,SAAvB,CAAiCU,YAAjC,GAAgD,UAAUC,IAAV,EAAgBC,cAAhB,EAAgC;IAC5E,IAAIC,EAAE,GAAG,KAAKR,CAAL,CAAOS,EAAP,CAAUH,IAAV,EAAgBC,cAAhB,CAAT;IACA,OAAQC,EAAR;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACInB,sBAAsB,CAACM,SAAvB,CAAiCe,cAAjC,GAAkD,UAAUJ,IAAV,EAAgB;IAC9D,IAAIE,EAAE,GAAG,KAAKR,CAAL,CAAOW,EAAP,CAAUL,IAAV,CAAT;IACA,OAAQE,EAAR;EACH,CAHD;;EAIA,OAAOnB,sBAAP;AACH,CAnHyD,CAmHxDD,iBAnHwD,CAA1D;;AAoHA,SAASC,sBAAT"},"metadata":{},"sourceType":"module"}