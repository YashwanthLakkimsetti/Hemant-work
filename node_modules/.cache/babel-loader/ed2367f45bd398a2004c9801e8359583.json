{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { GeometryData } from \"./GeometryData\";\nimport { markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\n/**\n * @hidden\n */\n\nvar LineGeometryData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(LineGeometryData, _super);\n\n  function LineGeometryData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._x1 = 0;\n    _this._y1 = 0;\n    _this._x2 = 0;\n    _this._y2 = 0;\n    return _this;\n  }\n\n  LineGeometryData.prototype.get_type = function () {\n    return \"Line\";\n  };\n\n  Object.defineProperty(LineGeometryData.prototype, \"type\", {\n    get: function get() {\n      return this.get_type();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineGeometryData.prototype, \"x1\", {\n    get: function get() {\n      return this._x1;\n    },\n    set: function set(a) {\n      this._x1 = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineGeometryData.prototype, \"y1\", {\n    get: function get() {\n      return this._y1;\n    },\n    set: function set(a) {\n      this._y1 = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineGeometryData.prototype, \"x2\", {\n    get: function get() {\n      return this._x2;\n    },\n    set: function set(a) {\n      this._x2 = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineGeometryData.prototype, \"y2\", {\n    get: function get() {\n      return this._y2;\n    },\n    set: function set(a) {\n      this._y2 = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  LineGeometryData.prototype.a = function () {\n    return \"x1: \" + this.x1 + \", y1: \" + this.y1 + \", x2: \" + this.x2 + \", y2:\" + this.y2;\n  };\n\n  LineGeometryData.prototype.scaleByViewport = function (a) {\n    this.x1 = (this.x1 - a.left) / a.width;\n    this.y1 = (this.y1 - a.top) / a.height;\n    this.x2 = (this.x2 - a.left) / a.width;\n    this.y2 = (this.y2 - a.top) / a.height;\n  };\n\n  LineGeometryData.prototype.getPointsOverride = function (a, b) {\n    var c = new List$1(PointData.$, 0);\n    a.add(c);\n    c.add(new PointData(this.x1, this.y1));\n    c.add(new PointData(this.x2, this.y2));\n  };\n\n  LineGeometryData.$t = markType(LineGeometryData, 'LineGeometryData', GeometryData.$);\n  return LineGeometryData;\n}(GeometryData);\n\nexport { LineGeometryData };","map":{"version":3,"names":["__extends","GeometryData","markType","List$1","PointData","LineGeometryData","_super","_this","apply","arguments","_x1","_y1","_x2","_y2","prototype","get_type","Object","defineProperty","get","enumerable","configurable","set","a","x1","y1","x2","y2","scaleByViewport","left","width","top","height","getPointsOverride","b","c","$","add","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/LineGeometryData.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { GeometryData } from \"./GeometryData\";\nimport { markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\n/**\n * @hidden\n */\nvar LineGeometryData = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(LineGeometryData, _super);\n    function LineGeometryData() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._x1 = 0;\n        _this._y1 = 0;\n        _this._x2 = 0;\n        _this._y2 = 0;\n        return _this;\n    }\n    LineGeometryData.prototype.get_type = function () {\n        return \"Line\";\n    };\n    Object.defineProperty(LineGeometryData.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LineGeometryData.prototype, \"x1\", {\n        get: function () {\n            return this._x1;\n        },\n        set: function (a) {\n            this._x1 = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LineGeometryData.prototype, \"y1\", {\n        get: function () {\n            return this._y1;\n        },\n        set: function (a) {\n            this._y1 = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LineGeometryData.prototype, \"x2\", {\n        get: function () {\n            return this._x2;\n        },\n        set: function (a) {\n            this._x2 = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LineGeometryData.prototype, \"y2\", {\n        get: function () {\n            return this._y2;\n        },\n        set: function (a) {\n            this._y2 = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LineGeometryData.prototype.a = function () {\n        return \"x1: \" + this.x1 + \", y1: \" + this.y1 + \", x2: \" + this.x2 + \", y2:\" + this.y2;\n    };\n    LineGeometryData.prototype.scaleByViewport = function (a) {\n        this.x1 = (this.x1 - a.left) / a.width;\n        this.y1 = (this.y1 - a.top) / a.height;\n        this.x2 = (this.x2 - a.left) / a.width;\n        this.y2 = (this.y2 - a.top) / a.height;\n    };\n    LineGeometryData.prototype.getPointsOverride = function (a, b) {\n        var c = new List$1(PointData.$, 0);\n        a.add(c);\n        c.add(new PointData(this.x1, this.y1));\n        c.add(new PointData(this.x2, this.y2));\n    };\n    LineGeometryData.$t = markType(LineGeometryData, 'LineGeometryData', GeometryData.$);\n    return LineGeometryData;\n}(GeometryData));\nexport { LineGeometryData };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}