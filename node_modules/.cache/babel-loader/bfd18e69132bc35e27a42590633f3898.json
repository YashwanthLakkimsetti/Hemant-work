{"ast":null,"code":"import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { MarkerType_$type } from \"./MarkerType\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { StackedFragmentSeries } from \"./StackedFragmentSeries\";\nimport { getModifiedProps, isValidProp, brushToString, stringToBrush, ensureBool, colorToString, stringToColor, ensureEnum, toSpinal, initializePropertiesFromCss, NamePatcher, fromPoint, toPoint, fromRect } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { SeriesOutlineMode_$type } from './SeriesOutlineMode';\nimport { LegendItemBadgeMode_$type } from \"igniteui-react-core\";\nimport { LegendItemBadgeShape_$type } from \"igniteui-react-core\";\nimport { CategoryTransitionInMode_$type } from './CategoryTransitionInMode';\nimport { TransitionInSpeedType_$type } from './TransitionInSpeedType';\n/**\n * Represents a non-visual child of StackedSeriesBase.\n*/\n\nvar IgrStackedFragmentSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStackedFragmentSeries, _super);\n\n  function IgrStackedFragmentSeries(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n    _this._propertyUpdated = null;\n    _this._propertyUpdated_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  IgrStackedFragmentSeries.prototype.createImplementation = function () {\n    return new StackedFragmentSeries();\n  };\n\n  IgrStackedFragmentSeries.prototype.onImplementationCreated = function () {};\n\n  IgrStackedFragmentSeries.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrStackedFragmentSeries.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrStackedFragmentSeries.prototype.render = function () {\n    return null;\n  };\n\n  IgrStackedFragmentSeries.prototype.provideRenderer = function (renderer) {\n    this._renderer = renderer;\n    this.i.visualSeriesLink.provideRenderer(renderer);\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._implementation;\n    }\n    /**\n                               * @hidden\n                               */\n    ,\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrStackedFragmentSeries._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"dataSource\", {\n    /**\n    * Gets or sets the ItemsSource property for the current series object. Normally you will want to provide data to the parent series instead.\n    * But if you have data as individual columns, it can be assigned here. The data must be aligned and have the same number of items for each fragment.\n    */\n    get: function get() {\n      return this.i.itemsSource;\n    },\n    set: function set(v) {\n      this.i.itemsSource = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"brush\", {\n    /**\n     * Gets or sets the brush of the stacked fragment.\n    */\n    get: function get() {\n      return brushToString(this.i.jk);\n    },\n    set: function set(v) {\n      this.i.jk = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualBrush\", {\n    /**\n     * Gets the actual brush used by the series.\n    */\n    get: function get() {\n      return brushToString(this.i.jf);\n    },\n    set: function set(v) {\n      this.i.jf = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isDropShadowEnabled\", {\n    /**\n     * Gets or sets whether drop shadow should be enabled for this series.\n    */\n    get: function get() {\n      return this.i.ap;\n    },\n    set: function set(v) {\n      this.i.ap = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsDropShadowEnabled\", {\n    /**\n     * Gets whether drop shadow is actually enabled for this series.\n    */\n    get: function get() {\n      return this.i.ai;\n    },\n    set: function set(v) {\n      this.i.ai = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowBlur\", {\n    /**\n     * Gets or sets the shadow blur.\n     * This property is ignored when\n     * StackedFragmentSeries.UseSingleShadow is set to true.\n    */\n    get: function get() {\n      return this.i.bs;\n    },\n    set: function set(v) {\n      this.i.bs = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowBlur\", {\n    /**\n     * Gets the actual shadow blur used by the series.\n    */\n    get: function get() {\n      return this.i.a9;\n    },\n    set: function set(v) {\n      this.i.a9 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowColor\", {\n    /**\n     * Gets or sets the drop shadow color.\n    */\n    get: function get() {\n      return colorToString(this.i.jr);\n    },\n    set: function set(v) {\n      this.i.jr = stringToColor(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowColor\", {\n    /**\n     * Gets actual the drop shadow color used by the series.\n    */\n    get: function get() {\n      return colorToString(this.i.jq);\n    },\n    set: function set(v) {\n      this.i.jq = stringToColor(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"useSingleShadow\", {\n    /**\n     * Gets or sets whether drop shadow is applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n     * When this property is set to true, no\n     * StackedFragmentSeries.ShadowBlur is applied.\n    */\n    get: function get() {\n      return this.i.ax;\n    },\n    set: function set(v) {\n      this.i.ax = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualUseSingleShadow\", {\n    /**\n     * Gets whether drop shadow is actually applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n    */\n    get: function get() {\n      return this.i.an;\n    },\n    set: function set(v) {\n      this.i.an = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetX\", {\n    /**\n     * Gets or sets the drop shadow x-offset.\n    */\n    get: function get() {\n      return this.i.bt;\n    },\n    set: function set(v) {\n      this.i.bt = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetX\", {\n    /**\n     * Gets the actual drop shadow x-offset applied to the series.\n    */\n    get: function get() {\n      return this.i.ba;\n    },\n    set: function set(v) {\n      this.i.ba = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetY\", {\n    /**\n     * Gets or sets the drop shadow y-offset.\n    */\n    get: function get() {\n      return this.i.bu;\n    },\n    set: function set(v) {\n      this.i.bu = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetY\", {\n    /**\n     * Gets the actual drop shadow y-offset applied to the series.\n    */\n    get: function get() {\n      return this.i.bb;\n    },\n    set: function set(v) {\n      this.i.bb = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeTemplate\", {\n    /**\n     * Gets or sets the LegendItemBadgeTemplate property.\n     * The legend item badge is created according to the LegendItemBadgeTemplate on-demand by\n     * the series object itself.\n    */\n    get: function get() {\n      return this.i.gn;\n    },\n    set: function set(v) {\n      this.i.gn = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeTemplate\", {\n    /**\n     * Gets the actual legend item badge template used by the series.\n    */\n    get: function get() {\n      return this.i.gk;\n    },\n    set: function set(v) {\n      this.i.gk = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemTemplate\", {\n    /**\n     * Gets or sets the LegendItemTemplate property.\n     * The legend item control content is created according to the LegendItemTemplate on-demand by\n     * the series object itself.\n    */\n    get: function get() {\n      return this.i.go;\n    },\n    set: function set(v) {\n      this.i.go = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemTemplate\", {\n    /**\n     * Gets the actual legend item template used by the series.\n    */\n    get: function get() {\n      return this.i.gl;\n    },\n    set: function set(v) {\n      this.i.gl = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemVisibility\", {\n    /**\n     * Gets or sets the legend item visibility for the current series object.\n    */\n    get: function get() {\n      return this.i.kh;\n    },\n    set: function set(v) {\n      this.i.kh = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemVisibility\", {\n    /**\n     * Gets the actual visibility of the legend items in the series.\n    */\n    get: function get() {\n      return this.i.kf;\n    },\n    set: function set(v) {\n      this.i.kf = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeShape\", {\n    /**\n     * Gets or sets the type of legend badge representing the current series in a legend.\n     * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n    */\n    get: function get() {\n      return this.i.r;\n    },\n    set: function set(v) {\n      this.i.r = ensureEnum(LegendItemBadgeShape_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeMode\", {\n    /**\n     * Gets or sets the mode of legend badge representing the current series in a legend.\n     * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n    */\n    get: function get() {\n      return this.i.p;\n    },\n    set: function set(v) {\n      this.i.p = ensureEnum(LegendItemBadgeMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeShape\", {\n    /**\n     * Gets the actual LegendItemBadgeShape of the series.\n    */\n    get: function get() {\n      return this.i.q;\n    },\n    set: function set(v) {\n      this.i.q = ensureEnum(LegendItemBadgeShape_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeMode\", {\n    /**\n     * Gets the actual LegendItemBadgeMode of the series.\n    */\n    get: function get() {\n      return this.i.o;\n    },\n    set: function set(v) {\n      this.i.o = ensureEnum(LegendItemBadgeMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerBrush\", {\n    /**\n     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\n    */\n    get: function get() {\n      return brushToString(this.i.jl);\n    },\n    set: function set(v) {\n      this.i.jl = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerBrush\", {\n    /**\n     * Gets the actual marker brush of the series.\n    */\n    get: function get() {\n      return brushToString(this.i.jg);\n    },\n    set: function set(v) {\n      this.i.jg = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerOutline\", {\n    /**\n     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\n    */\n    get: function get() {\n      return brushToString(this.i.jm);\n    },\n    set: function set(v) {\n      this.i.jm = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerOutline\", {\n    /**\n     * Gets the actual marker outline of the series.\n    */\n    get: function get() {\n      return brushToString(this.i.jh);\n    },\n    set: function set(v) {\n      this.i.jh = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerTemplate\", {\n    /**\n     * Gets or sets the MarkerTemplate for the current series object.\n    */\n    get: function get() {\n      return this.i.gp;\n    },\n    set: function set(v) {\n      this.i.gp = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerTemplate\", {\n    /**\n     * Gets the actual marker template used by the series.\n    */\n    get: function get() {\n      return this.i.gm;\n    },\n    set: function set(v) {\n      this.i.gm = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerType\", {\n    /**\n     * Gets or sets the marker type for the current series object.\n     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\n    */\n    get: function get() {\n      return this.i.t;\n    },\n    set: function set(v) {\n      this.i.t = ensureEnum(MarkerType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerType\", {\n    /**\n     * Gets the actual marker type set used in the series.\n    */\n    get: function get() {\n      return this.i.s;\n    },\n    set: function set(v) {\n      this.i.s = ensureEnum(MarkerType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"name\", {\n    /**\n     * Gets or sets the Name of the stacked fragment.\n    */\n    get: function get() {\n      return this.i.d8;\n    },\n    set: function set(v) {\n      this.i.d8 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"opacity\", {\n    /**\n     * Gets or sets the Opacity of the stacked fragment.\n    */\n    get: function get() {\n      return this.i.bp;\n    },\n    set: function set(v) {\n      this.i.bp = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOpacity\", {\n    /**\n     * Gets the series opacity.\n    */\n    get: function get() {\n      return this.i.a6;\n    },\n    set: function set(v) {\n      this.i.a6 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outline\", {\n    /**\n     * Gets or sets the brush to use for the outline of the series.\n     * Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.\n    */\n    get: function get() {\n      return brushToString(this.i.jo);\n    },\n    set: function set(v) {\n      this.i.jo = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutline\", {\n    /**\n     * Gets the series outline.\n    */\n    get: function get() {\n      return brushToString(this.i.jj);\n    },\n    set: function set(v) {\n      this.i.jj = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"areaFillOpacity\", {\n    /**\n     * Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series.\n    */\n    get: function get() {\n      return this.i.bd;\n    },\n    set: function set(v) {\n      this.i.bd = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualAreaFillOpacity\", {\n    /**\n     * Gets the series ActualAreaFillOpacity.  This property only applies for area-like series.\n    */\n    get: function get() {\n      return this.i.a2;\n    },\n    set: function set(v) {\n      this.i.a2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerFillOpacity\", {\n    /**\n     * Gets or sets the opacity to use for the marker fills.\n    */\n    get: function get() {\n      return this.i.bn;\n    },\n    set: function set(v) {\n      this.i.bn = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerFillOpacity\", {\n    /**\n     * Gets the actual opacity to use for hte marker fills.\n    */\n    get: function get() {\n      return this.i.a4;\n    },\n    set: function set(v) {\n      this.i.a4 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outlineMode\", {\n    /**\n     * Gets or sets the outline mode to use for the fragment.\n    */\n    get: function get() {\n      return this.i.w;\n    },\n    set: function set(v) {\n      this.i.w = ensureEnum(SeriesOutlineMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutlineMode\", {\n    /**\n     * Gets the actual outline mode to use for the fragment.\n    */\n    get: function get() {\n      return this.i.v;\n    },\n    set: function set(v) {\n      this.i.v = ensureEnum(SeriesOutlineMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"highlightingFadeOpacity\", {\n    /**\n     * Gets or sets the target opacity to fade to for fade style highlighting.\n    */\n    get: function get() {\n      return this.i.bm;\n    },\n    set: function set(v) {\n      this.i.bm = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualHighlightingFadeOpacity\", {\n    /**\n     * Gets the actual target opacity to fade to for fade style highlighting.\n    */\n    get: function get() {\n      return this.i.a3;\n    },\n    set: function set(v) {\n      this.i.a3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n    */\n    get: function get() {\n      return this.i.bq;\n    },\n    set: function set(v) {\n      this.i.bq = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusX\", {\n    /**\n     * Gets the actual corner radius of the series\n    */\n    get: function get() {\n      return this.i.a7;\n    },\n    set: function set(v) {\n      this.i.a7 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsSplineShapePartOfRange\", {\n    /**\n     * Gets whether the spline part is considered to be part of the range\n    */\n    get: function get() {\n      return this.i.ak;\n    },\n    set: function set(v) {\n      this.i.ak = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isSplineShapePartOfRange\", {\n    /**\n     * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n    */\n    get: function get() {\n      return this.i.ar;\n    },\n    set: function set(v) {\n      this.i.ar = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n    */\n    get: function get() {\n      return this.i.br;\n    },\n    set: function set(v) {\n      this.i.br = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusY\", {\n    /**\n     * Gets the actual corner radius of the series\n    */\n    get: function get() {\n      return this.i.a8;\n    },\n    set: function set(v) {\n      this.i.a8 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"thickness\", {\n    /**\n     * Gets or sets the width of the current series object's line thickness.\n    */\n    get: function get() {\n      return this.i.bv;\n    },\n    set: function set(v) {\n      this.i.bv = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualThickness\", {\n    /**\n     * Gets or sets the thickness of this stacked fragment.\n    */\n    get: function get() {\n      return this.i.bc;\n    },\n    set: function set(v) {\n      this.i.bc = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerThickness\", {\n    /**\n     * Gets or sets the width of the current series object's marker thickness.\n    */\n    get: function get() {\n      return this.i.bo;\n    },\n    set: function set(v) {\n      this.i.bo = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerThickness\", {\n    /**\n     * Gets actual marker thickness of this stacked fragment.\n    */\n    get: function get() {\n      return this.i.a5;\n    },\n    set: function set(v) {\n      this.i.a5 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"title\", {\n    /**\n     * Gets or sets the Title property.\n     * The legend item control is created according to the Title on-demand by\n     * the series object itself.\n    */\n    get: function get() {\n      return this.i.ca;\n    },\n    set: function set(v) {\n      this.i.ca = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionEasingFunction\", {\n    /**\n     * Gets or sets the EasingFunction used to morph the current series.\n    */\n    get: function get() {\n      return this.i.ad;\n    },\n    set: function set(v) {\n      this.i.ad = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionDuration\", {\n    /**\n     * Gets or sets the duration of the current series's morph.\n    */\n    get: function get() {\n      return this.i.b4;\n    },\n    set: function set(v) {\n      this.i.b4 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInDuration\", {\n    /**\n     * Gets or sets the duration of the current series's transition in morph.\n    */\n    get: function get() {\n      return this.i.b5;\n    },\n    set: function set(v) {\n      this.i.b5 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInEasingFunction\", {\n    /**\n     * Gets or sets the EasingFunction used to morph the current series during the initial transition.\n    */\n    get: function get() {\n      return this.i.ae;\n    },\n    set: function set(v) {\n      this.i.ae = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInMode\", {\n    /**\n     * Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.\n     * Note: Transitions are not currently supported for stacked series.\n    */\n    get: function get() {\n      return this.i.n;\n    },\n    set: function set(v) {\n      this.i.n = ensureEnum(CategoryTransitionInMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isTransitionInEnabled\", {\n    /**\n     * Gets or sets whether the series should transition into the plot area when a new data source is assigned.\n     * Note: Transitions are not currently supported for stacked series.\n    */\n    get: function get() {\n      return this.i.as;\n    },\n    set: function set(v) {\n      this.i.as = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInSpeedType\", {\n    /**\n     * Gets or sets the duration of the current series's transition in morph.\n    */\n    get: function get() {\n      return this.i.z;\n    },\n    set: function set(v) {\n      this.i.z = ensureEnum(TransitionInSpeedType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsTransitionInEnabled\", {\n    /**\n     * Gets the the resolved value of whether transition in is enabled.\n    */\n    get: function get() {\n      return this.i.al;\n    },\n    set: function set(v) {\n      this.i.al = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInDuration\", {\n    /**\n     * Gets the resolved transition in duration\n    */\n    get: function get() {\n      return this.i.by;\n    },\n    set: function set(v) {\n      this.i.by = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInMode\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function get() {\n      return this.i.m;\n    },\n    set: function set(v) {\n      this.i.m = ensureEnum(CategoryTransitionInMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInSpeedType\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function get() {\n      return this.i.y;\n    },\n    set: function set(v) {\n      this.i.y = ensureEnum(TransitionInSpeedType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInEasingFunction\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function get() {\n      return this.i.ac;\n    },\n    set: function set(v) {\n      this.i.ac = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionEasingFunction\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function get() {\n      return this.i.ab;\n    },\n    set: function set(v) {\n      this.i.ab = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionDuration\", {\n    /**\n     * Gets the series transition duration.\n    */\n    get: function get() {\n      return this.i.bx;\n    },\n    set: function set(v) {\n      this.i.bx = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or sets the value mapping property for the current series object.\n    */\n    get: function get() {\n      return this.i.e1;\n    },\n    set: function set(v) {\n      this.i.e1 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.ex;\n    },\n    set: function set(v) {\n      this.i.ex = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.ez;\n    },\n    set: function set(v) {\n      this.i.ez = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"visibility\", {\n    /**\n     * Gets or sets the Visibility of the stacked fragment.\n    */\n    get: function get() {\n      return this.i.ki;\n    },\n    set: function set(v) {\n      this.i.ki = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualVisibility\", {\n    /**\n     * Gets the actual visibility of the stacked fragment.\n    */\n    get: function get() {\n      return this.i.kg;\n    },\n    set: function set(v) {\n      this.i.kg = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"parentOrLocalBrush\", {\n    /**\n     * Gets the resolved brush used between the local series and the parent series.\n    */\n    get: function get() {\n      return brushToString(this.i.jp);\n    },\n    set: function set(v) {\n      this.i.jp = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrStackedFragmentSeries.prototype.findByName = function (name) {\n    return null;\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"hasUserValues\", {\n    get: function get() {\n      return this._hasUserValues;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrStackedFragmentSeries.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrStackedFragmentSeries.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"StackedFragmentSeries\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n  * Gets the item index associated with the specified world position\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getItemIndex = function (world) {\n    var iv = this.i.bz(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getItem = function (world) {\n    var iv = this.i.b8(toPoint(world));\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.b2(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.b1(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.bk(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.j5(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.j9(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinates for which to get a value marker bounding box for\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getSeriesValueMarkerBoundingBox = function (world) {\n    var iv = this.i.kb(toPoint(world));\n    return fromRect(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesHighValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.bg(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesHighValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.j1(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesLowValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.bi(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesLowValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.j3(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValuePositionFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n    var iv = this.i.j6(toPoint(mouse), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValueFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n    var iv = this.i.bl(toPoint(mouse), useInterpolation, skipUnknowns);\n    return iv;\n  };\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getItemSpan = function () {\n    var iv = this.i.bf();\n    return iv;\n  };\n  /**\n   * Converts a point from coordinates within the series plot area to a world position within axis space.\n  \r\n  * @param seriesPoint  * The pixel location within the plot area of the series.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.toWorldPosition = function (seriesPoint) {\n    var iv = this.i.j7(toPoint(seriesPoint));\n    return fromPoint(iv);\n  };\n  /**\n   * Converts a point from world coordinates to coordinates within the viewport of the series.\n  \r\n  * @param world  * The world position from which to convert.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.fromWorldPosition = function (world) {\n    var iv = this.i.j0(toPoint(world));\n    return fromPoint(iv);\n  };\n  /**\n   * Requests that the provided item should be brought into view if possible.\n  \r\n  * @param item  * The item to attempt to bring into view.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.au(item);\n    return iv;\n  };\n  /**\n   * Gets the effective viewport, adjusted to account for margins and other factors.\n  \r\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getEffectiveViewport = function () {\n    var iv = this.i.j8();\n    return fromRect(iv);\n  };\n  /**\n   * Notifies the series that a visual property has changed, requiring a visual update.\n  \r\n  */\n\n\n  IgrStackedFragmentSeries.prototype.notifyVisualPropertiesChanged = function () {\n    this.i.e5();\n  };\n  /**\n   * Simulates a pointer hover over the series surface.\n  \r\n  * @param point  * The pointer position relative to the series viewport over which to hover.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.simulateHover = function (point) {\n    this.i.fa(toPoint(point));\n  };\n  /**\n   * Moves the cursor point to the provided world position. Some series may react to the current cursor position.\n  \r\n  * @param point  * The cursor point, in world coordinates.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.moveCursorPoint = function (point) {\n    this.i.e4(toPoint(point));\n  };\n\n  IgrStackedFragmentSeries.prototype.replayTransitionIn = function () {\n    this.i.e9();\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"propertyUpdated\", {\n    /**\n     * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n    */\n    get: function get() {\n      return this._propertyUpdated;\n    },\n    set: function set(ev) {\n      var _this = this;\n\n      if (this._propertyUpdated_wrapped !== null) {\n        this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n        this._propertyUpdated_wrapped = null;\n        this._propertyUpdated = null;\n      }\n\n      this._propertyUpdated = ev;\n\n      this._propertyUpdated_wrapped = function (o, e) {\n        var outerArgs = new IgrPropertyUpdatedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforePropertyUpdated) {\n          _this.beforePropertyUpdated(_this, outerArgs);\n        }\n\n        if (_this._propertyUpdated) {\n          _this._propertyUpdated(_this, outerArgs);\n        }\n      };\n\n      this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStackedFragmentSeries;\n}(React.Component);\n\nexport { IgrStackedFragmentSeries };","map":{"version":3,"names":["__extends","__values","React","delegateCombine","delegateRemove","Visibility_$type","MarkerType_$type","IgrPropertyUpdatedEventArgs","StackedFragmentSeries","getModifiedProps","isValidProp","brushToString","stringToBrush","ensureBool","colorToString","stringToColor","ensureEnum","toSpinal","initializePropertiesFromCss","NamePatcher","fromPoint","toPoint","fromRect","TypeRegistrar","SeriesOutlineMode_$type","LegendItemBadgeMode_$type","LegendItemBadgeShape_$type","CategoryTransitionInMode_$type","TransitionInSpeedType_$type","IgrStackedFragmentSeries","_super","props","_this","call","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_propertyUpdated","_propertyUpdated_wrapped","_styling","ensureStylablePatched","Object","getPrototypeOf","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","componentDidMount","e_1","_a","_b","keys","_c","next","done","p","value","e_1_1","error","return","shouldComponentUpdate","nextProps","nextState","e_2","mod","e_2_1","render","provideRenderer","renderer","_renderer","i","visualSeriesLink","defineProperty","get","enumerable","configurable","_createFromInternal","internal","$type","name","externalName","isRegistered","create","itemsSource","set","v","jk","jf","ap","ai","bs","a9","jr","jq","ax","an","bt","ba","bu","bb","gn","gk","go","gl","kh","kf","r","q","o","jl","jg","jm","jh","gp","gm","t","s","d8","bp","a6","jo","jj","bd","a2","bn","a4","w","bm","a3","bq","a7","ak","ar","br","a8","bv","bc","bo","a5","ca","ad","b4","b5","ae","n","as","z","al","by","m","y","ac","ab","bx","e1","ex","ez","ki","kg","jp","findByName","__m","propertyName","add","container","component","parent","genericPrefix","typeName","indexOf","substring","additionalPrefixes","prefix","push","b","baseType","Name","basePrefix","parentTypeName","parentPrefix","hasUserValues","_otherStyling","getItemIndex","world","iv","bz","getItem","b8","getPreviousOrExactIndex","skipUnknowns","b2","getNextOrExactIndex","b1","getSeriesValue","useInterpolation","bk","getSeriesValuePosition","j5","getSeriesValueBoundingBox","j9","getSeriesValueMarkerBoundingBox","kb","getSeriesHighValue","bg","getSeriesHighValuePosition","j1","getSeriesLowValue","bi","getSeriesLowValuePosition","j3","getSeriesValuePositionFromSeriesPixel","mouse","j6","getSeriesValueFromSeriesPixel","bl","getItemSpan","bf","toWorldPosition","seriesPoint","j7","fromWorldPosition","j0","scrollIntoView","item","au","getEffectiveViewport","j8","notifyVisualPropertiesChanged","e5","simulateHover","point","fa","moveCursorPoint","e4","replayTransitionIn","e9","ev","propertyUpdated","e","outerArgs","_provideImplementation","beforePropertyUpdated","Component"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-stacked-fragment-series.js"],"sourcesContent":["import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { MarkerType_$type } from \"./MarkerType\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { StackedFragmentSeries } from \"./StackedFragmentSeries\";\nimport { getModifiedProps, isValidProp, brushToString, stringToBrush, ensureBool, colorToString, stringToColor, ensureEnum, toSpinal, initializePropertiesFromCss, NamePatcher, fromPoint, toPoint, fromRect } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { SeriesOutlineMode_$type } from './SeriesOutlineMode';\nimport { LegendItemBadgeMode_$type } from \"igniteui-react-core\";\nimport { LegendItemBadgeShape_$type } from \"igniteui-react-core\";\nimport { CategoryTransitionInMode_$type } from './CategoryTransitionInMode';\nimport { TransitionInSpeedType_$type } from './TransitionInSpeedType';\n/**\n * Represents a non-visual child of StackedSeriesBase.\n*/\nvar IgrStackedFragmentSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStackedFragmentSeries, _super);\n    function IgrStackedFragmentSeries(props) {\n        var _this = _super.call(this, props) || this;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        _this._propertyUpdated = null;\n        _this._propertyUpdated_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        return _this;\n    }\n    IgrStackedFragmentSeries.prototype.createImplementation = function () {\n        return new StackedFragmentSeries();\n    };\n    IgrStackedFragmentSeries.prototype.onImplementationCreated = function () {\n    };\n    IgrStackedFragmentSeries.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrStackedFragmentSeries.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrStackedFragmentSeries.prototype.render = function () {\n        return null;\n    };\n    IgrStackedFragmentSeries.prototype.provideRenderer = function (renderer) {\n        this._renderer = renderer;\n        this.i.visualSeriesLink.provideRenderer(renderer);\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        } /**\n                                     * @hidden\n                                     */,\n        enumerable: false,\n        configurable: true\n    });\n    IgrStackedFragmentSeries._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"dataSource\", {\n        /**\n     * Gets or sets the ItemsSource property for the current series object. Normally you will want to provide data to the parent series instead.\n     * But if you have data as individual columns, it can be assigned here. The data must be aligned and have the same number of items for each fragment.\n    */\n        get: function () {\n            return this.i.itemsSource;\n        },\n        set: function (v) {\n            this.i.itemsSource = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"brush\", {\n        /**\n         * Gets or sets the brush of the stacked fragment.\n        */\n        get: function () {\n            return brushToString(this.i.jk);\n        },\n        set: function (v) {\n            this.i.jk = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualBrush\", {\n        /**\n         * Gets the actual brush used by the series.\n        */\n        get: function () {\n            return brushToString(this.i.jf);\n        },\n        set: function (v) {\n            this.i.jf = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isDropShadowEnabled\", {\n        /**\n         * Gets or sets whether drop shadow should be enabled for this series.\n        */\n        get: function () {\n            return this.i.ap;\n        },\n        set: function (v) {\n            this.i.ap = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsDropShadowEnabled\", {\n        /**\n         * Gets whether drop shadow is actually enabled for this series.\n        */\n        get: function () {\n            return this.i.ai;\n        },\n        set: function (v) {\n            this.i.ai = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowBlur\", {\n        /**\n         * Gets or sets the shadow blur.\n         * This property is ignored when\n         * StackedFragmentSeries.UseSingleShadow is set to true.\n        */\n        get: function () {\n            return this.i.bs;\n        },\n        set: function (v) {\n            this.i.bs = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowBlur\", {\n        /**\n         * Gets the actual shadow blur used by the series.\n        */\n        get: function () {\n            return this.i.a9;\n        },\n        set: function (v) {\n            this.i.a9 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowColor\", {\n        /**\n         * Gets or sets the drop shadow color.\n        */\n        get: function () {\n            return colorToString(this.i.jr);\n        },\n        set: function (v) {\n            this.i.jr = stringToColor(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowColor\", {\n        /**\n         * Gets actual the drop shadow color used by the series.\n        */\n        get: function () {\n            return colorToString(this.i.jq);\n        },\n        set: function (v) {\n            this.i.jq = stringToColor(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"useSingleShadow\", {\n        /**\n         * Gets or sets whether drop shadow is applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n         * When this property is set to true, no\n         * StackedFragmentSeries.ShadowBlur is applied.\n        */\n        get: function () {\n            return this.i.ax;\n        },\n        set: function (v) {\n            this.i.ax = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualUseSingleShadow\", {\n        /**\n         * Gets whether drop shadow is actually applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n        */\n        get: function () {\n            return this.i.an;\n        },\n        set: function (v) {\n            this.i.an = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetX\", {\n        /**\n         * Gets or sets the drop shadow x-offset.\n        */\n        get: function () {\n            return this.i.bt;\n        },\n        set: function (v) {\n            this.i.bt = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetX\", {\n        /**\n         * Gets the actual drop shadow x-offset applied to the series.\n        */\n        get: function () {\n            return this.i.ba;\n        },\n        set: function (v) {\n            this.i.ba = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetY\", {\n        /**\n         * Gets or sets the drop shadow y-offset.\n        */\n        get: function () {\n            return this.i.bu;\n        },\n        set: function (v) {\n            this.i.bu = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetY\", {\n        /**\n         * Gets the actual drop shadow y-offset applied to the series.\n        */\n        get: function () {\n            return this.i.bb;\n        },\n        set: function (v) {\n            this.i.bb = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeTemplate\", {\n        /**\n         * Gets or sets the LegendItemBadgeTemplate property.\n         * The legend item badge is created according to the LegendItemBadgeTemplate on-demand by\n         * the series object itself.\n        */\n        get: function () {\n            return this.i.gn;\n        },\n        set: function (v) {\n            this.i.gn = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeTemplate\", {\n        /**\n         * Gets the actual legend item badge template used by the series.\n        */\n        get: function () {\n            return this.i.gk;\n        },\n        set: function (v) {\n            this.i.gk = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemTemplate\", {\n        /**\n         * Gets or sets the LegendItemTemplate property.\n         * The legend item control content is created according to the LegendItemTemplate on-demand by\n         * the series object itself.\n        */\n        get: function () {\n            return this.i.go;\n        },\n        set: function (v) {\n            this.i.go = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemTemplate\", {\n        /**\n         * Gets the actual legend item template used by the series.\n        */\n        get: function () {\n            return this.i.gl;\n        },\n        set: function (v) {\n            this.i.gl = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemVisibility\", {\n        /**\n         * Gets or sets the legend item visibility for the current series object.\n        */\n        get: function () {\n            return this.i.kh;\n        },\n        set: function (v) {\n            this.i.kh = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemVisibility\", {\n        /**\n         * Gets the actual visibility of the legend items in the series.\n        */\n        get: function () {\n            return this.i.kf;\n        },\n        set: function (v) {\n            this.i.kf = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeShape\", {\n        /**\n         * Gets or sets the type of legend badge representing the current series in a legend.\n         * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n        */\n        get: function () {\n            return this.i.r;\n        },\n        set: function (v) {\n            this.i.r = ensureEnum(LegendItemBadgeShape_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeMode\", {\n        /**\n         * Gets or sets the mode of legend badge representing the current series in a legend.\n         * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n        */\n        get: function () {\n            return this.i.p;\n        },\n        set: function (v) {\n            this.i.p = ensureEnum(LegendItemBadgeMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeShape\", {\n        /**\n         * Gets the actual LegendItemBadgeShape of the series.\n        */\n        get: function () {\n            return this.i.q;\n        },\n        set: function (v) {\n            this.i.q = ensureEnum(LegendItemBadgeShape_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeMode\", {\n        /**\n         * Gets the actual LegendItemBadgeMode of the series.\n        */\n        get: function () {\n            return this.i.o;\n        },\n        set: function (v) {\n            this.i.o = ensureEnum(LegendItemBadgeMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerBrush\", {\n        /**\n         * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\n        */\n        get: function () {\n            return brushToString(this.i.jl);\n        },\n        set: function (v) {\n            this.i.jl = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerBrush\", {\n        /**\n         * Gets the actual marker brush of the series.\n        */\n        get: function () {\n            return brushToString(this.i.jg);\n        },\n        set: function (v) {\n            this.i.jg = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerOutline\", {\n        /**\n         * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\n        */\n        get: function () {\n            return brushToString(this.i.jm);\n        },\n        set: function (v) {\n            this.i.jm = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerOutline\", {\n        /**\n         * Gets the actual marker outline of the series.\n        */\n        get: function () {\n            return brushToString(this.i.jh);\n        },\n        set: function (v) {\n            this.i.jh = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerTemplate\", {\n        /**\n         * Gets or sets the MarkerTemplate for the current series object.\n        */\n        get: function () {\n            return this.i.gp;\n        },\n        set: function (v) {\n            this.i.gp = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerTemplate\", {\n        /**\n         * Gets the actual marker template used by the series.\n        */\n        get: function () {\n            return this.i.gm;\n        },\n        set: function (v) {\n            this.i.gm = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerType\", {\n        /**\n         * Gets or sets the marker type for the current series object.\n         * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\n        */\n        get: function () {\n            return this.i.t;\n        },\n        set: function (v) {\n            this.i.t = ensureEnum(MarkerType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerType\", {\n        /**\n         * Gets the actual marker type set used in the series.\n        */\n        get: function () {\n            return this.i.s;\n        },\n        set: function (v) {\n            this.i.s = ensureEnum(MarkerType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"name\", {\n        /**\n         * Gets or sets the Name of the stacked fragment.\n        */\n        get: function () {\n            return this.i.d8;\n        },\n        set: function (v) {\n            this.i.d8 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"opacity\", {\n        /**\n         * Gets or sets the Opacity of the stacked fragment.\n        */\n        get: function () {\n            return this.i.bp;\n        },\n        set: function (v) {\n            this.i.bp = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOpacity\", {\n        /**\n         * Gets the series opacity.\n        */\n        get: function () {\n            return this.i.a6;\n        },\n        set: function (v) {\n            this.i.a6 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outline\", {\n        /**\n         * Gets or sets the brush to use for the outline of the series.\n         * Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.\n        */\n        get: function () {\n            return brushToString(this.i.jo);\n        },\n        set: function (v) {\n            this.i.jo = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutline\", {\n        /**\n         * Gets the series outline.\n        */\n        get: function () {\n            return brushToString(this.i.jj);\n        },\n        set: function (v) {\n            this.i.jj = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"areaFillOpacity\", {\n        /**\n         * Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series.\n        */\n        get: function () {\n            return this.i.bd;\n        },\n        set: function (v) {\n            this.i.bd = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualAreaFillOpacity\", {\n        /**\n         * Gets the series ActualAreaFillOpacity.  This property only applies for area-like series.\n        */\n        get: function () {\n            return this.i.a2;\n        },\n        set: function (v) {\n            this.i.a2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerFillOpacity\", {\n        /**\n         * Gets or sets the opacity to use for the marker fills.\n        */\n        get: function () {\n            return this.i.bn;\n        },\n        set: function (v) {\n            this.i.bn = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerFillOpacity\", {\n        /**\n         * Gets the actual opacity to use for hte marker fills.\n        */\n        get: function () {\n            return this.i.a4;\n        },\n        set: function (v) {\n            this.i.a4 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outlineMode\", {\n        /**\n         * Gets or sets the outline mode to use for the fragment.\n        */\n        get: function () {\n            return this.i.w;\n        },\n        set: function (v) {\n            this.i.w = ensureEnum(SeriesOutlineMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutlineMode\", {\n        /**\n         * Gets the actual outline mode to use for the fragment.\n        */\n        get: function () {\n            return this.i.v;\n        },\n        set: function (v) {\n            this.i.v = ensureEnum(SeriesOutlineMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"highlightingFadeOpacity\", {\n        /**\n         * Gets or sets the target opacity to fade to for fade style highlighting.\n        */\n        get: function () {\n            return this.i.bm;\n        },\n        set: function (v) {\n            this.i.bm = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualHighlightingFadeOpacity\", {\n        /**\n         * Gets the actual target opacity to fade to for fade style highlighting.\n        */\n        get: function () {\n            return this.i.a3;\n        },\n        set: function (v) {\n            this.i.a3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n        */\n        get: function () {\n            return this.i.bq;\n        },\n        set: function (v) {\n            this.i.bq = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusX\", {\n        /**\n         * Gets the actual corner radius of the series\n        */\n        get: function () {\n            return this.i.a7;\n        },\n        set: function (v) {\n            this.i.a7 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsSplineShapePartOfRange\", {\n        /**\n         * Gets whether the spline part is considered to be part of the range\n        */\n        get: function () {\n            return this.i.ak;\n        },\n        set: function (v) {\n            this.i.ak = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isSplineShapePartOfRange\", {\n        /**\n         * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n        */\n        get: function () {\n            return this.i.ar;\n        },\n        set: function (v) {\n            this.i.ar = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n        */\n        get: function () {\n            return this.i.br;\n        },\n        set: function (v) {\n            this.i.br = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusY\", {\n        /**\n         * Gets the actual corner radius of the series\n        */\n        get: function () {\n            return this.i.a8;\n        },\n        set: function (v) {\n            this.i.a8 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"thickness\", {\n        /**\n         * Gets or sets the width of the current series object's line thickness.\n        */\n        get: function () {\n            return this.i.bv;\n        },\n        set: function (v) {\n            this.i.bv = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualThickness\", {\n        /**\n         * Gets or sets the thickness of this stacked fragment.\n        */\n        get: function () {\n            return this.i.bc;\n        },\n        set: function (v) {\n            this.i.bc = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerThickness\", {\n        /**\n         * Gets or sets the width of the current series object's marker thickness.\n        */\n        get: function () {\n            return this.i.bo;\n        },\n        set: function (v) {\n            this.i.bo = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerThickness\", {\n        /**\n         * Gets actual marker thickness of this stacked fragment.\n        */\n        get: function () {\n            return this.i.a5;\n        },\n        set: function (v) {\n            this.i.a5 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"title\", {\n        /**\n         * Gets or sets the Title property.\n         * The legend item control is created according to the Title on-demand by\n         * the series object itself.\n        */\n        get: function () {\n            return this.i.ca;\n        },\n        set: function (v) {\n            this.i.ca = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionEasingFunction\", {\n        /**\n         * Gets or sets the EasingFunction used to morph the current series.\n        */\n        get: function () {\n            return this.i.ad;\n        },\n        set: function (v) {\n            this.i.ad = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionDuration\", {\n        /**\n         * Gets or sets the duration of the current series's morph.\n        */\n        get: function () {\n            return this.i.b4;\n        },\n        set: function (v) {\n            this.i.b4 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInDuration\", {\n        /**\n         * Gets or sets the duration of the current series's transition in morph.\n        */\n        get: function () {\n            return this.i.b5;\n        },\n        set: function (v) {\n            this.i.b5 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInEasingFunction\", {\n        /**\n         * Gets or sets the EasingFunction used to morph the current series during the initial transition.\n        */\n        get: function () {\n            return this.i.ae;\n        },\n        set: function (v) {\n            this.i.ae = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInMode\", {\n        /**\n         * Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.\n         * Note: Transitions are not currently supported for stacked series.\n        */\n        get: function () {\n            return this.i.n;\n        },\n        set: function (v) {\n            this.i.n = ensureEnum(CategoryTransitionInMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isTransitionInEnabled\", {\n        /**\n         * Gets or sets whether the series should transition into the plot area when a new data source is assigned.\n         * Note: Transitions are not currently supported for stacked series.\n        */\n        get: function () {\n            return this.i.as;\n        },\n        set: function (v) {\n            this.i.as = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInSpeedType\", {\n        /**\n         * Gets or sets the duration of the current series's transition in morph.\n        */\n        get: function () {\n            return this.i.z;\n        },\n        set: function (v) {\n            this.i.z = ensureEnum(TransitionInSpeedType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsTransitionInEnabled\", {\n        /**\n         * Gets the the resolved value of whether transition in is enabled.\n        */\n        get: function () {\n            return this.i.al;\n        },\n        set: function (v) {\n            this.i.al = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInDuration\", {\n        /**\n         * Gets the resolved transition in duration\n        */\n        get: function () {\n            return this.i.by;\n        },\n        set: function (v) {\n            this.i.by = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInMode\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.m;\n        },\n        set: function (v) {\n            this.i.m = ensureEnum(CategoryTransitionInMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInSpeedType\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.y;\n        },\n        set: function (v) {\n            this.i.y = ensureEnum(TransitionInSpeedType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInEasingFunction\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.ac;\n        },\n        set: function (v) {\n            this.i.ac = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionEasingFunction\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.ab;\n        },\n        set: function (v) {\n            this.i.ab = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionDuration\", {\n        /**\n         * Gets the series transition duration.\n        */\n        get: function () {\n            return this.i.bx;\n        },\n        set: function (v) {\n            this.i.bx = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or sets the value mapping property for the current series object.\n        */\n        get: function () {\n            return this.i.e1;\n        },\n        set: function (v) {\n            this.i.e1 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series value in the Data Legend.\n        */\n        get: function () {\n            return this.i.ex;\n        },\n        set: function (v) {\n            this.i.ex = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series value in the Data Legend.\n        */\n        get: function () {\n            return this.i.ez;\n        },\n        set: function (v) {\n            this.i.ez = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"visibility\", {\n        /**\n         * Gets or sets the Visibility of the stacked fragment.\n        */\n        get: function () {\n            return this.i.ki;\n        },\n        set: function (v) {\n            this.i.ki = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualVisibility\", {\n        /**\n         * Gets the actual visibility of the stacked fragment.\n        */\n        get: function () {\n            return this.i.kg;\n        },\n        set: function (v) {\n            this.i.kg = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"parentOrLocalBrush\", {\n        /**\n         * Gets the resolved brush used between the local series and the parent series.\n        */\n        get: function () {\n            return brushToString(this.i.jp);\n        },\n        set: function (v) {\n            this.i.jp = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrStackedFragmentSeries.prototype.findByName = function (name) {\n        return null;\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrStackedFragmentSeries.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrStackedFragmentSeries.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"StackedFragmentSeries\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n * Gets the item index associated with the specified world position\n\r\n*/\n    IgrStackedFragmentSeries.prototype.getItemIndex = function (world) {\n        var iv = this.i.bz(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrStackedFragmentSeries.prototype.getItem = function (world) {\n        var iv = this.i.b8(toPoint(world));\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.b2(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.b1(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.bk(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.j5(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    */\n    IgrStackedFragmentSeries.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.j9(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinates for which to get a value marker bounding box for\n    */\n    IgrStackedFragmentSeries.prototype.getSeriesValueMarkerBoundingBox = function (world) {\n        var iv = this.i.kb(toPoint(world));\n        return fromRect(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesHighValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.bg(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesHighValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.j1(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesLowValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.bi(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesLowValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.j3(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValuePositionFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n        var iv = this.i.j6(toPoint(mouse), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValueFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n        var iv = this.i.bl(toPoint(mouse), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    */\n    IgrStackedFragmentSeries.prototype.getItemSpan = function () {\n        var iv = this.i.bf();\n        return (iv);\n    };\n    /**\n     * Converts a point from coordinates within the series plot area to a world position within axis space.\n    \r\n    * @param seriesPoint  * The pixel location within the plot area of the series.\n    */\n    IgrStackedFragmentSeries.prototype.toWorldPosition = function (seriesPoint) {\n        var iv = this.i.j7(toPoint(seriesPoint));\n        return fromPoint(iv);\n    };\n    /**\n     * Converts a point from world coordinates to coordinates within the viewport of the series.\n    \r\n    * @param world  * The world position from which to convert.\n    */\n    IgrStackedFragmentSeries.prototype.fromWorldPosition = function (world) {\n        var iv = this.i.j0(toPoint(world));\n        return fromPoint(iv);\n    };\n    /**\n     * Requests that the provided item should be brought into view if possible.\n    \r\n    * @param item  * The item to attempt to bring into view.\n    */\n    IgrStackedFragmentSeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.au(item);\n        return (iv);\n    };\n    /**\n     * Gets the effective viewport, adjusted to account for margins and other factors.\n    \r\n    */\n    IgrStackedFragmentSeries.prototype.getEffectiveViewport = function () {\n        var iv = this.i.j8();\n        return fromRect(iv);\n    };\n    /**\n     * Notifies the series that a visual property has changed, requiring a visual update.\n    \r\n    */\n    IgrStackedFragmentSeries.prototype.notifyVisualPropertiesChanged = function () {\n        this.i.e5();\n    };\n    /**\n     * Simulates a pointer hover over the series surface.\n    \r\n    * @param point  * The pointer position relative to the series viewport over which to hover.\n    */\n    IgrStackedFragmentSeries.prototype.simulateHover = function (point) {\n        this.i.fa(toPoint(point));\n    };\n    /**\n     * Moves the cursor point to the provided world position. Some series may react to the current cursor position.\n    \r\n    * @param point  * The cursor point, in world coordinates.\n    */\n    IgrStackedFragmentSeries.prototype.moveCursorPoint = function (point) {\n        this.i.e4(toPoint(point));\n    };\n    IgrStackedFragmentSeries.prototype.replayTransitionIn = function () {\n        this.i.e9();\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"propertyUpdated\", {\n        /**\n         * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n        */\n        get: function () {\n            return this._propertyUpdated;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._propertyUpdated_wrapped !== null) {\n                this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n                this._propertyUpdated_wrapped = null;\n                this._propertyUpdated = null;\n            }\n            this._propertyUpdated = ev;\n            this._propertyUpdated_wrapped = function (o, e) {\n                var outerArgs = new IgrPropertyUpdatedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforePropertyUpdated) {\n                    _this.beforePropertyUpdated(_this, outerArgs);\n                }\n                if (_this._propertyUpdated) {\n                    _this._propertyUpdated(_this, outerArgs);\n                }\n            };\n            this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStackedFragmentSeries;\n}(React.Component));\nexport { IgrStackedFragmentSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}