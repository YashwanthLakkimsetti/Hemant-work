{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { UnknownValuePlotting_$type } from \"igniteui-react-core\";\nimport { IgrPolarLineSeriesBase } from \"./igr-polar-line-series-base\";\nimport { PolarLineSeries } from \"./PolarLineSeries\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent polar line series.\n*/\n\nvar IgrPolarLineSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrPolarLineSeries, _super);\n\n  function IgrPolarLineSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrPolarLineSeries.prototype.createImplementation = function () {\n    return new PolarLineSeries();\n  };\n\n  Object.defineProperty(IgrPolarLineSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarLineSeries.prototype, \"isLineOnly\", {\n    /**\n     * Gets whether the current series shows only line shapes.\n    */\n    get: function get() {\n      return this.i.d1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPolarLineSeries.prototype, \"unknownValuePlotting\", {\n    /**\n     * Determines how unknown values will be plotted on the chart.\n     * Null and Double.NaN are two examples of unknown values.\n    */\n    get: function get() {\n      return this.i.vg;\n    },\n    set: function set(v) {\n      this.i.vg = ensureEnum(UnknownValuePlotting_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrPolarLineSeries;\n}(IgrPolarLineSeriesBase);\n\nexport { IgrPolarLineSeries };","map":{"version":3,"names":["__extends","UnknownValuePlotting_$type","IgrPolarLineSeriesBase","PolarLineSeries","ensureEnum","IgrPolarLineSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","d1","vg","set","v"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-polar-line-series.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { UnknownValuePlotting_$type } from \"igniteui-react-core\";\nimport { IgrPolarLineSeriesBase } from \"./igr-polar-line-series-base\";\nimport { PolarLineSeries } from \"./PolarLineSeries\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent polar line series.\n*/\nvar IgrPolarLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrPolarLineSeries, _super);\n    function IgrPolarLineSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrPolarLineSeries.prototype.createImplementation = function () {\n        return new PolarLineSeries();\n    };\n    Object.defineProperty(IgrPolarLineSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarLineSeries.prototype, \"isLineOnly\", {\n        /**\n         * Gets whether the current series shows only line shapes.\n        */\n        get: function () {\n            return this.i.d1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPolarLineSeries.prototype, \"unknownValuePlotting\", {\n        /**\n         * Determines how unknown values will be plotted on the chart.\n         * Null and Double.NaN are two examples of unknown values.\n        */\n        get: function () {\n            return this.i.vg;\n        },\n        set: function (v) {\n            this.i.vg = ensureEnum(UnknownValuePlotting_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrPolarLineSeries;\n}(IgrPolarLineSeriesBase));\nexport { IgrPolarLineSeries };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACpEN,SAAS,CAACK,kBAAD,EAAqBC,MAArB,CAAT;;EACA,SAASD,kBAAT,CAA4BE,KAA5B,EAAmC;IAC/B,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,kBAAkB,CAACI,SAAnB,CAA6BC,oBAA7B,GAAoD,YAAY;IAC5D,OAAO,IAAIP,eAAJ,EAAP;EACH,CAFD;;EAGAQ,MAAM,CAACC,cAAP,CAAsBP,kBAAkB,CAACI,SAAzC,EAAoD,GAApD,EAAyD;IACrD;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANoD;IAOrDC,UAAU,EAAE,KAPyC;IAQrDC,YAAY,EAAE;EARuC,CAAzD;EAUAL,MAAM,CAACC,cAAP,CAAsBP,kBAAkB,CAACI,SAAzC,EAAoD,YAApD,EAAkE;IAC9D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAN6D;IAO9DH,UAAU,EAAE,KAPkD;IAQ9DC,YAAY,EAAE;EARgD,CAAlE;EAUAL,MAAM,CAACC,cAAP,CAAsBP,kBAAkB,CAACI,SAAzC,EAAoD,sBAApD,EAA4E;IACxE;AACR;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOE,EAAd;IACH,CAPuE;IAQxEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOE,EAAP,GAAYf,UAAU,CAACH,0BAAD,EAA6BoB,CAA7B,CAAtB;IACH,CAVuE;IAWxEN,UAAU,EAAE,KAX4D;IAYxEC,YAAY,EAAE;EAZ0D,CAA5E;EAcA,OAAOX,kBAAP;AACH,CA3CqD,CA2CpDH,sBA3CoD,CAAtD;;AA4CA,SAASG,kBAAT"},"metadata":{},"sourceType":"module"}