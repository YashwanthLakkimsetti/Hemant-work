{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ShapeDataSourceDescriptionMetadata } from \"./ShapeDataSourceDescriptionMetadata\";\nimport { AssigningShapeStyleEventArgsDescriptionMetadata } from \"./AssigningShapeStyleEventArgsDescriptionMetadata\";\nimport { AssigningShapeMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningShapeMarkerStyleEventArgsDescriptionMetadata\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar GeographicShapeSeriesBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(GeographicShapeSeriesBaseDescriptionMetadata, _super);\n\n  function GeographicShapeSeriesBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicShapeSeriesBaseDescriptionMetadata.b = function (a) {\n    if (GeographicShapeSeriesBaseDescriptionMetadata.a == null) {\n      GeographicShapeSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicShapeSeriesBaseDescriptionMetadata.c(GeographicShapeSeriesBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(GeographicShapeSeriesBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(GeographicShapeSeriesBaseDescriptionMetadata.a);\n    ShapeDataSourceDescriptionMetadata.d(a);\n    AssigningShapeStyleEventArgsDescriptionMetadata.d(a);\n    AssigningShapeMarkerStyleEventArgsDescriptionMetadata.d(a);\n  };\n\n  GeographicShapeSeriesBaseDescriptionMetadata.c = function (a) {\n    GeographicMapSeriesHostDescriptionMetadata.c(a);\n    a.item(\"ShapeMemberPath\", \"String\");\n    a.item(\"IsCustomShapeStyleAllowed\", \"Boolean\");\n    a.item(\"IsCustomShapeMarkerStyleAllowed\", \"Boolean\");\n    a.item(\"ItemSearchMode\", \"ExportedType:string:ShapeItemSearchMode\");\n    a.item(\"ItemSearchMode@names\", \"Auto;ClosestBoundingBox;ClosestShape;ClosestPointOnClosestShape;None\");\n    a.item(\"ItemSearchThreshold\", \"Number:int\");\n    a.item(\"ItemSearchPointsThreshold\", \"Number:int\");\n    a.item(\"ShapefileDataSource\", \"ExportedType:ShapefileConverter\");\n    a.item(\"ShapeFilterResolution\", \"Number:double\");\n    a.item(\"AssigningShapeStyleRef\", \"EventRef::assigningShapeStyle\");\n    a.item(\"AssigningShapeMarkerStyleRef\", \"EventRef::assigningShapeMarkerStyle\");\n  };\n\n  GeographicShapeSeriesBaseDescriptionMetadata.d = function (a) {\n    GeographicShapeSeriesBaseDescriptionMetadata.b(a);\n    a.t(\"GeographicShapeSeriesBase\", GeographicShapeSeriesBaseDescriptionMetadata.a);\n  };\n\n  GeographicShapeSeriesBaseDescriptionMetadata.$t = markType(GeographicShapeSeriesBaseDescriptionMetadata, 'GeographicShapeSeriesBaseDescriptionMetadata');\n  GeographicShapeSeriesBaseDescriptionMetadata.a = null;\n  return GeographicShapeSeriesBaseDescriptionMetadata;\n}(Base);\n\nexport { GeographicShapeSeriesBaseDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","ShapeDataSourceDescriptionMetadata","AssigningShapeStyleEventArgsDescriptionMetadata","AssigningShapeMarkerStyleEventArgsDescriptionMetadata","GeographicMapSeriesHostDescriptionMetadata","GeographicShapeSeriesBaseDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/GeographicShapeSeriesBaseDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ShapeDataSourceDescriptionMetadata } from \"./ShapeDataSourceDescriptionMetadata\";\nimport { AssigningShapeStyleEventArgsDescriptionMetadata } from \"./AssigningShapeStyleEventArgsDescriptionMetadata\";\nimport { AssigningShapeMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningShapeMarkerStyleEventArgsDescriptionMetadata\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\n * @hidden\n */\nvar GeographicShapeSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(GeographicShapeSeriesBaseDescriptionMetadata, _super);\n    function GeographicShapeSeriesBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GeographicShapeSeriesBaseDescriptionMetadata.b = function (a) {\n        if (GeographicShapeSeriesBaseDescriptionMetadata.a == null) {\n            GeographicShapeSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            GeographicShapeSeriesBaseDescriptionMetadata.c(GeographicShapeSeriesBaseDescriptionMetadata.a);\n        }\n        if (a.g(GeographicShapeSeriesBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(GeographicShapeSeriesBaseDescriptionMetadata.a);\n        ShapeDataSourceDescriptionMetadata.d(a);\n        AssigningShapeStyleEventArgsDescriptionMetadata.d(a);\n        AssigningShapeMarkerStyleEventArgsDescriptionMetadata.d(a);\n    };\n    GeographicShapeSeriesBaseDescriptionMetadata.c = function (a) {\n        GeographicMapSeriesHostDescriptionMetadata.c(a);\n        a.item(\"ShapeMemberPath\", \"String\");\n        a.item(\"IsCustomShapeStyleAllowed\", \"Boolean\");\n        a.item(\"IsCustomShapeMarkerStyleAllowed\", \"Boolean\");\n        a.item(\"ItemSearchMode\", \"ExportedType:string:ShapeItemSearchMode\");\n        a.item(\"ItemSearchMode@names\", \"Auto;ClosestBoundingBox;ClosestShape;ClosestPointOnClosestShape;None\");\n        a.item(\"ItemSearchThreshold\", \"Number:int\");\n        a.item(\"ItemSearchPointsThreshold\", \"Number:int\");\n        a.item(\"ShapefileDataSource\", \"ExportedType:ShapefileConverter\");\n        a.item(\"ShapeFilterResolution\", \"Number:double\");\n        a.item(\"AssigningShapeStyleRef\", \"EventRef::assigningShapeStyle\");\n        a.item(\"AssigningShapeMarkerStyleRef\", \"EventRef::assigningShapeMarkerStyle\");\n    };\n    GeographicShapeSeriesBaseDescriptionMetadata.d = function (a) {\n        GeographicShapeSeriesBaseDescriptionMetadata.b(a);\n        a.t(\"GeographicShapeSeriesBase\", GeographicShapeSeriesBaseDescriptionMetadata.a);\n    };\n    GeographicShapeSeriesBaseDescriptionMetadata.$t = markType(GeographicShapeSeriesBaseDescriptionMetadata, 'GeographicShapeSeriesBaseDescriptionMetadata');\n    GeographicShapeSeriesBaseDescriptionMetadata.a = null;\n    return GeographicShapeSeriesBaseDescriptionMetadata;\n}(Base));\nexport { GeographicShapeSeriesBaseDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA,SAASC,+CAAT,QAAgE,mDAAhE;AACA,SAASC,qDAAT,QAAsE,yDAAtE;AACA,SAASC,0CAAT,QAA2D,8CAA3D;AACA;AACA;AACA;;AACA,IAAIC,4CAA4C;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC9FV,SAAS,CAACS,4CAAD,EAA+CC,MAA/C,CAAT;;EACA,SAASD,4CAAT,GAAwD;IACpD,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,4CAA4C,CAACI,CAA7C,GAAiD,UAAUC,CAAV,EAAa;IAC1D,IAAIL,4CAA4C,CAACK,CAA7C,IAAkD,IAAtD,EAA4D;MACxDL,4CAA4C,CAACK,CAA7C,GAAiD,IAAIV,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAjD;MACAO,4CAA4C,CAACM,CAA7C,CAA+CN,4CAA4C,CAACK,CAA5F;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,4CAA4C,CAACK,CAAjD,CAAJ,EAAyD;MACrD;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,4CAA4C,CAACK,CAAjD;IACAT,kCAAkC,CAACa,CAAnC,CAAqCJ,CAArC;IACAR,+CAA+C,CAACY,CAAhD,CAAkDJ,CAAlD;IACAP,qDAAqD,CAACW,CAAtD,CAAwDJ,CAAxD;EACH,CAZD;;EAaAL,4CAA4C,CAACM,CAA7C,GAAiD,UAAUD,CAAV,EAAa;IAC1DN,0CAA0C,CAACO,CAA3C,CAA6CD,CAA7C;IACAA,CAAC,CAACK,IAAF,CAAO,iBAAP,EAA0B,QAA1B;IACAL,CAAC,CAACK,IAAF,CAAO,2BAAP,EAAoC,SAApC;IACAL,CAAC,CAACK,IAAF,CAAO,iCAAP,EAA0C,SAA1C;IACAL,CAAC,CAACK,IAAF,CAAO,gBAAP,EAAyB,yCAAzB;IACAL,CAAC,CAACK,IAAF,CAAO,sBAAP,EAA+B,sEAA/B;IACAL,CAAC,CAACK,IAAF,CAAO,qBAAP,EAA8B,YAA9B;IACAL,CAAC,CAACK,IAAF,CAAO,2BAAP,EAAoC,YAApC;IACAL,CAAC,CAACK,IAAF,CAAO,qBAAP,EAA8B,iCAA9B;IACAL,CAAC,CAACK,IAAF,CAAO,uBAAP,EAAgC,eAAhC;IACAL,CAAC,CAACK,IAAF,CAAO,wBAAP,EAAiC,+BAAjC;IACAL,CAAC,CAACK,IAAF,CAAO,8BAAP,EAAuC,qCAAvC;EACH,CAbD;;EAcAV,4CAA4C,CAACS,CAA7C,GAAiD,UAAUJ,CAAV,EAAa;IAC1DL,4CAA4C,CAACI,CAA7C,CAA+CC,CAA/C;IACAA,CAAC,CAACM,CAAF,CAAI,2BAAJ,EAAiCX,4CAA4C,CAACK,CAA9E;EACH,CAHD;;EAIAL,4CAA4C,CAACY,EAA7C,GAAkDlB,QAAQ,CAACM,4CAAD,EAA+C,8CAA/C,CAA1D;EACAA,4CAA4C,CAACK,CAA7C,GAAiD,IAAjD;EACA,OAAOL,4CAAP;AACH,CAvC+E,CAuC9ER,IAvC8E,CAAhF;;AAwCA,SAASQ,4CAAT"},"metadata":{},"sourceType":"module"}