{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StraightNumericAxisBaseDescriptionMetadata } from \"./StraightNumericAxisBaseDescriptionMetadata\";\nimport { NumericYAxisDescription } from \"./NumericYAxisDescription\";\n/**\n * @hidden\n */\n\nvar NumericYAxisDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(NumericYAxisDescriptionMetadata, _super);\n\n  function NumericYAxisDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumericYAxisDescriptionMetadata.b = function (a) {\n    if (NumericYAxisDescriptionMetadata.a == null) {\n      NumericYAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      NumericYAxisDescriptionMetadata.c(NumericYAxisDescriptionMetadata.a);\n    }\n\n    if (a.g(NumericYAxisDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(NumericYAxisDescriptionMetadata.a);\n  };\n\n  NumericYAxisDescriptionMetadata.c = function (a) {\n    StraightNumericAxisBaseDescriptionMetadata.c(a);\n  };\n\n  NumericYAxisDescriptionMetadata.d = function (a) {\n    NumericYAxisDescriptionMetadata.b(a);\n    a.u(\"NumericYAxis\", function () {\n      return new NumericYAxisDescription();\n    });\n    a.t(\"NumericYAxis\", NumericYAxisDescriptionMetadata.a);\n  };\n\n  NumericYAxisDescriptionMetadata.$t = markType(NumericYAxisDescriptionMetadata, 'NumericYAxisDescriptionMetadata');\n  NumericYAxisDescriptionMetadata.a = null;\n  return NumericYAxisDescriptionMetadata;\n}(Base);\n\nexport { NumericYAxisDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","StraightNumericAxisBaseDescriptionMetadata","NumericYAxisDescription","NumericYAxisDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/NumericYAxisDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StraightNumericAxisBaseDescriptionMetadata } from \"./StraightNumericAxisBaseDescriptionMetadata\";\nimport { NumericYAxisDescription } from \"./NumericYAxisDescription\";\n/**\n * @hidden\n */\nvar NumericYAxisDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(NumericYAxisDescriptionMetadata, _super);\n    function NumericYAxisDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumericYAxisDescriptionMetadata.b = function (a) {\n        if (NumericYAxisDescriptionMetadata.a == null) {\n            NumericYAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            NumericYAxisDescriptionMetadata.c(NumericYAxisDescriptionMetadata.a);\n        }\n        if (a.g(NumericYAxisDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(NumericYAxisDescriptionMetadata.a);\n    };\n    NumericYAxisDescriptionMetadata.c = function (a) {\n        StraightNumericAxisBaseDescriptionMetadata.c(a);\n    };\n    NumericYAxisDescriptionMetadata.d = function (a) {\n        NumericYAxisDescriptionMetadata.b(a);\n        a.u(\"NumericYAxis\", function () { return new NumericYAxisDescription(); });\n        a.t(\"NumericYAxis\", NumericYAxisDescriptionMetadata.a);\n    };\n    NumericYAxisDescriptionMetadata.$t = markType(NumericYAxisDescriptionMetadata, 'NumericYAxisDescriptionMetadata');\n    NumericYAxisDescriptionMetadata.a = null;\n    return NumericYAxisDescriptionMetadata;\n}(Base));\nexport { NumericYAxisDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,0CAAT,QAA2D,8CAA3D;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA;AACA;AACA;;AACA,IAAIC,+BAA+B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACjFR,SAAS,CAACO,+BAAD,EAAkCC,MAAlC,CAAT;;EACA,SAASD,+BAAT,GAA2C;IACvC,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,+BAA+B,CAACI,CAAhC,GAAoC,UAAUC,CAAV,EAAa;IAC7C,IAAIL,+BAA+B,CAACK,CAAhC,IAAqC,IAAzC,EAA+C;MAC3CL,+BAA+B,CAACK,CAAhC,GAAoC,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAApC;MACAK,+BAA+B,CAACM,CAAhC,CAAkCN,+BAA+B,CAACK,CAAlE;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,+BAA+B,CAACK,CAApC,CAAJ,EAA4C;MACxC;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,+BAA+B,CAACK,CAApC;EACH,CATD;;EAUAL,+BAA+B,CAACM,CAAhC,GAAoC,UAAUD,CAAV,EAAa;IAC7CP,0CAA0C,CAACQ,CAA3C,CAA6CD,CAA7C;EACH,CAFD;;EAGAL,+BAA+B,CAACS,CAAhC,GAAoC,UAAUJ,CAAV,EAAa;IAC7CL,+BAA+B,CAACI,CAAhC,CAAkCC,CAAlC;IACAA,CAAC,CAACK,CAAF,CAAI,cAAJ,EAAoB,YAAY;MAAE,OAAO,IAAIX,uBAAJ,EAAP;IAAuC,CAAzE;IACAM,CAAC,CAACM,CAAF,CAAI,cAAJ,EAAoBX,+BAA+B,CAACK,CAApD;EACH,CAJD;;EAKAL,+BAA+B,CAACY,EAAhC,GAAqChB,QAAQ,CAACI,+BAAD,EAAkC,iCAAlC,CAA7C;EACAA,+BAA+B,CAACK,CAAhC,GAAoC,IAApC;EACA,OAAOL,+BAAP;AACH,CA1BkE,CA0BjEN,IA1BiE,CAAnE;;AA2BA,SAASM,+BAAT"},"metadata":{},"sourceType":"module"}