{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { StochRSIIndicator } from \"./StochRSIIndicator\";\n/**\n * Represents a IgxDataChartComponent StochRSI indicator series.\n * Default required members: Close\n*\n* `IgrStochRSIIndicator` or Stochastic Relative Strength IndexI Indicator (SRSI) measures when a security is overbought or oversold within a specified period of time. The values range from 0 to 1. The StochRSI Indicator is calculated by applying the Stochastic Oscillator formula to RelativeStrengthIndexIndicator (RSI) data.\n*\n* Using this indicator requires setting the `CloseMemberPath`.\n*\n* ```ts\n*  <IgrDataChart\n*     dataSource={this.state.dataSource} >\n*\n*     <IgrOrdinalTimeXAxis name=\"xAxis\" />\n*     <IgrNumericYAxis name=\"yAxis\" />\n*\n*     <IgrStochRSIIndicator\n*      name=\"series1\"\n*     xAxisName=\"xAxis\"\n* \tyAxisName=\"yAxis\"\n* \tcloseMemberPath=\"Close\"/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrStochRSIIndicator({name:\"series1\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\n\nvar IgrStochRSIIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStochRSIIndicator, _super);\n\n  function IgrStochRSIIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrStochRSIIndicator.prototype.createImplementation = function () {\n    return new StochRSIIndicator();\n  };\n\n  Object.defineProperty(IgrStochRSIIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStochRSIIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current StochRSIIndicator object.\n     * The typical, and initial, value for StochRSI periods is 14.\n    *\n    * ```ts\n    * this.series.period = 10;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *     <IgrStochRSIIndicator\n    *      name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    * \tyAxisName=\"yAxis\"\n    * \tcloseMemberPath=\"Close\"\n    * \tperiod={10} />\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function get() {\n      return this.i.u1;\n    },\n    set: function set(v) {\n      this.i.u1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStochRSIIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrStochRSIIndicator };","map":{"version":3,"names":["__extends","IgrStrategyBasedIndicator","StochRSIIndicator","IgrStochRSIIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","u1","set","v"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-stoch-rsi-indicator.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { StochRSIIndicator } from \"./StochRSIIndicator\";\n/**\n * Represents a IgxDataChartComponent StochRSI indicator series.\n * Default required members: Close\n*\n* `IgrStochRSIIndicator` or Stochastic Relative Strength IndexI Indicator (SRSI) measures when a security is overbought or oversold within a specified period of time. The values range from 0 to 1. The StochRSI Indicator is calculated by applying the Stochastic Oscillator formula to RelativeStrengthIndexIndicator (RSI) data.\n*\n* Using this indicator requires setting the `CloseMemberPath`.\n*\n* ```ts\n*  <IgrDataChart\n*     dataSource={this.state.dataSource} >\n*\n*     <IgrOrdinalTimeXAxis name=\"xAxis\" />\n*     <IgrNumericYAxis name=\"yAxis\" />\n*\n*     <IgrStochRSIIndicator\n*      name=\"series1\"\n*     xAxisName=\"xAxis\"\n* \tyAxisName=\"yAxis\"\n* \tcloseMemberPath=\"Close\"/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrStochRSIIndicator({name:\"series1\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\nvar IgrStochRSIIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStochRSIIndicator, _super);\n    function IgrStochRSIIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrStochRSIIndicator.prototype.createImplementation = function () {\n        return new StochRSIIndicator();\n    };\n    Object.defineProperty(IgrStochRSIIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStochRSIIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current StochRSIIndicator object.\n         * The typical, and initial, value for StochRSI periods is 14.\n        *\n        * ```ts\n        * this.series.period = 10;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *     <IgrStochRSIIndicator\n        *      name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        * \tyAxisName=\"yAxis\"\n        * \tcloseMemberPath=\"Close\"\n        * \tperiod={10} />\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.u1;\n        },\n        set: function (v) {\n            this.i.u1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStochRSIIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrStochRSIIndicator };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACtEJ,SAAS,CAACG,oBAAD,EAAuBC,MAAvB,CAAT;;EACA,SAASD,oBAAT,CAA8BE,KAA9B,EAAqC;IACjC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,oBAAoB,CAACI,SAArB,CAA+BC,oBAA/B,GAAsD,YAAY;IAC9D,OAAO,IAAIN,iBAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,GAAtD,EAA2D;IACvD;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANsD;IAOvDC,UAAU,EAAE,KAP2C;IAQvDC,YAAY,EAAE;EARyC,CAA3D;EAUAL,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,QAAtD,EAAgE;IAC5D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CA3B2D;IA4B5DC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,EAAP,GAAY,CAACE,CAAb;IACH,CA9B2D;IA+B5DL,UAAU,EAAE,KA/BgD;IAgC5DC,YAAY,EAAE;EAhC8C,CAAhE;EAkCA,OAAOX,oBAAP;AACH,CArDuD,CAqDtDF,yBArDsD,CAAxD;;AAsDA,SAASE,oBAAT"},"metadata":{},"sourceType":"module"}