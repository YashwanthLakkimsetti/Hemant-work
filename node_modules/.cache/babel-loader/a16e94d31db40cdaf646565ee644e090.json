{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrVerticalAnchoredCategorySeries } from \"./igr-vertical-anchored-category-series\";\nimport { BarSeries } from \"./BarSeries\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent bar series.\n*/\n\nvar IgrBarSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrBarSeries, _super);\n\n  function IgrBarSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrBarSeries.prototype.createImplementation = function () {\n    return new BarSeries();\n  };\n\n  Object.defineProperty(IgrBarSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBarSeries.prototype, \"isBar\", {\n    /**\n     * Gets whether the current series shows a bar shape.\n    */\n    get: function get() {\n      return this.i.df;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBarSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function get() {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBarSeries.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.\n    */\n    get: function get() {\n      return this.i.uz;\n    },\n    set: function set(v) {\n      this.i.uz = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBarSeries.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.\n    */\n    get: function get() {\n      return this.i.u0;\n    },\n    set: function set(v) {\n      this.i.u0 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  */\n\n  IgrBarSeries.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.pu(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The series is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  */\n\n\n  IgrBarSeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  */\n\n\n  IgrBarSeries.prototype.getItemSpan = function () {\n    var iv = this.i.ga();\n    return iv;\n  };\n\n  return IgrBarSeries;\n}(IgrVerticalAnchoredCategorySeries);\n\nexport { IgrBarSeries };","map":{"version":3,"names":["__extends","IgrVerticalAnchoredCategorySeries","BarSeries","toPoint","fromRect","IgrBarSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","df","d2","uz","set","v","u0","getSeriesValueBoundingBox","world","iv","pu","scrollIntoView","item","en","getItemSpan","ga"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-bar-series.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrVerticalAnchoredCategorySeries } from \"./igr-vertical-anchored-category-series\";\nimport { BarSeries } from \"./BarSeries\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent bar series.\n*/\nvar IgrBarSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrBarSeries, _super);\n    function IgrBarSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrBarSeries.prototype.createImplementation = function () {\n        return new BarSeries();\n    };\n    Object.defineProperty(IgrBarSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBarSeries.prototype, \"isBar\", {\n        /**\n         * Gets whether the current series shows a bar shape.\n        */\n        get: function () {\n            return this.i.df;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBarSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBarSeries.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.\n        */\n        get: function () {\n            return this.i.uz;\n        },\n        set: function (v) {\n            this.i.uz = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBarSeries.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.\n        */\n        get: function () {\n            return this.i.u0;\n        },\n        set: function (v) {\n            this.i.u0 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    */\n    IgrBarSeries.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.pu(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The series is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    */\n    IgrBarSeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    */\n    IgrBarSeries.prototype.getItemSpan = function () {\n        var iv = this.i.ga();\n        return (iv);\n    };\n    return IgrBarSeries;\n}(IgrVerticalAnchoredCategorySeries));\nexport { IgrBarSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}