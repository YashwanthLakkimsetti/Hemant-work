{"ast":null,"code":"//\n// System.Xml.XmlConvert\n//\n// Authors:\n//      Dwivedi, Ajay kumar (Adwiv@Yahoo.com)\n//\tGonzalo Paniagua Javier (gonzalo@ximian.com)\n//      Alan Tam Siu Lung (Tam@SiuLung.com)\n//\tAtsushi Enomoto (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2002 Ximian, Inc (http://www.ximian.com)\n//\nimport { __extends, __read, __spreadArray } from \"tslib\"; //\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { Base, FormatException, markType } from \"./type\";\nimport { CultureInfo } from \"./culture\";\nimport { XmlChar } from \"./XmlChar\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { XmlException } from \"./XmlException\";\nimport { StringWriter } from \"./StringWriter\";\nimport { ArgumentNullException } from \"./ArgumentNullException\";\nimport { ArgumentOutOfRangeException } from \"./ArgumentOutOfRangeException\";\nimport { parseInt32_2, parseUInt8_2, parseNumber, parseNumber1, parseInt16_2, parseInt64_2, parseInt8_2, numberToString, parseInt32_1, parseUInt16_2, parseUInt32_2, parseUInt64_2 } from \"./numberExtended\";\nimport { intDivide, isNegativeInfinity, isPositiveInfinity, isNaN_ } from \"./number\";\nimport { stringReplace, stringEmpty, stringToCharArray } from \"./string\";\nimport { trim, stringCompareOrdinal } from \"./stringExtended\";\nimport { ConvertUtil } from \"./convertUtil\";\nimport { timeSpanTicks, timeSpanNegate, timeSpanDays, timeSpanHours, timeSpanMinutes, timeSpanSeconds, timeSpanMilliseconds, timeSpanInit3, timeSpanFromTicks } from \"./timespan\";\nimport { dateToStringFormat } from \"./dateExtended\";\n/**\n * @hidden\n */\n\nvar XmlConvert =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(XmlConvert, _super);\n\n  function XmlConvert() {\n    return _super.call(this) || this;\n  }\n\n  XmlConvert.ap = function (a) {\n    if (a == null || a.length < 6) {\n      return a;\n    }\n\n    var b = \"\\uFFFF\";\n\n    try {\n      b = String.fromCharCode(parseInt32_2(a.substr(1, 4), 515, CultureInfo.invariantCulture));\n    } catch (c) {\n      return a.charAt(0) + XmlConvert.s(a.substr(1));\n    }\n\n    if (a.length == 6) {\n      return b.toString();\n    }\n\n    return b + XmlConvert.s(a.substr(6));\n  };\n\n  XmlConvert.s = function (a) {\n    if (a == null || a.length == 0) {\n      return a;\n    }\n\n    var b = a.indexOf('_');\n\n    if (b == -1 || b + 6 >= a.length) {\n      return a;\n    }\n\n    if (a.charAt(b + 1) != 'X' && a.charAt(b + 1) != 'x' || a.charAt(b + 6) != '_') {\n      return a.charAt(0) + XmlConvert.s(a.substr(1));\n    }\n\n    return a.substr(0, b) + XmlConvert.ap(a.substr(b + 1));\n  };\n\n  XmlConvert.u = function (a) {\n    if (a == null) {\n      return a;\n    }\n\n    var b = XmlConvert.v(a);\n    var c = b.indexOf(':');\n\n    if (c == -1) {\n      return b;\n    }\n\n    return stringReplace(b, \":\", \"_x003A_\");\n  };\n\n  XmlConvert.c = function (a, b) {\n    if (a == ':') {\n      return false;\n    }\n\n    if (b) {\n      return !XmlChar.e(a.charCodeAt(0));\n    } else {\n      return !XmlChar.h(a.charCodeAt(0));\n    }\n  };\n\n  XmlConvert.w = function (a, b) {\n    if (a == null || a.length == 0) {\n      return a;\n    }\n\n    var c = new StringBuilder(0);\n    var d = a.length;\n\n    for (var e = 0; e < d; e++) {\n      var f = a.charAt(e);\n\n      if (XmlConvert.c(f, e == 0 && !b)) {\n        c.q(\"_x{0:X4}_\", f.charCodeAt(0));\n      } else if (f == '_' && e + 6 < d && a.charAt(e + 1) == 'x' && a.charAt(e + 6) == '_') {\n        c.l(\"_x005F_\");\n      } else {\n        c.h(f);\n      }\n    }\n\n    return c.toString();\n  };\n\n  XmlConvert.v = function (a) {\n    return XmlConvert.w(a, false);\n  };\n\n  XmlConvert.x = function (a) {\n    if (a == stringEmpty()) {\n      throw new XmlException(3, \"Invalid NmToken: ''\");\n    }\n\n    return XmlConvert.w(a, true);\n  };\n\n  XmlConvert.d = function (a) {\n    a = trim.apply(void 0, __spreadArray([a], __read(XmlChar.d), false));\n\n    switch (a) {\n      case \"1\":\n        return true;\n\n      case \"true\":\n        return true;\n\n      case \"0\":\n        return false;\n\n      case \"false\":\n        return false;\n\n      default:\n        throw new FormatException(1, a + \" is not a valid boolean value\");\n    }\n  };\n\n  XmlConvert.y = function (a) {\n    var b = new StringWriter(0);\n    XmlConvert.ay(a, 0, a.length, b);\n    return b.toString();\n  };\n\n  XmlConvert.ay = function (a, b, c, d) {\n    if (a == null) {\n      throw new ArgumentNullException(0, \"buffer\");\n    }\n\n    if (b < 0) {\n      throw new ArgumentOutOfRangeException(3, \"index\", b, \"index must be non negative integer.\");\n    }\n\n    if (c < 0) {\n      throw new ArgumentOutOfRangeException(3, \"count\", c, \"count must be non negative integer.\");\n    }\n\n    if (a.length < b + c) {\n      throw new ArgumentOutOfRangeException(1, \"index and count must be smaller than the length of the buffer.\");\n    }\n\n    var e = b + c;\n\n    for (var f = b; f < e; f++) {\n      var g = a[f];\n      var h = g >> 4;\n      var i = g & 15;\n\n      if (h > 9) {\n        d.o(String.fromCharCode(h + 55));\n      } else {\n        d.o(String.fromCharCode(h + 48));\n      }\n\n      if (i > 9) {\n        d.o(String.fromCharCode(i + 55));\n      } else {\n        d.o(String.fromCharCode(i + 48));\n      }\n    }\n  };\n\n  XmlConvert.f = function (a) {\n    return parseUInt8_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.g = function (a) {\n    return ConvertUtil.toChar(a);\n  };\n\n  XmlConvert.h = function (a) {\n    return parseNumber(a, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.i = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(1);\n    }\n\n    var b = XmlConvert.r(a);\n\n    if (b != 0) {\n      return b;\n    }\n\n    return parseNumber1(a, 423, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.r = function (a) {\n    var b = 0;\n\n    while (b < a.length && /\\s/i.test(a.charAt(b))) {\n      b++;\n    }\n\n    if (b == a.length) {\n      throw new FormatException(0);\n    }\n\n    var c = a.length - 1;\n\n    while (/\\s/i.test(a.charAt(c))) {\n      c--;\n    }\n\n    if (XmlConvert.e(\"NaN\", a, b, c)) {\n      return NaN;\n    }\n\n    if (XmlConvert.e(\"INF\", a, b, c)) {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    if (XmlConvert.e(\"-INF\", a, b, c)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    if (XmlConvert.e(\"Infinity\", a, b, c)) {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    if (XmlConvert.e(\"-Infinity\", a, b, c)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    return 0;\n  };\n\n  XmlConvert.e = function (a, b, c, d) {\n    return d - c + 1 == a.length && stringCompareOrdinal(a, 0, b, c, a.length) == 0;\n  };\n\n  XmlConvert.l = function (a) {\n    return parseInt16_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.n = function (a) {\n    return parseInt32_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.o = function (a) {\n    return parseInt64_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.p = function (a) {\n    return parseInt8_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.q = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(1);\n    }\n\n    var b = XmlConvert.r(a);\n\n    if (b != 0) {\n      return b;\n    }\n\n    return parseNumber1(a, 423, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ah = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ag = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.aa = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ai = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ab = function (a) {\n    return ConvertUtil.toString1(a, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.z = function (a) {\n    if (a) {\n      return \"true\";\n    }\n\n    return \"false\";\n  };\n\n  XmlConvert.aj = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ae = function (a) {\n    return numberToString(a, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ao = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.al = function (a) {\n    if (a == 0) {\n      return \"PT0S\";\n    }\n\n    var b = new StringBuilder(0);\n\n    if (timeSpanTicks(a) < 0) {\n      if (a == -9007199254740991) {\n        return \"-P10675199DT2H48M5.4775808S\";\n      }\n\n      b.h('-');\n      a = timeSpanNegate(a);\n    }\n\n    b.h('P');\n\n    if (timeSpanDays(a) > 0) {\n      b.j(timeSpanDays(a)).h('D');\n    }\n\n    var c = timeSpanTicks(a) % 10000;\n\n    if (timeSpanDays(a) > 0 || timeSpanHours(a) > 0 || timeSpanMinutes(a) > 0 || timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n      b.h('T');\n\n      if (timeSpanHours(a) > 0) {\n        b.j(timeSpanHours(a)).h('H');\n      }\n\n      if (timeSpanMinutes(a) > 0) {\n        b.j(timeSpanMinutes(a)).h('M');\n      }\n\n      if (timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n        b.j(timeSpanSeconds(a));\n        var d = true;\n\n        if (c > 0) {\n          b.h('.').q(\"{0:0000000}\", timeSpanTicks(a) % 10000000);\n        } else if (timeSpanMilliseconds(a) > 0) {\n          b.h('.').q(\"{0:000}\", timeSpanMilliseconds(a));\n        } else {\n          d = false;\n        }\n\n        if (d) {\n          while (b.item(b.c - 1) == '0') {\n            b.y(b.c - 1, 1);\n          }\n        }\n\n        b.h('S');\n      }\n    }\n\n    return b.toString();\n  };\n\n  XmlConvert.af = function (a) {\n    if (isNegativeInfinity(a)) {\n      return \"-INF\";\n    }\n\n    if (isPositiveInfinity(a)) {\n      return \"INF\";\n    }\n\n    if (isNaN_(a)) {\n      return \"NaN\";\n    }\n\n    return a.toString();\n  };\n\n  XmlConvert.ak = function (a) {\n    if (isNegativeInfinity(a)) {\n      return \"-INF\";\n    }\n\n    if (isPositiveInfinity(a)) {\n      return \"INF\";\n    }\n\n    if (isNaN_(a)) {\n      return \"NaN\";\n    }\n\n    return a.toString();\n  };\n\n  XmlConvert.an = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.am = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ac = function (a) {\n    return dateToStringFormat(a, \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ad = function (a, b) {\n    return dateToStringFormat(a, b, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.au = function (a) {\n    a = trim.apply(void 0, __spreadArray([a], __read(XmlChar.d), false));\n\n    if (a.length == 0) {\n      throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n    }\n\n    var b = 0;\n\n    if (a.charAt(0) == '-') {\n      b = 1;\n    }\n\n    var c = b == 1;\n\n    if (a.charAt(b) != 'P') {\n      throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n    }\n\n    b++;\n    var d = 0;\n    var e = 0;\n    var f = false;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = false;\n    var m = b;\n\n    while (m < a.length) {\n      if (a.charAt(m) == 'T') {\n        f = true;\n        d = 4;\n        m++;\n        b = m;\n        continue;\n      }\n\n      for (; m < a.length; m++) {\n        if (a.charAt(m).charCodeAt(0) < '0'.charCodeAt(0) || '9'.charCodeAt(0) < a.charAt(m).charCodeAt(0)) {\n          break;\n        }\n      }\n\n      if (d == 7) {\n        k = m - b;\n      }\n\n      var n = parseInt32_1(a.substr(b, m - b), CultureInfo.invariantCulture);\n\n      if (d == 7) {\n        for (; k > 7; k--) {\n          n = intDivide(n, 10);\n        }\n\n        for (; k < 7; k++) {\n          n *= 10;\n        }\n      }\n\n      switch (a.charAt(m)) {\n        case 'Y':\n          e += n * 365;\n\n          if (d > 0) {\n            l = true;\n          } else {\n            d = 1;\n          }\n\n          break;\n\n        case 'M':\n          if (d < 2) {\n            e += 365 * intDivide(n, 12) + 30 * (n % 12);\n            d = 2;\n          } else if (f && d < 6) {\n            h = n;\n            d = 6;\n          } else {\n            l = true;\n          }\n\n          break;\n\n        case 'D':\n          e += n;\n\n          if (d > 2) {\n            l = true;\n          } else {\n            d = 3;\n          }\n\n          break;\n\n        case 'H':\n          g = n;\n\n          if (!f || d > 4) {\n            l = true;\n          } else {\n            d = 5;\n          }\n\n          break;\n\n        case 'S':\n          if (d == 7) {\n            j = n;\n          } else {\n            i = n;\n          }\n\n          if (!f || d > 7) {\n            l = true;\n          } else {\n            d = 8;\n          }\n\n          break;\n\n        case '.':\n          if (d > 7) {\n            l = true;\n          }\n\n          i = n;\n          d = 7;\n          break;\n\n        default:\n          l = true;\n          break;\n      }\n\n      if (l) {\n        break;\n      }\n\n      ++m;\n      b = m;\n    }\n\n    if (l) {\n      throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n    }\n\n    var o = timeSpanInit3(e, g, h, i);\n\n    if (c) {\n      return timeSpanFromTicks(-(timeSpanTicks(o) + j));\n    } else {\n      return timeSpanFromTicks(timeSpanTicks(o) + j);\n    }\n  };\n\n  XmlConvert.av = function (a) {\n    return parseUInt16_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.aw = function (a) {\n    return parseUInt32_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ax = function (a) {\n    return parseUInt64_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.aq = function (a) {\n    if (a == null || a.length == 0) {\n      throw new ArgumentNullException(0, \"name\");\n    }\n\n    if (!XmlChar.g(a)) {\n      throw new XmlException(3, \"'\" + a + \"' is not a valid XML Name\");\n    }\n\n    return a;\n  };\n\n  XmlConvert.ar = function (a) {\n    if (a == null || a.length == 0) {\n      throw new ArgumentNullException(0, \"ncname\");\n    }\n\n    if (!XmlChar.i(a)) {\n      throw new XmlException(3, \"'\" + a + \"' is not a valid XML NCName\");\n    }\n\n    return a;\n  };\n\n  XmlConvert.at = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(0, \"name\");\n    }\n\n    if (a.length == 0) {\n      return a;\n    }\n\n    if (XmlChar.p(a.charAt(0).charCodeAt(0)) || XmlChar.p(a.charAt(a.length - 1).charCodeAt(0))) {\n      throw new XmlException(3, \"Whitespace characters (#xA, #xD, #x9, #x20) are not allowed as leading or trailing whitespaces of xs:token.\");\n    }\n\n    for (var b = 0; b < a.length; b++) {\n      if (XmlChar.p(a.charAt(b).charCodeAt(0)) && a.charAt(b) != ' ') {\n        throw new XmlException(3, \"Either #xA, #xD or #x9 are not allowed inside xs:token.\");\n      }\n    }\n\n    return a;\n  };\n\n  XmlConvert.as = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(0, \"name\");\n    }\n\n    if (!XmlChar.k(a)) {\n      throw new XmlException(3, \"'\" + a + \"' is not a valid XML NMTOKEN\");\n    }\n\n    return a;\n  };\n\n  XmlConvert.b = function (a) {\n    var b = stringToCharArray(a);\n    var c = new Array(intDivide(b.length, 2) + b.length % 2);\n    XmlConvert.m(b, 0, b.length, c);\n    return c;\n  };\n\n  XmlConvert.m = function (a, b, c, d) {\n    var e = b;\n\n    for (var f = 0; f < c - 1; f += 2) {\n      d[e] = a[f].charCodeAt(0) > '9'.charCodeAt(0) ? a[f].charCodeAt(0) - 'A'.charCodeAt(0) + 10 : a[f].charCodeAt(0) - '0'.charCodeAt(0);\n      d[e] <<= 4;\n      d[e] += a[f + 1].charCodeAt(0) > '9'.charCodeAt(0) ? a[f + 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10 : a[f + 1].charCodeAt(0) - '0'.charCodeAt(0);\n      e++;\n    }\n\n    if (c % 2 != 0) {\n      d[e++] = (a[c - 1].charCodeAt(0) > '9'.charCodeAt(0) ? a[c - 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10 : a[c - 1].charCodeAt(0) - '0'.charCodeAt(0)) << 4;\n    }\n\n    return e - b;\n  };\n\n  XmlConvert.$t = markType(XmlConvert, 'XmlConvert');\n  XmlConvert.a = [\"yyyy-MM-ddTHH:mm:sszzz\", \"yyyy-MM-ddTHH:mm:ss.fzzz\", \"yyyy-MM-ddTHH:mm:ss.ffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", \"yyyy-MM-ddTHH:mm:ssZ\", \"yyyy-MM-ddTHH:mm:ss.fZ\", \"yyyy-MM-ddTHH:mm:ss.ffZ\", \"yyyy-MM-ddTHH:mm:ss.fffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffffZ\", \"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mm:ss.f\", \"yyyy-MM-ddTHH:mm:ss.ff\", \"yyyy-MM-ddTHH:mm:ss.fff\", \"yyyy-MM-ddTHH:mm:ss.ffff\", \"yyyy-MM-ddTHH:mm:ss.fffff\", \"yyyy-MM-ddTHH:mm:ss.ffffff\", \"yyyy-MM-ddTHH:mm:ss.fffffff\", \"HH:mm:ss\", \"HH:mm:ss.f\", \"HH:mm:ss.ff\", \"HH:mm:ss.fff\", \"HH:mm:ss.ffff\", \"HH:mm:ss.fffff\", \"HH:mm:ss.ffffff\", \"HH:mm:ss.fffffff\", \"HH:mm:sszzz\", \"HH:mm:ss.fzzz\", \"HH:mm:ss.ffzzz\", \"HH:mm:ss.fffzzz\", \"HH:mm:ss.ffffzzz\", \"HH:mm:ss.fffffzzz\", \"HH:mm:ss.ffffffzzz\", \"HH:mm:ss.fffffffzzz\", \"HH:mm:ssZ\", \"HH:mm:ss.fZ\", \"HH:mm:ss.ffZ\", \"HH:mm:ss.fffZ\", \"HH:mm:ss.ffffZ\", \"HH:mm:ss.fffffZ\", \"HH:mm:ss.ffffffZ\", \"HH:mm:ss.fffffffZ\", \"yyyy-MM-dd\", \"yyyy-MM-ddzzz\", \"yyyy-MM-ddZ\", \"yyyy-MM\", \"yyyy-MMzzz\", \"yyyy-MMZ\", \"yyyy\", \"yyyyzzz\", \"yyyyZ\", \"--MM-dd\", \"--MM-ddzzz\", \"--MM-ddZ\", \"---dd\", \"---ddzzz\", \"---ddZ\"];\n  return XmlConvert;\n}(Base);\n\nexport { XmlConvert };","map":{"version":3,"names":["__extends","__read","__spreadArray","Base","FormatException","markType","CultureInfo","XmlChar","StringBuilder","XmlException","StringWriter","ArgumentNullException","ArgumentOutOfRangeException","parseInt32_2","parseUInt8_2","parseNumber","parseNumber1","parseInt16_2","parseInt64_2","parseInt8_2","numberToString","parseInt32_1","parseUInt16_2","parseUInt32_2","parseUInt64_2","intDivide","isNegativeInfinity","isPositiveInfinity","isNaN_","stringReplace","stringEmpty","stringToCharArray","trim","stringCompareOrdinal","ConvertUtil","timeSpanTicks","timeSpanNegate","timeSpanDays","timeSpanHours","timeSpanMinutes","timeSpanSeconds","timeSpanMilliseconds","timeSpanInit3","timeSpanFromTicks","dateToStringFormat","XmlConvert","_super","call","ap","a","length","b","String","fromCharCode","substr","invariantCulture","c","charAt","s","toString","indexOf","u","v","e","charCodeAt","h","w","d","f","q","l","x","apply","y","ay","g","i","o","toChar","r","test","NaN","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","n","p","ah","ag","aa","ai","ab","toString1","z","aj","ae","ao","al","j","item","af","ak","an","am","ac","ad","au","k","m","av","aw","ax","aq","ar","at","as","Array","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/XmlConvert.js"],"sourcesContent":["//\n// System.Xml.XmlConvert\n//\n// Authors:\n//      Dwivedi, Ajay kumar (Adwiv@Yahoo.com)\n//\tGonzalo Paniagua Javier (gonzalo@ximian.com)\n//      Alan Tam Siu Lung (Tam@SiuLung.com)\n//\tAtsushi Enomoto (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2002 Ximian, Inc (http://www.ximian.com)\n//\nimport { __extends, __read, __spreadArray } from \"tslib\";\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { Base, FormatException, markType } from \"./type\";\nimport { CultureInfo } from \"./culture\";\nimport { XmlChar } from \"./XmlChar\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { XmlException } from \"./XmlException\";\nimport { StringWriter } from \"./StringWriter\";\nimport { ArgumentNullException } from \"./ArgumentNullException\";\nimport { ArgumentOutOfRangeException } from \"./ArgumentOutOfRangeException\";\nimport { parseInt32_2, parseUInt8_2, parseNumber, parseNumber1, parseInt16_2, parseInt64_2, parseInt8_2, numberToString, parseInt32_1, parseUInt16_2, parseUInt32_2, parseUInt64_2 } from \"./numberExtended\";\nimport { intDivide, isNegativeInfinity, isPositiveInfinity, isNaN_ } from \"./number\";\nimport { stringReplace, stringEmpty, stringToCharArray } from \"./string\";\nimport { trim, stringCompareOrdinal } from \"./stringExtended\";\nimport { ConvertUtil } from \"./convertUtil\";\nimport { timeSpanTicks, timeSpanNegate, timeSpanDays, timeSpanHours, timeSpanMinutes, timeSpanSeconds, timeSpanMilliseconds, timeSpanInit3, timeSpanFromTicks } from \"./timespan\";\nimport { dateToStringFormat } from \"./dateExtended\";\n/**\n * @hidden\n */\nvar XmlConvert = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(XmlConvert, _super);\n    function XmlConvert() {\n        return _super.call(this) || this;\n    }\n    XmlConvert.ap = function (a) {\n        if (a == null || a.length < 6) {\n            return a;\n        }\n        var b = '\\uffff';\n        try {\n            b = String.fromCharCode(parseInt32_2(a.substr(1, 4), 515, CultureInfo.invariantCulture));\n        }\n        catch (c) {\n            return a.charAt(0) + XmlConvert.s(a.substr(1));\n        }\n        if (a.length == 6) {\n            return b.toString();\n        }\n        return b + XmlConvert.s(a.substr(6));\n    };\n    XmlConvert.s = function (a) {\n        if (a == null || a.length == 0) {\n            return a;\n        }\n        var b = a.indexOf('_');\n        if (b == -1 || b + 6 >= a.length) {\n            return a;\n        }\n        if ((a.charAt(b + 1) != 'X' && a.charAt(b + 1) != 'x') || a.charAt(b + 6) != '_') {\n            return a.charAt(0) + XmlConvert.s(a.substr(1));\n        }\n        return a.substr(0, b) + XmlConvert.ap(a.substr(b + 1));\n    };\n    XmlConvert.u = function (a) {\n        if (a == null) {\n            return a;\n        }\n        var b = XmlConvert.v(a);\n        var c = b.indexOf(':');\n        if (c == -1) {\n            return b;\n        }\n        return stringReplace(b, \":\", \"_x003A_\");\n    };\n    XmlConvert.c = function (a, b) {\n        if (a == ':') {\n            return false;\n        }\n        if (b) {\n            return !XmlChar.e(a.charCodeAt(0));\n        }\n        else {\n            return !XmlChar.h(a.charCodeAt(0));\n        }\n    };\n    XmlConvert.w = function (a, b) {\n        if (a == null || a.length == 0) {\n            return a;\n        }\n        var c = new StringBuilder(0);\n        var d = a.length;\n        for (var e = 0; e < d; e++) {\n            var f = a.charAt(e);\n            if (XmlConvert.c(f, e == 0 && !b)) {\n                c.q(\"_x{0:X4}_\", f.charCodeAt(0));\n            }\n            else if (f == '_' && e + 6 < d && a.charAt(e + 1) == 'x' && a.charAt(e + 6) == '_') {\n                c.l(\"_x005F_\");\n            }\n            else {\n                c.h(f);\n            }\n        }\n        return c.toString();\n    };\n    XmlConvert.v = function (a) {\n        return XmlConvert.w(a, false);\n    };\n    XmlConvert.x = function (a) {\n        if (a == stringEmpty()) {\n            throw new XmlException(3, \"Invalid NmToken: ''\");\n        }\n        return XmlConvert.w(a, true);\n    };\n    XmlConvert.d = function (a) {\n        a = trim.apply(void 0, __spreadArray([a], __read(XmlChar.d), false));\n        switch (a) {\n            case \"1\": return true;\n            case \"true\": return true;\n            case \"0\": return false;\n            case \"false\": return false;\n            default: throw new FormatException(1, a + \" is not a valid boolean value\");\n        }\n    };\n    XmlConvert.y = function (a) {\n        var b = new StringWriter(0);\n        XmlConvert.ay(a, 0, a.length, b);\n        return b.toString();\n    };\n    XmlConvert.ay = function (a, b, c, d) {\n        if (a == null) {\n            throw new ArgumentNullException(0, \"buffer\");\n        }\n        if (b < 0) {\n            throw new ArgumentOutOfRangeException(3, \"index\", b, \"index must be non negative integer.\");\n        }\n        if (c < 0) {\n            throw new ArgumentOutOfRangeException(3, \"count\", c, \"count must be non negative integer.\");\n        }\n        if (a.length < b + c) {\n            throw new ArgumentOutOfRangeException(1, \"index and count must be smaller than the length of the buffer.\");\n        }\n        var e = b + c;\n        for (var f = b; f < e; f++) {\n            var g = a[f];\n            var h = g >> 4;\n            var i = g & 15;\n            if (h > 9) {\n                d.o(String.fromCharCode((h + 55)));\n            }\n            else {\n                d.o(String.fromCharCode((h + 48)));\n            }\n            if (i > 9) {\n                d.o(String.fromCharCode((i + 55)));\n            }\n            else {\n                d.o(String.fromCharCode((i + 48)));\n            }\n        }\n    };\n    XmlConvert.f = function (a) {\n        return parseUInt8_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.g = function (a) {\n        return ConvertUtil.toChar(a);\n    };\n    XmlConvert.h = function (a) {\n        return parseNumber(a, CultureInfo.invariantCulture);\n    };\n    XmlConvert.i = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(1);\n        }\n        var b = XmlConvert.r(a);\n        if (b != 0) {\n            return b;\n        }\n        return parseNumber1(a, 423, CultureInfo.invariantCulture);\n    };\n    XmlConvert.r = function (a) {\n        var b = 0;\n        while (b < a.length && /\\s/i.test(a.charAt(b))) {\n            b++;\n        }\n        if (b == a.length) {\n            throw new FormatException(0);\n        }\n        var c = a.length - 1;\n        while (/\\s/i.test(a.charAt(c))) {\n            c--;\n        }\n        if (XmlConvert.e(\"NaN\", a, b, c)) {\n            return NaN;\n        }\n        if (XmlConvert.e(\"INF\", a, b, c)) {\n            return Number.POSITIVE_INFINITY;\n        }\n        if (XmlConvert.e(\"-INF\", a, b, c)) {\n            return Number.NEGATIVE_INFINITY;\n        }\n        if (XmlConvert.e(\"Infinity\", a, b, c)) {\n            return Number.POSITIVE_INFINITY;\n        }\n        if (XmlConvert.e(\"-Infinity\", a, b, c)) {\n            return Number.NEGATIVE_INFINITY;\n        }\n        return 0;\n    };\n    XmlConvert.e = function (a, b, c, d) {\n        return d - c + 1 == a.length && stringCompareOrdinal(a, 0, b, c, a.length) == 0;\n    };\n    XmlConvert.l = function (a) {\n        return parseInt16_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.n = function (a) {\n        return parseInt32_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.o = function (a) {\n        return parseInt64_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.p = function (a) {\n        return parseInt8_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.q = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(1);\n        }\n        var b = XmlConvert.r(a);\n        if (b != 0) {\n            return b;\n        }\n        return parseNumber1(a, 423, CultureInfo.invariantCulture);\n    };\n    XmlConvert.ah = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ag = function (a) {\n        return a.toString();\n    };\n    XmlConvert.aa = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ai = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ab = function (a) {\n        return ConvertUtil.toString1(a, CultureInfo.invariantCulture);\n    };\n    XmlConvert.z = function (a) {\n        if (a) {\n            return \"true\";\n        }\n        return \"false\";\n    };\n    XmlConvert.aj = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ae = function (a) {\n        return numberToString(a, CultureInfo.invariantCulture);\n    };\n    XmlConvert.ao = function (a) {\n        return a.toString();\n    };\n    XmlConvert.al = function (a) {\n        if (a == (0)) {\n            return \"PT0S\";\n        }\n        var b = new StringBuilder(0);\n        if (timeSpanTicks(a) < 0) {\n            if (a == (-9007199254740991)) {\n                return \"-P10675199DT2H48M5.4775808S\";\n            }\n            b.h('-');\n            a = timeSpanNegate(a);\n        }\n        b.h('P');\n        if (timeSpanDays(a) > 0) {\n            b.j(timeSpanDays(a)).h('D');\n        }\n        var c = timeSpanTicks(a) % (10000);\n        if (timeSpanDays(a) > 0 || timeSpanHours(a) > 0 || timeSpanMinutes(a) > 0 || timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n            b.h('T');\n            if (timeSpanHours(a) > 0) {\n                b.j(timeSpanHours(a)).h('H');\n            }\n            if (timeSpanMinutes(a) > 0) {\n                b.j(timeSpanMinutes(a)).h('M');\n            }\n            if (timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n                b.j(timeSpanSeconds(a));\n                var d = true;\n                if (c > 0) {\n                    b.h('.').q(\"{0:0000000}\", timeSpanTicks(a) % (10000000));\n                }\n                else if (timeSpanMilliseconds(a) > 0) {\n                    b.h('.').q(\"{0:000}\", timeSpanMilliseconds(a));\n                }\n                else {\n                    d = false;\n                }\n                if (d) {\n                    while (b.item(b.c - 1) == '0') {\n                        b.y(b.c - 1, 1);\n                    }\n                }\n                b.h('S');\n            }\n        }\n        return b.toString();\n    };\n    XmlConvert.af = function (a) {\n        if (isNegativeInfinity(a)) {\n            return \"-INF\";\n        }\n        if (isPositiveInfinity(a)) {\n            return \"INF\";\n        }\n        if (isNaN_(a)) {\n            return \"NaN\";\n        }\n        return a.toString();\n    };\n    XmlConvert.ak = function (a) {\n        if (isNegativeInfinity(a)) {\n            return \"-INF\";\n        }\n        if (isPositiveInfinity(a)) {\n            return \"INF\";\n        }\n        if (isNaN_(a)) {\n            return \"NaN\";\n        }\n        return a.toString();\n    };\n    XmlConvert.an = function (a) {\n        return a.toString();\n    };\n    XmlConvert.am = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ac = function (a) {\n        return dateToStringFormat(a, \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", CultureInfo.invariantCulture);\n    };\n    XmlConvert.ad = function (a, b) {\n        return dateToStringFormat(a, b, CultureInfo.invariantCulture);\n    };\n    XmlConvert.au = function (a) {\n        a = trim.apply(void 0, __spreadArray([a], __read(XmlChar.d), false));\n        if (a.length == 0) {\n            throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n        }\n        var b = 0;\n        if (a.charAt(0) == '-') {\n            b = 1;\n        }\n        var c = (b == 1);\n        if (a.charAt(b) != 'P') {\n            throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n        }\n        b++;\n        var d = 0;\n        var e = 0;\n        var f = false;\n        var g = 0;\n        var h = 0;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        var l = false;\n        var m = b;\n        while (m < a.length) {\n            if (a.charAt(m) == 'T') {\n                f = true;\n                d = 4;\n                m++;\n                b = m;\n                continue;\n            }\n            for (; m < a.length; m++) {\n                if (a.charAt(m).charCodeAt(0) < '0'.charCodeAt(0) || '9'.charCodeAt(0) < a.charAt(m).charCodeAt(0)) {\n                    break;\n                }\n            }\n            if (d == 7) {\n                k = m - b;\n            }\n            var n = parseInt32_1(a.substr(b, m - b), CultureInfo.invariantCulture);\n            if (d == 7) {\n                for (; k > 7; k--) {\n                    n = intDivide(n, 10);\n                }\n                for (; k < 7; k++) {\n                    n *= 10;\n                }\n            }\n            switch (a.charAt(m)) {\n                case 'Y':\n                    e += n * 365;\n                    if (d > 0) {\n                        l = true;\n                    }\n                    else {\n                        d = 1;\n                    }\n                    break;\n                case 'M':\n                    if (d < 2) {\n                        e += 365 * (intDivide(n, 12)) + 30 * (n % 12);\n                        d = 2;\n                    }\n                    else if (f && d < 6) {\n                        h = n;\n                        d = 6;\n                    }\n                    else {\n                        l = true;\n                    }\n                    break;\n                case 'D':\n                    e += n;\n                    if (d > 2) {\n                        l = true;\n                    }\n                    else {\n                        d = 3;\n                    }\n                    break;\n                case 'H':\n                    g = n;\n                    if (!f || d > 4) {\n                        l = true;\n                    }\n                    else {\n                        d = 5;\n                    }\n                    break;\n                case 'S':\n                    if (d == 7) {\n                        j = n;\n                    }\n                    else {\n                        i = n;\n                    }\n                    if (!f || d > 7) {\n                        l = true;\n                    }\n                    else {\n                        d = 8;\n                    }\n                    break;\n                case '.':\n                    if (d > 7) {\n                        l = true;\n                    }\n                    i = n;\n                    d = 7;\n                    break;\n                default:\n                    l = true;\n                    break;\n            }\n            if (l) {\n                break;\n            }\n            ++m;\n            b = m;\n        }\n        if (l) {\n            throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n        }\n        var o = timeSpanInit3(e, g, h, i);\n        if (c) {\n            return timeSpanFromTicks(-(timeSpanTicks(o) + j));\n        }\n        else {\n            return timeSpanFromTicks(timeSpanTicks(o) + j);\n        }\n    };\n    XmlConvert.av = function (a) {\n        return parseUInt16_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.aw = function (a) {\n        return parseUInt32_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.ax = function (a) {\n        return parseUInt64_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.aq = function (a) {\n        if (a == null || a.length == 0) {\n            throw new ArgumentNullException(0, \"name\");\n        }\n        if (!XmlChar.g(a)) {\n            throw new XmlException(3, \"'\" + a + \"' is not a valid XML Name\");\n        }\n        return a;\n    };\n    XmlConvert.ar = function (a) {\n        if (a == null || a.length == 0) {\n            throw new ArgumentNullException(0, \"ncname\");\n        }\n        if (!XmlChar.i(a)) {\n            throw new XmlException(3, \"'\" + a + \"' is not a valid XML NCName\");\n        }\n        return a;\n    };\n    XmlConvert.at = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(0, \"name\");\n        }\n        if (a.length == 0) {\n            return a;\n        }\n        if (XmlChar.p(a.charAt(0).charCodeAt(0)) || XmlChar.p(a.charAt(a.length - 1).charCodeAt(0))) {\n            throw new XmlException(3, \"Whitespace characters (#xA, #xD, #x9, #x20) are not allowed as leading or trailing whitespaces of xs:token.\");\n        }\n        for (var b = 0; b < a.length; b++) {\n            if (XmlChar.p(a.charAt(b).charCodeAt(0)) && a.charAt(b) != ' ') {\n                throw new XmlException(3, \"Either #xA, #xD or #x9 are not allowed inside xs:token.\");\n            }\n        }\n        return a;\n    };\n    XmlConvert.as = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(0, \"name\");\n        }\n        if (!XmlChar.k(a)) {\n            throw new XmlException(3, \"'\" + a + \"' is not a valid XML NMTOKEN\");\n        }\n        return a;\n    };\n    XmlConvert.b = function (a) {\n        var b = stringToCharArray(a);\n        var c = new Array(intDivide(b.length, 2) + b.length % 2);\n        XmlConvert.m(b, 0, b.length, c);\n        return c;\n    };\n    XmlConvert.m = function (a, b, c, d) {\n        var e = b;\n        for (var f = 0; f < c - 1; f += 2) {\n            d[e] = (a[f].charCodeAt(0) > '9'.charCodeAt(0) ? (a[f].charCodeAt(0) - 'A'.charCodeAt(0) + 10) : (a[f].charCodeAt(0) - '0'.charCodeAt(0)));\n            d[e] <<= 4;\n            d[e] += a[f + 1].charCodeAt(0) > '9'.charCodeAt(0) ? (a[f + 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10) : (a[f + 1].charCodeAt(0) - '0'.charCodeAt(0));\n            e++;\n        }\n        if (c % 2 != 0) {\n            d[e++] = ((a[c - 1].charCodeAt(0) > '9'.charCodeAt(0) ? (a[c - 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10) : (a[c - 1].charCodeAt(0) - '0'.charCodeAt(0))) << 4);\n        }\n        return e - b;\n    };\n    XmlConvert.$t = markType(XmlConvert, 'XmlConvert');\n    XmlConvert.a = [\"yyyy-MM-ddTHH:mm:sszzz\", \"yyyy-MM-ddTHH:mm:ss.fzzz\", \"yyyy-MM-ddTHH:mm:ss.ffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", \"yyyy-MM-ddTHH:mm:ssZ\", \"yyyy-MM-ddTHH:mm:ss.fZ\", \"yyyy-MM-ddTHH:mm:ss.ffZ\", \"yyyy-MM-ddTHH:mm:ss.fffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffffZ\", \"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mm:ss.f\", \"yyyy-MM-ddTHH:mm:ss.ff\", \"yyyy-MM-ddTHH:mm:ss.fff\", \"yyyy-MM-ddTHH:mm:ss.ffff\", \"yyyy-MM-ddTHH:mm:ss.fffff\", \"yyyy-MM-ddTHH:mm:ss.ffffff\", \"yyyy-MM-ddTHH:mm:ss.fffffff\", \"HH:mm:ss\", \"HH:mm:ss.f\", \"HH:mm:ss.ff\", \"HH:mm:ss.fff\", \"HH:mm:ss.ffff\", \"HH:mm:ss.fffff\", \"HH:mm:ss.ffffff\", \"HH:mm:ss.fffffff\", \"HH:mm:sszzz\", \"HH:mm:ss.fzzz\", \"HH:mm:ss.ffzzz\", \"HH:mm:ss.fffzzz\", \"HH:mm:ss.ffffzzz\", \"HH:mm:ss.fffffzzz\", \"HH:mm:ss.ffffffzzz\", \"HH:mm:ss.fffffffzzz\", \"HH:mm:ssZ\", \"HH:mm:ss.fZ\", \"HH:mm:ss.ffZ\", \"HH:mm:ss.fffZ\", \"HH:mm:ss.ffffZ\", \"HH:mm:ss.fffffZ\", \"HH:mm:ss.ffffffZ\", \"HH:mm:ss.fffffffZ\", \"yyyy-MM-dd\", \"yyyy-MM-ddzzz\", \"yyyy-MM-ddZ\", \"yyyy-MM\", \"yyyy-MMzzz\", \"yyyy-MMZ\", \"yyyy\", \"yyyyzzz\", \"yyyyZ\", \"--MM-dd\", \"--MM-ddzzz\", \"--MM-ddZ\", \"---dd\", \"---ddzzz\", \"---ddZ\"];\n    return XmlConvert;\n}(Base));\nexport { XmlConvert };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}