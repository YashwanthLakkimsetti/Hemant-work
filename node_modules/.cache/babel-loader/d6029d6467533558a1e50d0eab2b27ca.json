{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TemplateCellUpdatingEventArgsDescriptionMetadata } from \"./TemplateCellUpdatingEventArgsDescriptionMetadata\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TemplateColumnDescription } from \"./TemplateColumnDescription\";\n/**\n * @hidden\n */\n\nvar TemplateColumnDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TemplateColumnDescriptionMetadata, _super);\n\n  function TemplateColumnDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TemplateColumnDescriptionMetadata.e = function (a) {\n    a.item(\"TemplateRef\", \"(w:Template,wf:Template,xam:Template)DataRef:String\");\n  };\n\n  TemplateColumnDescriptionMetadata.b = function (a) {\n    if (TemplateColumnDescriptionMetadata.a == null) {\n      TemplateColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TemplateColumnDescriptionMetadata.c(TemplateColumnDescriptionMetadata.a);\n    }\n\n    if (a.g(TemplateColumnDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TemplateColumnDescriptionMetadata.a);\n    TemplateCellUpdatingEventArgsDescriptionMetadata.d(a);\n  };\n\n  TemplateColumnDescriptionMetadata.c = function (a) {\n    ColumnDescriptionMetadata.c(a);\n    a.item(\"CellUpdatingRef\", \"EventRef::cellUpdating\");\n    TemplateColumnDescriptionMetadata.e(a);\n  };\n\n  TemplateColumnDescriptionMetadata.d = function (a) {\n    TemplateColumnDescriptionMetadata.b(a);\n    a.u(\"TemplateColumn\", function () {\n      return new TemplateColumnDescription();\n    });\n    a.t(\"TemplateColumn\", TemplateColumnDescriptionMetadata.a);\n  };\n\n  TemplateColumnDescriptionMetadata.$t = markType(TemplateColumnDescriptionMetadata, 'TemplateColumnDescriptionMetadata');\n  TemplateColumnDescriptionMetadata.a = null;\n  return TemplateColumnDescriptionMetadata;\n}(Base);\n\nexport { TemplateColumnDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","TemplateCellUpdatingEventArgsDescriptionMetadata","ColumnDescriptionMetadata","TemplateColumnDescription","TemplateColumnDescriptionMetadata","_super","apply","arguments","e","a","item","b","c","g","s","d","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/TemplateColumnDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TemplateCellUpdatingEventArgsDescriptionMetadata } from \"./TemplateCellUpdatingEventArgsDescriptionMetadata\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TemplateColumnDescription } from \"./TemplateColumnDescription\";\n/**\n * @hidden\n */\nvar TemplateColumnDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TemplateColumnDescriptionMetadata, _super);\n    function TemplateColumnDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TemplateColumnDescriptionMetadata.e = function (a) {\n        a.item(\"TemplateRef\", \"(w:Template,wf:Template,xam:Template)DataRef:String\");\n    };\n    TemplateColumnDescriptionMetadata.b = function (a) {\n        if (TemplateColumnDescriptionMetadata.a == null) {\n            TemplateColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TemplateColumnDescriptionMetadata.c(TemplateColumnDescriptionMetadata.a);\n        }\n        if (a.g(TemplateColumnDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TemplateColumnDescriptionMetadata.a);\n        TemplateCellUpdatingEventArgsDescriptionMetadata.d(a);\n    };\n    TemplateColumnDescriptionMetadata.c = function (a) {\n        ColumnDescriptionMetadata.c(a);\n        a.item(\"CellUpdatingRef\", \"EventRef::cellUpdating\");\n        TemplateColumnDescriptionMetadata.e(a);\n    };\n    TemplateColumnDescriptionMetadata.d = function (a) {\n        TemplateColumnDescriptionMetadata.b(a);\n        a.u(\"TemplateColumn\", function () { return new TemplateColumnDescription(); });\n        a.t(\"TemplateColumn\", TemplateColumnDescriptionMetadata.a);\n    };\n    TemplateColumnDescriptionMetadata.$t = markType(TemplateColumnDescriptionMetadata, 'TemplateColumnDescriptionMetadata');\n    TemplateColumnDescriptionMetadata.a = null;\n    return TemplateColumnDescriptionMetadata;\n}(Base));\nexport { TemplateColumnDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,gDAAT,QAAiE,oDAAjE;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA;AACA;AACA;;AACA,IAAIC,iCAAiC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACnFT,SAAS,CAACQ,iCAAD,EAAoCC,MAApC,CAAT;;EACA,SAASD,iCAAT,GAA6C;IACzC,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,iCAAiC,CAACI,CAAlC,GAAsC,UAAUC,CAAV,EAAa;IAC/CA,CAAC,CAACC,IAAF,CAAO,aAAP,EAAsB,qDAAtB;EACH,CAFD;;EAGAN,iCAAiC,CAACO,CAAlC,GAAsC,UAAUF,CAAV,EAAa;IAC/C,IAAIL,iCAAiC,CAACK,CAAlC,IAAuC,IAA3C,EAAiD;MAC7CL,iCAAiC,CAACK,CAAlC,GAAsC,IAAIT,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAtC;MACAM,iCAAiC,CAACQ,CAAlC,CAAoCR,iCAAiC,CAACK,CAAtE;IACH;;IACD,IAAIA,CAAC,CAACI,CAAF,CAAIT,iCAAiC,CAACK,CAAtC,CAAJ,EAA8C;MAC1C;IACH;;IACDA,CAAC,CAACK,CAAF,CAAIV,iCAAiC,CAACK,CAAtC;IACAR,gDAAgD,CAACc,CAAjD,CAAmDN,CAAnD;EACH,CAVD;;EAWAL,iCAAiC,CAACQ,CAAlC,GAAsC,UAAUH,CAAV,EAAa;IAC/CP,yBAAyB,CAACU,CAA1B,CAA4BH,CAA5B;IACAA,CAAC,CAACC,IAAF,CAAO,iBAAP,EAA0B,wBAA1B;IACAN,iCAAiC,CAACI,CAAlC,CAAoCC,CAApC;EACH,CAJD;;EAKAL,iCAAiC,CAACW,CAAlC,GAAsC,UAAUN,CAAV,EAAa;IAC/CL,iCAAiC,CAACO,CAAlC,CAAoCF,CAApC;IACAA,CAAC,CAACO,CAAF,CAAI,gBAAJ,EAAsB,YAAY;MAAE,OAAO,IAAIb,yBAAJ,EAAP;IAAyC,CAA7E;IACAM,CAAC,CAACQ,CAAF,CAAI,gBAAJ,EAAsBb,iCAAiC,CAACK,CAAxD;EACH,CAJD;;EAKAL,iCAAiC,CAACc,EAAlC,GAAuCnB,QAAQ,CAACK,iCAAD,EAAoC,mCAApC,CAA/C;EACAA,iCAAiC,CAACK,CAAlC,GAAsC,IAAtC;EACA,OAAOL,iCAAP;AACH,CAhCoE,CAgCnEP,IAhCmE,CAArE;;AAiCA,SAASO,iCAAT"},"metadata":{},"sourceType":"module"}