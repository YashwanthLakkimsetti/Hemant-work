{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { ValueBrushScale } from \"./ValueBrushScale\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses value-based brush selection.\n*/\n\nvar IgrValueBrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrValueBrushScale, _super);\n\n  function IgrValueBrushScale(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrValueBrushScale.prototype.createImplementation = function () {\n    return new ValueBrushScale();\n  };\n\n  Object.defineProperty(IgrValueBrushScale.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"minimumValue\", {\n    /**\n     * Gets or sets the minimum value for this scale.\n    */\n    get: function get() {\n      return this.i.minimumValue;\n    },\n    set: function set(v) {\n      this.i.minimumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"maximumValue\", {\n    /**\n     * Gets or sets the maximum value for this scale.\n    */\n    get: function get() {\n      return this.i.maximumValue;\n    },\n    set: function set(v) {\n      this.i.maximumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"isLogarithmic\", {\n    /**\n     * Gets or sets whether the scale is logarithmic.\n    */\n    get: function get() {\n      return this.i.isLogarithmic;\n    },\n    set: function set(v) {\n      this.i.isLogarithmic = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"logarithmBase\", {\n    /**\n     * Gets or sets the logarithm base for this scale.\n    */\n    get: function get() {\n      return this.i.logarithmBase;\n    },\n    set: function set(v) {\n      this.i.logarithmBase = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"isReady\", {\n    /**\n     * Checks if the value brush scale is ready for usage in the chart\n    */\n    get: function get() {\n      return this.i.isReady;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrValueBrushScale;\n}(IgrBrushScale);\n\nexport { IgrValueBrushScale };","map":{"version":3,"names":["__extends","IgrBrushScale","ValueBrushScale","ensureBool","IgrValueBrushScale","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","minimumValue","set","v","maximumValue","isLogarithmic","logarithmBase","isReady"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-value-brush-scale.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { ValueBrushScale } from \"./ValueBrushScale\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses value-based brush selection.\n*/\nvar IgrValueBrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrValueBrushScale, _super);\n    function IgrValueBrushScale(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrValueBrushScale.prototype.createImplementation = function () {\n        return new ValueBrushScale();\n    };\n    Object.defineProperty(IgrValueBrushScale.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"minimumValue\", {\n        /**\n         * Gets or sets the minimum value for this scale.\n        */\n        get: function () {\n            return this.i.minimumValue;\n        },\n        set: function (v) {\n            this.i.minimumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"maximumValue\", {\n        /**\n         * Gets or sets the maximum value for this scale.\n        */\n        get: function () {\n            return this.i.maximumValue;\n        },\n        set: function (v) {\n            this.i.maximumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"isLogarithmic\", {\n        /**\n         * Gets or sets whether the scale is logarithmic.\n        */\n        get: function () {\n            return this.i.isLogarithmic;\n        },\n        set: function (v) {\n            this.i.isLogarithmic = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"logarithmBase\", {\n        /**\n         * Gets or sets the logarithm base for this scale.\n        */\n        get: function () {\n            return this.i.logarithmBase;\n        },\n        set: function (v) {\n            this.i.logarithmBase = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"isReady\", {\n        /**\n         * Checks if the value brush scale is ready for usage in the chart\n        */\n        get: function () {\n            return this.i.isReady;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrValueBrushScale;\n}(IgrBrushScale));\nexport { IgrValueBrushScale };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}