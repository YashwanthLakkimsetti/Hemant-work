{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar TreemapVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TreemapVisualData, _super);\n\n  function TreemapVisualData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._nodes = null;\n    _this._name = null;\n    _this._viewport = null;\n    return _this;\n  }\n\n  Object.defineProperty(TreemapVisualData.prototype, \"nodes\", {\n    get: function get() {\n      return this._nodes;\n    },\n    set: function set(a) {\n      this._nodes = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TreemapVisualData.prototype, \"name\", {\n    get: function get() {\n      return this._name;\n    },\n    set: function set(a) {\n      this._name = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TreemapVisualData.prototype.scaleByViewport = function () {\n    var e_1, _a;\n\n    if (this.nodes != null) {\n      try {\n        for (var _b = __values(fromEnum(this.nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var a = _c.value;\n          a.e(this.viewport);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n\n  TreemapVisualData.prototype.serialize = function () {\n    var e_2, _a;\n\n    var a = new StringBuilder(0);\n    var b = true;\n    a.u(\"{\");\n\n    if (this.nodes != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      var c = true;\n      a.l(\"Nodes: [\");\n\n      try {\n        for (var _b = __values(fromEnum(this.nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var d = _c.value;\n\n          if (c) {\n            c = false;\n          } else {\n            a.l(\", \");\n          }\n\n          a.u(d.d());\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      a.u(\"]\");\n    }\n\n    if (this.name != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"name: '\");\n      a.l(this.name);\n      a.u(\"'\");\n    }\n\n    if (b) {\n      b = false;\n    } else {\n      a.l(\", \");\n    }\n\n    a.l(\"viewport: {\");\n    a.l(\"left: \" + this.viewport.left + \", top: \" + this.viewport.top + \", width: \" + this.viewport.width + \", height: \" + this.viewport.height);\n    a.u(\"}\");\n    a.u(\"}\");\n    return a.toString();\n  };\n\n  Object.defineProperty(TreemapVisualData.prototype, \"viewport\", {\n    get: function get() {\n      return this._viewport;\n    },\n    set: function set(a) {\n      this._viewport = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TreemapVisualData.$t = markType(TreemapVisualData, 'TreemapVisualData');\n  return TreemapVisualData;\n}(Base);\n\nexport { TreemapVisualData };","map":{"version":3,"names":["__extends","__values","Base","fromEnum","markType","StringBuilder","TreemapVisualData","_super","_this","apply","arguments","_nodes","_name","_viewport","Object","defineProperty","prototype","get","set","a","enumerable","configurable","scaleByViewport","e_1","_a","nodes","_b","_c","next","done","value","e","viewport","e_1_1","error","return","call","serialize","e_2","b","u","l","c","d","e_2_1","name","left","top","width","height","toString","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/TreemapVisualData.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar TreemapVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TreemapVisualData, _super);\n    function TreemapVisualData() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._nodes = null;\n        _this._name = null;\n        _this._viewport = null;\n        return _this;\n    }\n    Object.defineProperty(TreemapVisualData.prototype, \"nodes\", {\n        get: function () {\n            return this._nodes;\n        },\n        set: function (a) {\n            this._nodes = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreemapVisualData.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (a) {\n            this._name = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TreemapVisualData.prototype.scaleByViewport = function () {\n        var e_1, _a;\n        if (this.nodes != null) {\n            try {\n                for (var _b = __values(fromEnum(this.nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var a = _c.value;\n                    a.e(this.viewport);\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n        }\n    };\n    TreemapVisualData.prototype.serialize = function () {\n        var e_2, _a;\n        var a = new StringBuilder(0);\n        var b = true;\n        a.u(\"{\");\n        if (this.nodes != null) {\n            if (b) {\n                b = false;\n            }\n            else {\n                a.l(\", \");\n            }\n            var c = true;\n            a.l(\"Nodes: [\");\n            try {\n                for (var _b = __values(fromEnum(this.nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var d = _c.value;\n                    if (c) {\n                        c = false;\n                    }\n                    else {\n                        a.l(\", \");\n                    }\n                    a.u(d.d());\n                }\n            }\n            catch (e_2_1) {\n                e_2 = { error: e_2_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n            }\n            a.u(\"]\");\n        }\n        if (this.name != null) {\n            if (b) {\n                b = false;\n            }\n            else {\n                a.l(\", \");\n            }\n            a.l(\"name: '\");\n            a.l(this.name);\n            a.u(\"'\");\n        }\n        if (b) {\n            b = false;\n        }\n        else {\n            a.l(\", \");\n        }\n        a.l(\"viewport: {\");\n        a.l(\"left: \" + this.viewport.left + \", top: \" + this.viewport.top + \", width: \" + this.viewport.width + \", height: \" + this.viewport.height);\n        a.u(\"}\");\n        a.u(\"}\");\n        return a.toString();\n    };\n    Object.defineProperty(TreemapVisualData.prototype, \"viewport\", {\n        get: function () {\n            return this._viewport;\n        },\n        set: function (a) {\n            this._viewport = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TreemapVisualData.$t = markType(TreemapVisualData, 'TreemapVisualData');\n    return TreemapVisualData;\n}(Base));\nexport { TreemapVisualData };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,QAAyC,qBAAzC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACnEP,SAAS,CAACM,iBAAD,EAAoBC,MAApB,CAAT;;EACA,SAASD,iBAAT,GAA6B;IACzB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IACAF,KAAK,CAACG,MAAN,GAAe,IAAf;IACAH,KAAK,CAACI,KAAN,GAAc,IAAd;IACAJ,KAAK,CAACK,SAAN,GAAkB,IAAlB;IACA,OAAOL,KAAP;EACH;;EACDM,MAAM,CAACC,cAAP,CAAsBT,iBAAiB,CAACU,SAAxC,EAAmD,OAAnD,EAA4D;IACxDC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKN,MAAZ;IACH,CAHuD;IAIxDO,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKR,MAAL,GAAcQ,CAAd;IACH,CANuD;IAOxDC,UAAU,EAAE,KAP4C;IAQxDC,YAAY,EAAE;EAR0C,CAA5D;EAUAP,MAAM,CAACC,cAAP,CAAsBT,iBAAiB,CAACU,SAAxC,EAAmD,MAAnD,EAA2D;IACvDC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKL,KAAZ;IACH,CAHsD;IAIvDM,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKP,KAAL,GAAaO,CAAb;IACH,CANsD;IAOvDC,UAAU,EAAE,KAP2C;IAQvDC,YAAY,EAAE;EARyC,CAA3D;;EAUAf,iBAAiB,CAACU,SAAlB,CAA4BM,eAA5B,GAA8C,YAAY;IACtD,IAAIC,GAAJ,EAASC,EAAT;;IACA,IAAI,KAAKC,KAAL,IAAc,IAAlB,EAAwB;MACpB,IAAI;QACA,KAAK,IAAIC,EAAE,GAAGzB,QAAQ,CAACE,QAAQ,CAAC,KAAKsB,KAAN,CAAT,CAAjB,EAAyCE,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAnD,EAA8D,CAACD,EAAE,CAACE,IAAlE,EAAwEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA7E,EAAwF;UACpF,IAAIT,CAAC,GAAGQ,EAAE,CAACG,KAAX;UACAX,CAAC,CAACY,CAAF,CAAI,KAAKC,QAAT;QACH;MACJ,CALD,CAMA,OAAOC,KAAP,EAAc;QACVV,GAAG,GAAG;UAAEW,KAAK,EAAED;QAAT,CAAN;MACH,CARD,SASQ;QACJ,IAAI;UACA,IAAIN,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBL,EAAE,GAAGE,EAAE,CAACS,MAA3B,CAAJ,EACIX,EAAE,CAACY,IAAH,CAAQV,EAAR;QACP,CAHD,SAIQ;UACJ,IAAIH,GAAJ,EACI,MAAMA,GAAG,CAACW,KAAV;QACP;MACJ;IACJ;EACJ,CAvBD;;EAwBA5B,iBAAiB,CAACU,SAAlB,CAA4BqB,SAA5B,GAAwC,YAAY;IAChD,IAAIC,GAAJ,EAASd,EAAT;;IACA,IAAIL,CAAC,GAAG,IAAId,aAAJ,CAAkB,CAAlB,CAAR;IACA,IAAIkC,CAAC,GAAG,IAAR;IACApB,CAAC,CAACqB,CAAF,CAAI,GAAJ;;IACA,IAAI,KAAKf,KAAL,IAAc,IAAlB,EAAwB;MACpB,IAAIc,CAAJ,EAAO;QACHA,CAAC,GAAG,KAAJ;MACH,CAFD,MAGK;QACDpB,CAAC,CAACsB,CAAF,CAAI,IAAJ;MACH;;MACD,IAAIC,CAAC,GAAG,IAAR;MACAvB,CAAC,CAACsB,CAAF,CAAI,UAAJ;;MACA,IAAI;QACA,KAAK,IAAIf,EAAE,GAAGzB,QAAQ,CAACE,QAAQ,CAAC,KAAKsB,KAAN,CAAT,CAAjB,EAAyCE,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAnD,EAA8D,CAACD,EAAE,CAACE,IAAlE,EAAwEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA7E,EAAwF;UACpF,IAAIe,CAAC,GAAGhB,EAAE,CAACG,KAAX;;UACA,IAAIY,CAAJ,EAAO;YACHA,CAAC,GAAG,KAAJ;UACH,CAFD,MAGK;YACDvB,CAAC,CAACsB,CAAF,CAAI,IAAJ;UACH;;UACDtB,CAAC,CAACqB,CAAF,CAAIG,CAAC,CAACA,CAAF,EAAJ;QACH;MACJ,CAXD,CAYA,OAAOC,KAAP,EAAc;QACVN,GAAG,GAAG;UAAEJ,KAAK,EAAEU;QAAT,CAAN;MACH,CAdD,SAeQ;QACJ,IAAI;UACA,IAAIjB,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBL,EAAE,GAAGE,EAAE,CAACS,MAA3B,CAAJ,EACIX,EAAE,CAACY,IAAH,CAAQV,EAAR;QACP,CAHD,SAIQ;UACJ,IAAIY,GAAJ,EACI,MAAMA,GAAG,CAACJ,KAAV;QACP;MACJ;;MACDf,CAAC,CAACqB,CAAF,CAAI,GAAJ;IACH;;IACD,IAAI,KAAKK,IAAL,IAAa,IAAjB,EAAuB;MACnB,IAAIN,CAAJ,EAAO;QACHA,CAAC,GAAG,KAAJ;MACH,CAFD,MAGK;QACDpB,CAAC,CAACsB,CAAF,CAAI,IAAJ;MACH;;MACDtB,CAAC,CAACsB,CAAF,CAAI,SAAJ;MACAtB,CAAC,CAACsB,CAAF,CAAI,KAAKI,IAAT;MACA1B,CAAC,CAACqB,CAAF,CAAI,GAAJ;IACH;;IACD,IAAID,CAAJ,EAAO;MACHA,CAAC,GAAG,KAAJ;IACH,CAFD,MAGK;MACDpB,CAAC,CAACsB,CAAF,CAAI,IAAJ;IACH;;IACDtB,CAAC,CAACsB,CAAF,CAAI,aAAJ;IACAtB,CAAC,CAACsB,CAAF,CAAI,WAAW,KAAKT,QAAL,CAAcc,IAAzB,GAAgC,SAAhC,GAA4C,KAAKd,QAAL,CAAce,GAA1D,GAAgE,WAAhE,GAA8E,KAAKf,QAAL,CAAcgB,KAA5F,GAAoG,YAApG,GAAmH,KAAKhB,QAAL,CAAciB,MAArI;IACA9B,CAAC,CAACqB,CAAF,CAAI,GAAJ;IACArB,CAAC,CAACqB,CAAF,CAAI,GAAJ;IACA,OAAOrB,CAAC,CAAC+B,QAAF,EAAP;EACH,CA/DD;;EAgEApC,MAAM,CAACC,cAAP,CAAsBT,iBAAiB,CAACU,SAAxC,EAAmD,UAAnD,EAA+D;IAC3DC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKJ,SAAZ;IACH,CAH0D;IAI3DK,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKN,SAAL,GAAiBM,CAAjB;IACH,CAN0D;IAO3DC,UAAU,EAAE,KAP+C;IAQ3DC,YAAY,EAAE;EAR6C,CAA/D;EAUAf,iBAAiB,CAAC6C,EAAlB,GAAuB/C,QAAQ,CAACE,iBAAD,EAAoB,mBAApB,CAA/B;EACA,OAAOA,iBAAP;AACH,CAjIoD,CAiInDJ,IAjImD,CAArD;;AAkIA,SAASI,iBAAT"},"metadata":{},"sourceType":"module"}