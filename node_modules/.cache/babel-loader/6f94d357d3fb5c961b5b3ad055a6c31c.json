{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrFinancialOverlay } from \"./igr-financial-overlay\";\nimport { BollingerBandsOverlay } from \"./BollingerBandsOverlay\";\nimport { toPoint } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent Bollinger Bands financial overlay series.\n * Default required members: High, Low, Close\n*\n* You can use the `IgrBollingerBandsOverlay` class represents a IgxDataChartComponent Bollinger Bands financial overlay series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFinancialPriceSeries\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*\n*     <IgrBollingerBandsOverlay\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n*  const s = new IgrBollingerBandsOverlay({ name: \"\", xAxisName: \"\" });\n* ```\n*/\n\nvar IgrBollingerBandsOverlay =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrBollingerBandsOverlay, _super);\n\n  function IgrBollingerBandsOverlay(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrBollingerBandsOverlay.prototype.createImplementation = function () {\n    return new BollingerBandsOverlay();\n  };\n\n  Object.defineProperty(IgrBollingerBandsOverlay.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBollingerBandsOverlay.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current BollingerBandOverlay object.\n     * The typical, and initial, value for Bollinger band periods is 14.\n    *\n    * You can use the `period` property for moving average of the current BollingerBandOverlay object.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    *\n    *     <IgrBollingerBandsOverlay\n    *     name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod={7} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.period = 7;\n    * ```\n    */\n    get: function get() {\n      return this.i.tw;\n    },\n    set: function set(v) {\n      this.i.tw = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBollingerBandsOverlay.prototype, \"multiplier\", {\n    /**\n     * Gets or sets the moving average period for the current BollingerBandOverlay object.\n     * The typical, and initial, value for Bollinger band multipliers is 2.\n    *\n    * You can use the `IgrBollingerBandsOverlay`\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    *\n    *     <IgrBollingerBandsOverlay\n    *     name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tmultiplier= {2} />\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function get() {\n      return this.i.tv;\n    },\n    set: function set(v) {\n      this.i.tv = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrBollingerBandsOverlay.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrBollingerBandsOverlay.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.hj(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrBollingerBandsOverlay.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.hh(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  return IgrBollingerBandsOverlay;\n}(IgrFinancialOverlay);\n\nexport { IgrBollingerBandsOverlay };","map":{"version":3,"names":["__extends","IgrFinancialOverlay","BollingerBandsOverlay","toPoint","IgrBollingerBandsOverlay","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","tw","set","v","tv","getSeriesValue","world","useInterpolation","skipUnknowns","iv","gj","getPreviousOrExactIndex","hj","getNextOrExactIndex","hh"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-bollinger-bands-overlay.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrFinancialOverlay } from \"./igr-financial-overlay\";\nimport { BollingerBandsOverlay } from \"./BollingerBandsOverlay\";\nimport { toPoint } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent Bollinger Bands financial overlay series.\n * Default required members: High, Low, Close\n*\n* You can use the `IgrBollingerBandsOverlay` class represents a IgxDataChartComponent Bollinger Bands financial overlay series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFinancialPriceSeries\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*\n*     <IgrBollingerBandsOverlay\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n*  const s = new IgrBollingerBandsOverlay({ name: \"\", xAxisName: \"\" });\n* ```\n*/\nvar IgrBollingerBandsOverlay = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrBollingerBandsOverlay, _super);\n    function IgrBollingerBandsOverlay(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrBollingerBandsOverlay.prototype.createImplementation = function () {\n        return new BollingerBandsOverlay();\n    };\n    Object.defineProperty(IgrBollingerBandsOverlay.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBollingerBandsOverlay.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current BollingerBandOverlay object.\n         * The typical, and initial, value for Bollinger band periods is 14.\n        *\n        * You can use the `period` property for moving average of the current BollingerBandOverlay object.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        *\n        *     <IgrBollingerBandsOverlay\n        *     name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod={7} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.period = 7;\n        * ```\n        */\n        get: function () {\n            return this.i.tw;\n        },\n        set: function (v) {\n            this.i.tw = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBollingerBandsOverlay.prototype, \"multiplier\", {\n        /**\n         * Gets or sets the moving average period for the current BollingerBandOverlay object.\n         * The typical, and initial, value for Bollinger band multipliers is 2.\n        *\n        * You can use the `IgrBollingerBandsOverlay`\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        *\n        *     <IgrBollingerBandsOverlay\n        *     name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tmultiplier= {2} />\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.tv;\n        },\n        set: function (v) {\n            this.i.tv = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrBollingerBandsOverlay.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrBollingerBandsOverlay.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.hj(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrBollingerBandsOverlay.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.hh(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    return IgrBollingerBandsOverlay;\n}(IgrFinancialOverlay));\nexport { IgrBollingerBandsOverlay };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,wBAAwB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC1EL,SAAS,CAACI,wBAAD,EAA2BC,MAA3B,CAAT;;EACA,SAASD,wBAAT,CAAkCE,KAAlC,EAAyC;IACrC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,wBAAwB,CAACI,SAAzB,CAAmCC,oBAAnC,GAA0D,YAAY;IAClE,OAAO,IAAIP,qBAAJ,EAAP;EACH,CAFD;;EAGAQ,MAAM,CAACC,cAAP,CAAsBP,wBAAwB,CAACI,SAA/C,EAA0D,GAA1D,EAA+D;IAC3D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CAN0D;IAO3DC,UAAU,EAAE,KAP+C;IAQ3DC,YAAY,EAAE;EAR6C,CAA/D;EAUAL,MAAM,CAACC,cAAP,CAAsBP,wBAAwB,CAACI,SAA/C,EAA0D,QAA1D,EAAoE;IAChE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAhD+D;IAiDhEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,EAAP,GAAY,CAACE,CAAb;IACH,CAnD+D;IAoDhEL,UAAU,EAAE,KApDoD;IAqDhEC,YAAY,EAAE;EArDkD,CAApE;EAuDAL,MAAM,CAACC,cAAP,CAAsBP,wBAAwB,CAACI,SAA/C,EAA0D,YAA1D,EAAwE;IACpE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOI,EAAd;IACH,CA5CmE;IA6CpEF,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOI,EAAP,GAAY,CAACD,CAAb;IACH,CA/CmE;IAgDpEL,UAAU,EAAE,KAhDwD;IAiDpEC,YAAY,EAAE;EAjDsD,CAAxE;;EAmDAX,wBAAwB,CAACI,SAAzB,CAAmCa,cAAnC,GAAoD,UAAUC,KAAV,EAAiBC,gBAAjB,EAAmCC,YAAnC,EAAiD;IACjG,IAAIC,EAAE,GAAG,KAAKT,CAAL,CAAOU,EAAP,CAAUvB,OAAO,CAACmB,KAAD,CAAjB,EAA0BC,gBAA1B,EAA4CC,YAA5C,CAAT;IACA,OAAQC,EAAR;EACH,CAHD;;EAIArB,wBAAwB,CAACI,SAAzB,CAAmCmB,uBAAnC,GAA6D,UAAUL,KAAV,EAAiBE,YAAjB,EAA+B;IACxF,IAAIC,EAAE,GAAG,KAAKT,CAAL,CAAOY,EAAP,CAAUzB,OAAO,CAACmB,KAAD,CAAjB,EAA0BE,YAA1B,CAAT;IACA,OAAQC,EAAR;EACH,CAHD;;EAIArB,wBAAwB,CAACI,SAAzB,CAAmCqB,mBAAnC,GAAyD,UAAUP,KAAV,EAAiBE,YAAjB,EAA+B;IACpF,IAAIC,EAAE,GAAG,KAAKT,CAAL,CAAOc,EAAP,CAAU3B,OAAO,CAACmB,KAAD,CAAjB,EAA0BE,YAA1B,CAAT;IACA,OAAQC,EAAR;EACH,CAHD;;EAIA,OAAOrB,wBAAP;AACH,CAzI2D,CAyI1DH,mBAzI0D,CAA5D;;AA0IA,SAASG,wBAAT"},"metadata":{},"sourceType":"module"}