{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { EaseOfMovementIndicator } from \"./EaseOfMovementIndicator\";\n/**\n * Represents a IgxDataChartComponent Ease of Movement indicator series.\n * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to\n * its volume. Normally smoothed with a moving average.\n * Default required members: Low, High, Volume\n*\n* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrEaseOfMovementIndicator\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n* \t\tvolumeMemberPath=\"Volume\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*/\n\nvar IgrEaseOfMovementIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrEaseOfMovementIndicator, _super);\n\n  function IgrEaseOfMovementIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrEaseOfMovementIndicator.prototype.createImplementation = function () {\n    return new EaseOfMovementIndicator();\n  };\n\n  Object.defineProperty(IgrEaseOfMovementIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrEaseOfMovementIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrEaseOfMovementIndicator };","map":{"version":3,"names":["__extends","IgrStrategyBasedIndicator","EaseOfMovementIndicator","IgrEaseOfMovementIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-ease-of-movement-indicator.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { EaseOfMovementIndicator } from \"./EaseOfMovementIndicator\";\n/**\n * Represents a IgxDataChartComponent Ease of Movement indicator series.\n * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to\n * its volume. Normally smoothed with a moving average.\n * Default required members: Low, High, Volume\n*\n* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrEaseOfMovementIndicator\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n* \t\tvolumeMemberPath=\"Volume\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*/\nvar IgrEaseOfMovementIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrEaseOfMovementIndicator, _super);\n    function IgrEaseOfMovementIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrEaseOfMovementIndicator.prototype.createImplementation = function () {\n        return new EaseOfMovementIndicator();\n    };\n    Object.defineProperty(IgrEaseOfMovementIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrEaseOfMovementIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrEaseOfMovementIndicator };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,0BAA0B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC5EJ,SAAS,CAACG,0BAAD,EAA6BC,MAA7B,CAAT;;EACA,SAASD,0BAAT,CAAoCE,KAApC,EAA2C;IACvC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,0BAA0B,CAACI,SAA3B,CAAqCC,oBAArC,GAA4D,YAAY;IACpE,OAAO,IAAIN,uBAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,0BAA0B,CAACI,SAAjD,EAA4D,GAA5D,EAAiE;IAC7D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CAN4D;IAO7DC,UAAU,EAAE,KAPiD;IAQ7DC,YAAY,EAAE;EAR+C,CAAjE;EAUA,OAAOX,0BAAP;AACH,CAnB6D,CAmB5DF,yBAnB4D,CAA9D;;AAoBA,SAASE,0BAAT"},"metadata":{},"sourceType":"module"}