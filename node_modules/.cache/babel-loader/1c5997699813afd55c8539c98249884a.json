{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrNumericXAxis } from \"./igr-numeric-x-axis\";\nimport { IgrNumericYAxis } from \"./igr-numeric-y-axis\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { CollisionAvoidanceType_$type } from \"./CollisionAvoidanceType\";\nimport { ScatterItemSearchMode_$type } from \"./ScatterItemSearchMode\";\nimport { IgrAssigningScatterStyleEventArgs } from \"./igr-assigning-scatter-style-event-args\";\nimport { IgrAssigningScatterMarkerStyleEventArgs } from \"./igr-assigning-scatter-marker-style-event-args\";\nimport { IgrMarkerSeries } from \"./igr-marker-series\";\nimport { ensureBool, ensureEnum, brushToString, stringToBrush, toPoint, fromRect, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent scatter series\n*/\n\nvar IgrScatterBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrScatterBase, _super);\n\n  function IgrScatterBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._xAxisName = null;\n    _this._yAxisName = null;\n    _this._assigningScatterStyle = null;\n    _this._assigningScatterStyle_wrapped = null;\n    _this._assigningScatterMarkerStyle = null;\n    _this._assigningScatterMarkerStyle_wrapped = null;\n    return _this;\n  }\n\n  Object.defineProperty(IgrScatterBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"isScatter\", {\n    /**\n     * Checks if this series is a scatter series\n    */\n    get: function get() {\n      return this.i.ec;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"xAxis\", {\n    /**\n     * Gets or sets the effective x-axis for the current object.\n    */\n    get: function get() {\n      if (this.i.xAxis == null) {\n        return null;\n      }\n\n      if (!this.i.xAxis.externalObject) {\n        var e = IgrNumericXAxis._createFromInternal(this.i.xAxis);\n\n        if (e) {\n          e._implementation = this.i.xAxis;\n        }\n\n        this.i.xAxis.externalObject = e;\n      }\n\n      return this.i.xAxis.externalObject;\n    },\n    set: function set(v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.xAxis = null : this.i.xAxis = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"xAxisName\", {\n    /**\n    * Gets or sets the name to use to resolve xAxis from markup.\n    */\n    get: function get() {\n      return this._xAxisName;\n    },\n    set: function set(v) {\n      this._xAxisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"yAxis\", {\n    /**\n     * Gets or sets the effective y-axis for the current object.\n    */\n    get: function get() {\n      if (this.i.yAxis == null) {\n        return null;\n      }\n\n      if (!this.i.yAxis.externalObject) {\n        var e = IgrNumericYAxis._createFromInternal(this.i.yAxis);\n\n        if (e) {\n          e._implementation = this.i.yAxis;\n        }\n\n        this.i.yAxis.externalObject = e;\n      }\n\n      return this.i.yAxis.externalObject;\n    },\n    set: function set(v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.yAxis = null : this.i.yAxis = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"yAxisName\", {\n    /**\n    * Gets or sets the name to use to resolve yAxis from markup.\n    */\n    get: function get() {\n      return this._yAxisName;\n    },\n    set: function set(v) {\n      this._yAxisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"xMemberPath\", {\n    /**\n     * Gets or sets the value mapping property for the current series object.\n    */\n    get: function get() {\n      return this.i.td;\n    },\n    set: function set(v) {\n      this.i.td = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"yMemberPath\", {\n    /**\n     * Gets or sets the value mapping property for the current series object.\n    */\n    get: function get() {\n      return this.i.tl;\n    },\n    set: function set(v) {\n      this.i.tl = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"xMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series X value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.s9;\n    },\n    set: function set(v) {\n      this.i.s9 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"yMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series Y value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.th;\n    },\n    set: function set(v) {\n      this.i.th = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"xMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit after displayed after series X value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.tb;\n    },\n    set: function set(v) {\n      this.i.tb = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"yMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit after displayed after series Y value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.tj;\n    },\n    set: function set(v) {\n      this.i.tj = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"trendLineType\", {\n    /**\n     * Gets or sets the trend type for the current scatter series.\n    */\n    get: function get() {\n      return this.i.trendLineType;\n    },\n    set: function set(v) {\n      this.i.trendLineType = ensureEnum(TrendLineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"trendLineBrush\", {\n    /**\n     * Gets or sets the brush to use to draw the trend line.\n    */\n    get: function get() {\n      return brushToString(this.i.trendLineBrush);\n    },\n    set: function set(v) {\n      this.i.trendLineBrush = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"actualTrendLineBrush\", {\n    /**\n     * Gets the effective TrendLineBrush for this series.\n    */\n    get: function get() {\n      return brushToString(this.i.uw);\n    },\n    set: function set(v) {\n      this.i.uw = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"trendLineThickness\", {\n    /**\n     * Gets or sets the thickness of the current scatter series object's trend line.\n    */\n    get: function get() {\n      return this.i.trendLineThickness;\n    },\n    set: function set(v) {\n      this.i.trendLineThickness = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"trendLinePeriod\", {\n    /**\n     * Gets or sets the moving average period for the current scatter series object.\n     * The typical, and initial, value for trend line period is 7.\n    */\n    get: function get() {\n      return this.i.trendLinePeriod;\n    },\n    set: function set(v) {\n      this.i.trendLinePeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"markerCollisionAvoidance\", {\n    /**\n     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\n    */\n    get: function get() {\n      return this.i.ro;\n    },\n    set: function set(v) {\n      this.i.ro = ensureEnum(CollisionAvoidanceType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"trendLineZIndex\", {\n    /**\n     * Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data.\n    */\n    get: function get() {\n      return this.i.sy;\n    },\n    set: function set(v) {\n      this.i.sy = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"maximumMarkers\", {\n    /**\n     * Gets or sets the maximum number of markerItems displayed by the current series.\n     * If more than the specified number of markerItems are visible, the series will automatically\n     * choose a representative set.\n    */\n    get: function get() {\n      return this.i.sx;\n    },\n    set: function set(v) {\n      this.i.sx = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"itemSearchMode\", {\n    /**\n     * Gets or sets the mode the series will use to find the closest point to the cursor.\n    */\n    get: function get() {\n      return this.i.r8;\n    },\n    set: function set(v) {\n      this.i.r8 = ensureEnum(ScatterItemSearchMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"itemSearchThreshold\", {\n    /**\n     * Gets or sets the threshold to use when searching for items using ItemSearchMode.\n    */\n    get: function get() {\n      return this.i.sw;\n    },\n    set: function set(v) {\n      this.i.sw = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"actualItemSearchMode\", {\n    get: function get() {\n      return this.i.r6;\n    },\n    set: function set(v) {\n      this.i.r6 = ensureEnum(ScatterItemSearchMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"isCustomScatterStyleAllowed\", {\n    /**\n     * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\n    */\n    get: function get() {\n      return this.i.sj;\n    },\n    set: function set(v) {\n      this.i.sj = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"isCustomScatterMarkerStyleAllowed\", {\n    /**\n     * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\n    */\n    get: function get() {\n      return this.i.si;\n    },\n    set: function set(v) {\n      this.i.si = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrScatterBase.prototype.bindAxes = function (axes) {\n    _super.prototype.bindAxes.call(this, axes);\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.xAxisName && this.xAxisName.length > 0 && axes[i].name == this.xAxisName) {\n        this.xAxis = axes[i];\n      }\n    }\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.yAxisName && this.yAxisName.length > 0 && axes[i].name == this.yAxisName) {\n        this.yAxis = axes[i];\n      }\n    }\n  };\n\n  IgrScatterBase.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.xAxis && this.xAxis.name && this.xAxis.name == name) {\n      return this.xAxis;\n    }\n\n    if (this.yAxis && this.yAxis.name && this.yAxis.name == name) {\n      return this.yAxis;\n    }\n\n    return null;\n  };\n\n  IgrScatterBase.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.xAxis && this.xAxis._styling) {\n      this.xAxis._styling(container, component, this);\n    }\n\n    if (this.yAxis && this.yAxis._styling) {\n      this.yAxis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  IgrScatterBase.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.hw(item, memberPathName);\n    return iv;\n  };\n  /**\n   * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinates for which to get a value marker bounding box for\n  */\n\n\n  IgrScatterBase.prototype.getSeriesValueMarkerBoundingBox = function (world) {\n    var iv = this.i.pw(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * Determine if object can be used as YAxis\n  \r\n  * @param axis  * The object to check\n  */\n\n\n  IgrScatterBase.prototype.canUseAsYAxis = function (axis) {\n    var iv = this.i.sh(axis);\n    return iv;\n  };\n  /**\n   * Determine if object can be used as XAxis\n  \r\n  * @param axis  * The object to check\n  */\n\n\n  IgrScatterBase.prototype.canUseAsXAxis = function (axis) {\n    var iv = this.i.sg(axis);\n    return iv;\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrScatterBase.prototype.getItem = function (world) {\n    var iv = this.i.ht(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the index of the item that resides at the provided world coordinates.\n  \r\n  * @param world  * The world coordinates of the requested item.\n  */\n\n\n  IgrScatterBase.prototype.getItemIndex = function (world) {\n    var iv = this.i.hd(toPoint(world));\n    return iv;\n  };\n\n  IgrScatterBase.prototype.getExactItemIndex = function (world) {\n    var iv = this.i.f5(toPoint(world));\n    return iv;\n  };\n\n  IgrScatterBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.pl(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The series is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  */\n\n\n  IgrScatterBase.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n\n  Object.defineProperty(IgrScatterBase.prototype, \"assigningScatterStyle\", {\n    /**\n     * Event raised when Assigning Category Style\n    */\n    get: function get() {\n      return this._assigningScatterStyle;\n    },\n    set: function set(ev) {\n      var _this = this;\n\n      if (this._assigningScatterStyle_wrapped !== null) {\n        this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\n        this._assigningScatterStyle_wrapped = null;\n        this._assigningScatterStyle = null;\n      }\n\n      this._assigningScatterStyle = ev;\n\n      this._assigningScatterStyle_wrapped = function (o, e) {\n        var outerArgs = new IgrAssigningScatterStyleEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeAssigningScatterStyle) {\n          _this.beforeAssigningScatterStyle(_this, outerArgs);\n        }\n\n        if (_this._assigningScatterStyle) {\n          _this._assigningScatterStyle(_this, outerArgs);\n        }\n      };\n\n      this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterBase.prototype, \"assigningScatterMarkerStyle\", {\n    /**\n     * Event raised when Assigning Scatter Marker Style\n    */\n    get: function get() {\n      return this._assigningScatterMarkerStyle;\n    },\n    set: function set(ev) {\n      var _this = this;\n\n      if (this._assigningScatterMarkerStyle_wrapped !== null) {\n        this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\n        this._assigningScatterMarkerStyle_wrapped = null;\n        this._assigningScatterMarkerStyle = null;\n      }\n\n      this._assigningScatterMarkerStyle = ev;\n\n      this._assigningScatterMarkerStyle_wrapped = function (o, e) {\n        var outerArgs = new IgrAssigningScatterMarkerStyleEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeAssigningScatterMarkerStyle) {\n          _this.beforeAssigningScatterMarkerStyle(_this, outerArgs);\n        }\n\n        if (_this._assigningScatterMarkerStyle) {\n          _this._assigningScatterMarkerStyle(_this, outerArgs);\n        }\n      };\n\n      this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrScatterBase;\n}(IgrMarkerSeries);\n\nexport { IgrScatterBase };","map":{"version":3,"names":["__extends","delegateCombine","delegateRemove","IgrNumericXAxis","IgrNumericYAxis","TrendLineType_$type","CollisionAvoidanceType_$type","ScatterItemSearchMode_$type","IgrAssigningScatterStyleEventArgs","IgrAssigningScatterMarkerStyleEventArgs","IgrMarkerSeries","ensureBool","ensureEnum","brushToString","stringToBrush","toPoint","fromRect","fromPoint","IgrScatterBase","_super","props","_this","call","_xAxisName","_yAxisName","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","ec","xAxis","externalObject","e","_createFromInternal","set","v","_stylingContainer","_styling","yAxis","td","tl","s9","th","tb","tj","trendLineType","trendLineBrush","uw","trendLineThickness","trendLinePeriod","ro","sy","sx","r8","sw","r6","sj","si","bindAxes","axes","length","xAxisName","name","yAxisName","findByName","baseResult","container","component","parent","_inStyling","getItemValue","item","memberPathName","iv","hw","getSeriesValueMarkerBoundingBox","world","pw","canUseAsYAxis","axis","sh","canUseAsXAxis","sg","getItem","ht","getItemIndex","hd","getExactItemIndex","f5","getSeriesValuePosition","useInterpolation","skipUnknowns","pl","scrollIntoView","en","ev","assigningScatterStyle","o","outerArgs","_provideImplementation","beforeAssigningScatterStyle","assigningScatterMarkerStyle","beforeAssigningScatterMarkerStyle"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-scatter-base.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrNumericXAxis } from \"./igr-numeric-x-axis\";\nimport { IgrNumericYAxis } from \"./igr-numeric-y-axis\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { CollisionAvoidanceType_$type } from \"./CollisionAvoidanceType\";\nimport { ScatterItemSearchMode_$type } from \"./ScatterItemSearchMode\";\nimport { IgrAssigningScatterStyleEventArgs } from \"./igr-assigning-scatter-style-event-args\";\nimport { IgrAssigningScatterMarkerStyleEventArgs } from \"./igr-assigning-scatter-marker-style-event-args\";\nimport { IgrMarkerSeries } from \"./igr-marker-series\";\nimport { ensureBool, ensureEnum, brushToString, stringToBrush, toPoint, fromRect, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent scatter series\n*/\nvar IgrScatterBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrScatterBase, _super);\n    function IgrScatterBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._xAxisName = null;\n        _this._yAxisName = null;\n        _this._assigningScatterStyle = null;\n        _this._assigningScatterStyle_wrapped = null;\n        _this._assigningScatterMarkerStyle = null;\n        _this._assigningScatterMarkerStyle_wrapped = null;\n        return _this;\n    }\n    Object.defineProperty(IgrScatterBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"isScatter\", {\n        /**\n         * Checks if this series is a scatter series\n        */\n        get: function () {\n            return this.i.ec;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"xAxis\", {\n        /**\n         * Gets or sets the effective x-axis for the current object.\n        */\n        get: function () {\n            if (this.i.xAxis == null) {\n                return null;\n            }\n            if (!this.i.xAxis.externalObject) {\n                var e = IgrNumericXAxis._createFromInternal(this.i.xAxis);\n                if (e) {\n                    e._implementation = this.i.xAxis;\n                }\n                this.i.xAxis.externalObject = e;\n            }\n            return this.i.xAxis.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.xAxis = null : this.i.xAxis = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"xAxisName\", {\n        /**\n        * Gets or sets the name to use to resolve xAxis from markup.\n        */\n        get: function () {\n            return this._xAxisName;\n        },\n        set: function (v) {\n            this._xAxisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"yAxis\", {\n        /**\n         * Gets or sets the effective y-axis for the current object.\n        */\n        get: function () {\n            if (this.i.yAxis == null) {\n                return null;\n            }\n            if (!this.i.yAxis.externalObject) {\n                var e = IgrNumericYAxis._createFromInternal(this.i.yAxis);\n                if (e) {\n                    e._implementation = this.i.yAxis;\n                }\n                this.i.yAxis.externalObject = e;\n            }\n            return this.i.yAxis.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.yAxis = null : this.i.yAxis = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"yAxisName\", {\n        /**\n        * Gets or sets the name to use to resolve yAxis from markup.\n        */\n        get: function () {\n            return this._yAxisName;\n        },\n        set: function (v) {\n            this._yAxisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"xMemberPath\", {\n        /**\n         * Gets or sets the value mapping property for the current series object.\n        */\n        get: function () {\n            return this.i.td;\n        },\n        set: function (v) {\n            this.i.td = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"yMemberPath\", {\n        /**\n         * Gets or sets the value mapping property for the current series object.\n        */\n        get: function () {\n            return this.i.tl;\n        },\n        set: function (v) {\n            this.i.tl = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"xMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series X value in the Data Legend.\n        */\n        get: function () {\n            return this.i.s9;\n        },\n        set: function (v) {\n            this.i.s9 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"yMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series Y value in the Data Legend.\n        */\n        get: function () {\n            return this.i.th;\n        },\n        set: function (v) {\n            this.i.th = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"xMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit after displayed after series X value in the Data Legend.\n        */\n        get: function () {\n            return this.i.tb;\n        },\n        set: function (v) {\n            this.i.tb = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"yMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit after displayed after series Y value in the Data Legend.\n        */\n        get: function () {\n            return this.i.tj;\n        },\n        set: function (v) {\n            this.i.tj = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"trendLineType\", {\n        /**\n         * Gets or sets the trend type for the current scatter series.\n        */\n        get: function () {\n            return this.i.trendLineType;\n        },\n        set: function (v) {\n            this.i.trendLineType = ensureEnum(TrendLineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"trendLineBrush\", {\n        /**\n         * Gets or sets the brush to use to draw the trend line.\n        */\n        get: function () {\n            return brushToString(this.i.trendLineBrush);\n        },\n        set: function (v) {\n            this.i.trendLineBrush = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"actualTrendLineBrush\", {\n        /**\n         * Gets the effective TrendLineBrush for this series.\n        */\n        get: function () {\n            return brushToString(this.i.uw);\n        },\n        set: function (v) {\n            this.i.uw = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"trendLineThickness\", {\n        /**\n         * Gets or sets the thickness of the current scatter series object's trend line.\n        */\n        get: function () {\n            return this.i.trendLineThickness;\n        },\n        set: function (v) {\n            this.i.trendLineThickness = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"trendLinePeriod\", {\n        /**\n         * Gets or sets the moving average period for the current scatter series object.\n         * The typical, and initial, value for trend line period is 7.\n        */\n        get: function () {\n            return this.i.trendLinePeriod;\n        },\n        set: function (v) {\n            this.i.trendLinePeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"markerCollisionAvoidance\", {\n        /**\n         * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\n        */\n        get: function () {\n            return this.i.ro;\n        },\n        set: function (v) {\n            this.i.ro = ensureEnum(CollisionAvoidanceType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"trendLineZIndex\", {\n        /**\n         * Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data.\n        */\n        get: function () {\n            return this.i.sy;\n        },\n        set: function (v) {\n            this.i.sy = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"maximumMarkers\", {\n        /**\n         * Gets or sets the maximum number of markerItems displayed by the current series.\n         * If more than the specified number of markerItems are visible, the series will automatically\n         * choose a representative set.\n        */\n        get: function () {\n            return this.i.sx;\n        },\n        set: function (v) {\n            this.i.sx = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"itemSearchMode\", {\n        /**\n         * Gets or sets the mode the series will use to find the closest point to the cursor.\n        */\n        get: function () {\n            return this.i.r8;\n        },\n        set: function (v) {\n            this.i.r8 = ensureEnum(ScatterItemSearchMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"itemSearchThreshold\", {\n        /**\n         * Gets or sets the threshold to use when searching for items using ItemSearchMode.\n        */\n        get: function () {\n            return this.i.sw;\n        },\n        set: function (v) {\n            this.i.sw = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"actualItemSearchMode\", {\n        get: function () {\n            return this.i.r6;\n        },\n        set: function (v) {\n            this.i.r6 = ensureEnum(ScatterItemSearchMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"isCustomScatterStyleAllowed\", {\n        /**\n         * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\n        */\n        get: function () {\n            return this.i.sj;\n        },\n        set: function (v) {\n            this.i.sj = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"isCustomScatterMarkerStyleAllowed\", {\n        /**\n         * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\n        */\n        get: function () {\n            return this.i.si;\n        },\n        set: function (v) {\n            this.i.si = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrScatterBase.prototype.bindAxes = function (axes) {\n        _super.prototype.bindAxes.call(this, axes);\n        for (var i = 0; i < axes.length; i++) {\n            if (this.xAxisName && this.xAxisName.length > 0 &&\n                axes[i].name == this.xAxisName) {\n                this.xAxis = axes[i];\n            }\n        }\n        for (var i = 0; i < axes.length; i++) {\n            if (this.yAxisName && this.yAxisName.length > 0 &&\n                axes[i].name == this.yAxisName) {\n                this.yAxis = axes[i];\n            }\n        }\n    };\n    IgrScatterBase.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.xAxis && this.xAxis.name && this.xAxis.name == name) {\n            return this.xAxis;\n        }\n        if (this.yAxis && this.yAxis.name && this.yAxis.name == name) {\n            return this.yAxis;\n        }\n        return null;\n    };\n    IgrScatterBase.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.xAxis && this.xAxis._styling) {\n            this.xAxis._styling(container, component, this);\n        }\n        if (this.yAxis && this.yAxis._styling) {\n            this.yAxis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    IgrScatterBase.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.hw(item, memberPathName);\n        return (iv);\n    };\n    /**\n     * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinates for which to get a value marker bounding box for\n    */\n    IgrScatterBase.prototype.getSeriesValueMarkerBoundingBox = function (world) {\n        var iv = this.i.pw(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * Determine if object can be used as YAxis\n    \r\n    * @param axis  * The object to check\n    */\n    IgrScatterBase.prototype.canUseAsYAxis = function (axis) {\n        var iv = this.i.sh(axis);\n        return (iv);\n    };\n    /**\n     * Determine if object can be used as XAxis\n    \r\n    * @param axis  * The object to check\n    */\n    IgrScatterBase.prototype.canUseAsXAxis = function (axis) {\n        var iv = this.i.sg(axis);\n        return (iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrScatterBase.prototype.getItem = function (world) {\n        var iv = this.i.ht(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the index of the item that resides at the provided world coordinates.\n    \r\n    * @param world  * The world coordinates of the requested item.\n    */\n    IgrScatterBase.prototype.getItemIndex = function (world) {\n        var iv = this.i.hd(toPoint(world));\n        return (iv);\n    };\n    IgrScatterBase.prototype.getExactItemIndex = function (world) {\n        var iv = this.i.f5(toPoint(world));\n        return (iv);\n    };\n    IgrScatterBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.pl(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The series is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    */\n    IgrScatterBase.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    Object.defineProperty(IgrScatterBase.prototype, \"assigningScatterStyle\", {\n        /**\n         * Event raised when Assigning Category Style\n        */\n        get: function () {\n            return this._assigningScatterStyle;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._assigningScatterStyle_wrapped !== null) {\n                this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\n                this._assigningScatterStyle_wrapped = null;\n                this._assigningScatterStyle = null;\n            }\n            this._assigningScatterStyle = ev;\n            this._assigningScatterStyle_wrapped = function (o, e) {\n                var outerArgs = new IgrAssigningScatterStyleEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeAssigningScatterStyle) {\n                    _this.beforeAssigningScatterStyle(_this, outerArgs);\n                }\n                if (_this._assigningScatterStyle) {\n                    _this._assigningScatterStyle(_this, outerArgs);\n                }\n            };\n            this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterBase.prototype, \"assigningScatterMarkerStyle\", {\n        /**\n         * Event raised when Assigning Scatter Marker Style\n        */\n        get: function () {\n            return this._assigningScatterMarkerStyle;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._assigningScatterMarkerStyle_wrapped !== null) {\n                this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\n                this._assigningScatterMarkerStyle_wrapped = null;\n                this._assigningScatterMarkerStyle = null;\n            }\n            this._assigningScatterMarkerStyle = ev;\n            this._assigningScatterMarkerStyle_wrapped = function (o, e) {\n                var outerArgs = new IgrAssigningScatterMarkerStyleEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeAssigningScatterMarkerStyle) {\n                    _this.beforeAssigningScatterMarkerStyle(_this, outerArgs);\n                }\n                if (_this._assigningScatterMarkerStyle) {\n                    _this._assigningScatterMarkerStyle(_this, outerArgs);\n                }\n            };\n            this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrScatterBase;\n}(IgrMarkerSeries));\nexport { IgrScatterBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}