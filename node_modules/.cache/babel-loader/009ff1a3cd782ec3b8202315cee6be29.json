{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureBool, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\n\nvar IgrSplineSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrSplineSeriesBase, _super);\n\n  function IgrSplineSeriesBase(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isSplineShapePartOfRange\", {\n    /**\n     * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n    */\n    get: function get() {\n      return this.i.vb;\n    },\n    set: function set(v) {\n      this.i.vb = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n    /**\n     * Gets whether the current series shows an area or line shape.\n    */\n    get: function get() {\n      return this.i.de;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n    /**\n     * Gets or sets the type of spline to be rendered.\n    *\n    * ```ts\n    * this.series.splineType = SplineType.Clamped;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *     <IgrSplineAreaSeries\n    *      name=\"series1\"\n    *      valueMemberPath=\"value\"/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function get() {\n      return this.i.va;\n    },\n    set: function set(v) {\n      this.i.va = ensureEnum(SplineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries);\n\nexport { IgrSplineSeriesBase };","map":{"version":3,"names":["__extends","SplineType_$type","IgrHorizontalAnchoredCategorySeries","ensureBool","ensureEnum","IgrSplineSeriesBase","_super","props","call","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","vb","set","v","de","va"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-spline-series-base.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureBool, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\nvar IgrSplineSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrSplineSeriesBase, _super);\n    function IgrSplineSeriesBase(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isSplineShapePartOfRange\", {\n        /**\n         * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n        */\n        get: function () {\n            return this.i.vb;\n        },\n        set: function (v) {\n            this.i.vb = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n        /**\n         * Gets whether the current series shows an area or line shape.\n        */\n        get: function () {\n            return this.i.de;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n        /**\n         * Gets or sets the type of spline to be rendered.\n        *\n        * ```ts\n        * this.series.splineType = SplineType.Clamped;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *     <IgrSplineAreaSeries\n        *      name=\"series1\"\n        *      valueMemberPath=\"value\"/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.va;\n        },\n        set: function (v) {\n            this.i.va = ensureEnum(SplineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries));\nexport { IgrSplineSeriesBase };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,mCAAT,QAAoD,2CAApD;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACrEN,SAAS,CAACK,mBAAD,EAAsBC,MAAtB,CAAT;;EACA,SAASD,mBAAT,CAA6BE,KAA7B,EAAoC;IAChC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDE,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,GAArD,EAA0D;IACtD;AACR;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANqD;IAOtDC,UAAU,EAAE,KAP0C;IAQtDC,YAAY,EAAE;EARwC,CAA1D;EAUAN,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,0BAArD,EAAiF;IAC7E;AACR;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAN4E;IAO7EC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,EAAP,GAAYd,UAAU,CAACgB,CAAD,CAAtB;IACH,CAT4E;IAU7EL,UAAU,EAAE,KAViE;IAW7EC,YAAY,EAAE;EAX+D,CAAjF;EAaAN,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,cAArD,EAAqE;IACjE;AACR;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOI,EAAd;IACH,CANgE;IAOjEN,UAAU,EAAE,KAPqD;IAQjEC,YAAY,EAAE;EARmD,CAArE;EAUAN,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,YAArD,EAAmE;IAC/D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOK,EAAd;IACH,CAvB8D;IAwB/DH,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOK,EAAP,GAAYjB,UAAU,CAACH,gBAAD,EAAmBkB,CAAnB,CAAtB;IACH,CA1B8D;IA2B/DL,UAAU,EAAE,KA3BmD;IA4B/DC,YAAY,EAAE;EA5BiD,CAAnE;EA8BA,OAAOV,mBAAP;AACH,CArEsD,CAqErDH,mCArEqD,CAAvD;;AAsEA,SAASG,mBAAT"},"metadata":{},"sourceType":"module"}