{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar TRIXIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TRIXIndicatorStrategy, _super);\n\n  function TRIXIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TRIXIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.add(\"CloseColumn\");\n    c.o(b.a.c);\n    return c;\n  };\n\n  TRIXIndicatorStrategy.prototype.a = function (a, b) {\n    var c = b.a.b(a.closeColumn, a.period);\n    var d = b.a.b(c, a.period);\n    var e = getEnumerator(b.a.b(d, a.period));\n    var f = a.indicatorColumn;\n\n    if (f.count > 0) {\n      f.item(0, 0);\n    }\n\n    var g = 1;\n    e.moveNext();\n    var h = e.current;\n\n    while (e.moveNext()) {\n      f.item(g, b.i((e.current - h) / h));\n      h = e.current;\n      g++;\n    }\n\n    return true;\n  };\n\n  TRIXIndicatorStrategy.$t = markType(TRIXIndicatorStrategy, 'TRIXIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return TRIXIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { TRIXIndicatorStrategy };","map":{"version":3,"names":["__extends","IndicatorCalculationStrategy","String_$type","markType","getEnumerator","List$1","TRIXIndicatorStrategy","_super","apply","arguments","prototype","b","a","c","add","o","closeColumn","period","d","e","f","indicatorColumn","count","item","g","moveNext","h","current","i","$t","$"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/TRIXIndicatorStrategy.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar TRIXIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TRIXIndicatorStrategy, _super);\n    function TRIXIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TRIXIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.add(\"CloseColumn\");\n        c.o(b.a.c);\n        return c;\n    };\n    TRIXIndicatorStrategy.prototype.a = function (a, b) {\n        var c = b.a.b(a.closeColumn, a.period);\n        var d = b.a.b(c, a.period);\n        var e = getEnumerator(b.a.b(d, a.period));\n        var f = a.indicatorColumn;\n        if (f.count > 0) {\n            f.item(0, 0);\n        }\n        var g = 1;\n        e.moveNext();\n        var h = e.current;\n        while (e.moveNext()) {\n            f.item(g, b.i((e.current - h) / h));\n            h = e.current;\n            g++;\n        }\n        return true;\n    };\n    TRIXIndicatorStrategy.$t = markType(TRIXIndicatorStrategy, 'TRIXIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return TRIXIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { TRIXIndicatorStrategy };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAAsD,qBAAtD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACvEP,SAAS,CAACM,qBAAD,EAAwBC,MAAxB,CAAT;;EACA,SAASD,qBAAT,GAAiC;IAC7B,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,qBAAqB,CAACI,SAAtB,CAAgCC,CAAhC,GAAoC,UAAUC,CAAV,EAAaD,CAAb,EAAgB;IAChD,IAAIE,CAAC,GAAG,IAAIR,MAAJ,CAAWH,YAAX,EAAyB,CAAzB,CAAR;IACAW,CAAC,CAACC,GAAF,CAAM,aAAN;IACAD,CAAC,CAACE,CAAF,CAAIJ,CAAC,CAACC,CAAF,CAAIC,CAAR;IACA,OAAOA,CAAP;EACH,CALD;;EAMAP,qBAAqB,CAACI,SAAtB,CAAgCE,CAAhC,GAAoC,UAAUA,CAAV,EAAaD,CAAb,EAAgB;IAChD,IAAIE,CAAC,GAAGF,CAAC,CAACC,CAAF,CAAID,CAAJ,CAAMC,CAAC,CAACI,WAAR,EAAqBJ,CAAC,CAACK,MAAvB,CAAR;IACA,IAAIC,CAAC,GAAGP,CAAC,CAACC,CAAF,CAAID,CAAJ,CAAME,CAAN,EAASD,CAAC,CAACK,MAAX,CAAR;IACA,IAAIE,CAAC,GAAGf,aAAa,CAACO,CAAC,CAACC,CAAF,CAAID,CAAJ,CAAMO,CAAN,EAASN,CAAC,CAACK,MAAX,CAAD,CAArB;IACA,IAAIG,CAAC,GAAGR,CAAC,CAACS,eAAV;;IACA,IAAID,CAAC,CAACE,KAAF,GAAU,CAAd,EAAiB;MACbF,CAAC,CAACG,IAAF,CAAO,CAAP,EAAU,CAAV;IACH;;IACD,IAAIC,CAAC,GAAG,CAAR;IACAL,CAAC,CAACM,QAAF;IACA,IAAIC,CAAC,GAAGP,CAAC,CAACQ,OAAV;;IACA,OAAOR,CAAC,CAACM,QAAF,EAAP,EAAqB;MACjBL,CAAC,CAACG,IAAF,CAAOC,CAAP,EAAUb,CAAC,CAACiB,CAAF,CAAI,CAACT,CAAC,CAACQ,OAAF,GAAYD,CAAb,IAAkBA,CAAtB,CAAV;MACAA,CAAC,GAAGP,CAAC,CAACQ,OAAN;MACAH,CAAC;IACJ;;IACD,OAAO,IAAP;EACH,CAjBD;;EAkBAlB,qBAAqB,CAACuB,EAAtB,GAA2B1B,QAAQ,CAACG,qBAAD,EAAwB,uBAAxB,EAAiDL,4BAA4B,CAAC6B,CAA9E,CAAnC;EACA,OAAOxB,qBAAP;AACH,CA/BwD,CA+BvDL,4BA/BuD,CAAzD;;AAgCA,SAASK,qBAAT"},"metadata":{},"sourceType":"module"}