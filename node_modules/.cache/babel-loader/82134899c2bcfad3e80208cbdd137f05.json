{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar SplineSeriesBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SplineSeriesBaseDescriptionMetadata, _super);\n\n  function SplineSeriesBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SplineSeriesBaseDescriptionMetadata.b = function (a) {\n    if (SplineSeriesBaseDescriptionMetadata.a == null) {\n      SplineSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SplineSeriesBaseDescriptionMetadata.c(SplineSeriesBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(SplineSeriesBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(SplineSeriesBaseDescriptionMetadata.a);\n  };\n\n  SplineSeriesBaseDescriptionMetadata.c = function (a) {\n    HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);\n    a.item(\"IsSplineShapePartOfRange\", \"Boolean\");\n    a.item(\"SplineType\", \"ExportedType:string:SplineType\");\n    a.item(\"SplineType@names\", \"Natural;Clamped\");\n  };\n\n  SplineSeriesBaseDescriptionMetadata.d = function (a) {\n    SplineSeriesBaseDescriptionMetadata.b(a);\n    a.t(\"SplineSeriesBase\", SplineSeriesBaseDescriptionMetadata.a);\n  };\n\n  SplineSeriesBaseDescriptionMetadata.$t = markType(SplineSeriesBaseDescriptionMetadata, 'SplineSeriesBaseDescriptionMetadata');\n  SplineSeriesBaseDescriptionMetadata.a = null;\n  return SplineSeriesBaseDescriptionMetadata;\n}(Base);\n\nexport { SplineSeriesBaseDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","HorizontalAnchoredCategorySeriesDescriptionMetadata","SplineSeriesBaseDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/SplineSeriesBaseDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar SplineSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SplineSeriesBaseDescriptionMetadata, _super);\n    function SplineSeriesBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SplineSeriesBaseDescriptionMetadata.b = function (a) {\n        if (SplineSeriesBaseDescriptionMetadata.a == null) {\n            SplineSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            SplineSeriesBaseDescriptionMetadata.c(SplineSeriesBaseDescriptionMetadata.a);\n        }\n        if (a.g(SplineSeriesBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(SplineSeriesBaseDescriptionMetadata.a);\n    };\n    SplineSeriesBaseDescriptionMetadata.c = function (a) {\n        HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);\n        a.item(\"IsSplineShapePartOfRange\", \"Boolean\");\n        a.item(\"SplineType\", \"ExportedType:string:SplineType\");\n        a.item(\"SplineType@names\", \"Natural;Clamped\");\n    };\n    SplineSeriesBaseDescriptionMetadata.d = function (a) {\n        SplineSeriesBaseDescriptionMetadata.b(a);\n        a.t(\"SplineSeriesBase\", SplineSeriesBaseDescriptionMetadata.a);\n    };\n    SplineSeriesBaseDescriptionMetadata.$t = markType(SplineSeriesBaseDescriptionMetadata, 'SplineSeriesBaseDescriptionMetadata');\n    SplineSeriesBaseDescriptionMetadata.a = null;\n    return SplineSeriesBaseDescriptionMetadata;\n}(Base));\nexport { SplineSeriesBaseDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mDAAT,QAAoE,uDAApE;AACA;AACA;AACA;;AACA,IAAIC,mCAAmC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACrFP,SAAS,CAACM,mCAAD,EAAsCC,MAAtC,CAAT;;EACA,SAASD,mCAAT,GAA+C;IAC3C,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,mCAAmC,CAACI,CAApC,GAAwC,UAAUC,CAAV,EAAa;IACjD,IAAIL,mCAAmC,CAACK,CAApC,IAAyC,IAA7C,EAAmD;MAC/CL,mCAAmC,CAACK,CAApC,GAAwC,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAxC;MACAI,mCAAmC,CAACM,CAApC,CAAsCN,mCAAmC,CAACK,CAA1E;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,mCAAmC,CAACK,CAAxC,CAAJ,EAAgD;MAC5C;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,mCAAmC,CAACK,CAAxC;EACH,CATD;;EAUAL,mCAAmC,CAACM,CAApC,GAAwC,UAAUD,CAAV,EAAa;IACjDN,mDAAmD,CAACO,CAApD,CAAsDD,CAAtD;IACAA,CAAC,CAACI,IAAF,CAAO,0BAAP,EAAmC,SAAnC;IACAJ,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,gCAArB;IACAJ,CAAC,CAACI,IAAF,CAAO,kBAAP,EAA2B,iBAA3B;EACH,CALD;;EAMAT,mCAAmC,CAACU,CAApC,GAAwC,UAAUL,CAAV,EAAa;IACjDL,mCAAmC,CAACI,CAApC,CAAsCC,CAAtC;IACAA,CAAC,CAACM,CAAF,CAAI,kBAAJ,EAAwBX,mCAAmC,CAACK,CAA5D;EACH,CAHD;;EAIAL,mCAAmC,CAACY,EAApC,GAAyCf,QAAQ,CAACG,mCAAD,EAAsC,qCAAtC,CAAjD;EACAA,mCAAmC,CAACK,CAApC,GAAwC,IAAxC;EACA,OAAOL,mCAAP;AACH,CA5BsE,CA4BrEL,IA5BqE,CAAvE;;AA6BA,SAASK,mCAAT"},"metadata":{},"sourceType":"module"}