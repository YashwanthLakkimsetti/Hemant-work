{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnWidthDescription } from \"./ColumnWidthDescription\";\n/**\n * @hidden\n */\n\nvar ColumnWidthDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ColumnWidthDescriptionMetadata, _super);\n\n  function ColumnWidthDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnWidthDescriptionMetadata.b = function (a) {\n    if (ColumnWidthDescriptionMetadata.a == null) {\n      ColumnWidthDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColumnWidthDescriptionMetadata.c(ColumnWidthDescriptionMetadata.a);\n    }\n\n    if (a.g(ColumnWidthDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ColumnWidthDescriptionMetadata.a);\n  };\n\n  ColumnWidthDescriptionMetadata.c = function (a) {\n    a.item(\"IsStarSized\", \"Boolean\");\n    a.item(\"Value\", \"Number:double\");\n    a.item(\"MinimumWidth\", \"Number:double\");\n  };\n\n  ColumnWidthDescriptionMetadata.d = function (a) {\n    ColumnWidthDescriptionMetadata.b(a);\n    a.u(\"ColumnWidth\", function () {\n      return new ColumnWidthDescription();\n    });\n    a.t(\"ColumnWidth\", ColumnWidthDescriptionMetadata.a);\n  };\n\n  ColumnWidthDescriptionMetadata.$t = markType(ColumnWidthDescriptionMetadata, 'ColumnWidthDescriptionMetadata');\n  ColumnWidthDescriptionMetadata.a = null;\n  return ColumnWidthDescriptionMetadata;\n}(Base);\n\nexport { ColumnWidthDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","ColumnWidthDescription","ColumnWidthDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/ColumnWidthDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnWidthDescription } from \"./ColumnWidthDescription\";\n/**\n * @hidden\n */\nvar ColumnWidthDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ColumnWidthDescriptionMetadata, _super);\n    function ColumnWidthDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnWidthDescriptionMetadata.b = function (a) {\n        if (ColumnWidthDescriptionMetadata.a == null) {\n            ColumnWidthDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ColumnWidthDescriptionMetadata.c(ColumnWidthDescriptionMetadata.a);\n        }\n        if (a.g(ColumnWidthDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ColumnWidthDescriptionMetadata.a);\n    };\n    ColumnWidthDescriptionMetadata.c = function (a) {\n        a.item(\"IsStarSized\", \"Boolean\");\n        a.item(\"Value\", \"Number:double\");\n        a.item(\"MinimumWidth\", \"Number:double\");\n    };\n    ColumnWidthDescriptionMetadata.d = function (a) {\n        ColumnWidthDescriptionMetadata.b(a);\n        a.u(\"ColumnWidth\", function () { return new ColumnWidthDescription(); });\n        a.t(\"ColumnWidth\", ColumnWidthDescriptionMetadata.a);\n    };\n    ColumnWidthDescriptionMetadata.$t = markType(ColumnWidthDescriptionMetadata, 'ColumnWidthDescriptionMetadata');\n    ColumnWidthDescriptionMetadata.a = null;\n    return ColumnWidthDescriptionMetadata;\n}(Base));\nexport { ColumnWidthDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA;AACA;AACA;;AACA,IAAIC,8BAA8B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAChFP,SAAS,CAACM,8BAAD,EAAiCC,MAAjC,CAAT;;EACA,SAASD,8BAAT,GAA0C;IACtC,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,8BAA8B,CAACI,CAA/B,GAAmC,UAAUC,CAAV,EAAa;IAC5C,IAAIL,8BAA8B,CAACK,CAA/B,IAAoC,IAAxC,EAA8C;MAC1CL,8BAA8B,CAACK,CAA/B,GAAmC,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAnC;MACAI,8BAA8B,CAACM,CAA/B,CAAiCN,8BAA8B,CAACK,CAAhE;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,8BAA8B,CAACK,CAAnC,CAAJ,EAA2C;MACvC;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,8BAA8B,CAACK,CAAnC;EACH,CATD;;EAUAL,8BAA8B,CAACM,CAA/B,GAAmC,UAAUD,CAAV,EAAa;IAC5CA,CAAC,CAACI,IAAF,CAAO,aAAP,EAAsB,SAAtB;IACAJ,CAAC,CAACI,IAAF,CAAO,OAAP,EAAgB,eAAhB;IACAJ,CAAC,CAACI,IAAF,CAAO,cAAP,EAAuB,eAAvB;EACH,CAJD;;EAKAT,8BAA8B,CAACU,CAA/B,GAAmC,UAAUL,CAAV,EAAa;IAC5CL,8BAA8B,CAACI,CAA/B,CAAiCC,CAAjC;IACAA,CAAC,CAACM,CAAF,CAAI,aAAJ,EAAmB,YAAY;MAAE,OAAO,IAAIZ,sBAAJ,EAAP;IAAsC,CAAvE;IACAM,CAAC,CAACO,CAAF,CAAI,aAAJ,EAAmBZ,8BAA8B,CAACK,CAAlD;EACH,CAJD;;EAKAL,8BAA8B,CAACa,EAA/B,GAAoChB,QAAQ,CAACG,8BAAD,EAAiC,gCAAjC,CAA5C;EACAA,8BAA8B,CAACK,CAA/B,GAAmC,IAAnC;EACA,OAAOL,8BAAP;AACH,CA5BiE,CA4BhEL,IA5BgE,CAAlE;;AA6BA,SAASK,8BAAT"},"metadata":{},"sourceType":"module"}