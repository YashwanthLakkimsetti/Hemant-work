{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { OnCollapsedEventArgsDescriptionMetadata } from \"./OnCollapsedEventArgsDescriptionMetadata\";\nimport { OnExpandedEventArgsDescriptionMetadata } from \"./OnExpandedEventArgsDescriptionMetadata\";\nimport { ExpansionPanelDescription } from \"./ExpansionPanelDescription\";\n/**\n * @hidden\n */\n\nvar ExpansionPanelDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ExpansionPanelDescriptionMetadata, _super);\n\n  function ExpansionPanelDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ExpansionPanelDescriptionMetadata.b = function (a) {\n    if (ExpansionPanelDescriptionMetadata.a == null) {\n      ExpansionPanelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ExpansionPanelDescriptionMetadata.c(ExpansionPanelDescriptionMetadata.a);\n    }\n\n    if (a.g(ExpansionPanelDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ExpansionPanelDescriptionMetadata.a);\n    OnCollapsedEventArgsDescriptionMetadata.d(a);\n    OnExpandedEventArgsDescriptionMetadata.d(a);\n  };\n\n  ExpansionPanelDescriptionMetadata.c = function (a) {\n    a.item(\"__qualifiedNameTS\", \"String:XExpansionPanel\");\n    a.item(\"Caption\", \"String\");\n    a.item(\"CaptionTextColor\", \"Brush\");\n    a.item(\"ActualCaptionTextColor\", \"Brush\");\n    a.item(\"CaptionCollapsedTextColor\", \"Brush\");\n    a.item(\"CaptionExpandedTextColor\", \"Brush\");\n    a.item(\"Description\", \"String\");\n    a.item(\"DescriptionTextColor\", \"Brush\");\n    a.item(\"ActualDescriptionTextColor\", \"Brush\");\n    a.item(\"DescriptionCollapsedTextColor\", \"Brush\");\n    a.item(\"DescriptionExpandedTextColor\", \"Brush\");\n    a.item(\"Elevation\", \"Number:int\");\n    a.item(\"ActualElevation\", \"Number:int\");\n    a.item(\"Expanded\", \"Boolean\");\n    a.item(\"HeaderBackgroundColor\", \"Brush\");\n    a.item(\"ActualHeaderBackgroundColor\", \"Brush\");\n    a.item(\"HeaderCollapsedBackgroundColor\", \"Brush\");\n    a.item(\"HeaderExpandedBackgroundColor\", \"Brush\");\n    a.item(\"ActualUmbraShadowColor\", \"Brush\");\n    a.item(\"ActualPenumbraShadowColor\", \"Brush\");\n    a.item(\"ActualAmbientShadowColor\", \"Brush\");\n    a.item(\"OnCollapsedRef\", \"EventRef::onCollapsed\");\n    a.item(\"OnExpandedRef\", \"EventRef::onExpanded\");\n  };\n\n  ExpansionPanelDescriptionMetadata.d = function (a) {\n    ExpansionPanelDescriptionMetadata.b(a);\n    a.u(\"ExpansionPanel\", function () {\n      return new ExpansionPanelDescription();\n    });\n    a.t(\"ExpansionPanel\", ExpansionPanelDescriptionMetadata.a);\n  };\n\n  ExpansionPanelDescriptionMetadata.$t = markType(ExpansionPanelDescriptionMetadata, 'ExpansionPanelDescriptionMetadata');\n  ExpansionPanelDescriptionMetadata.a = null;\n  return ExpansionPanelDescriptionMetadata;\n}(Base);\n\nexport { ExpansionPanelDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","OnCollapsedEventArgsDescriptionMetadata","OnExpandedEventArgsDescriptionMetadata","ExpansionPanelDescription","ExpansionPanelDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/ExpansionPanelDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { OnCollapsedEventArgsDescriptionMetadata } from \"./OnCollapsedEventArgsDescriptionMetadata\";\nimport { OnExpandedEventArgsDescriptionMetadata } from \"./OnExpandedEventArgsDescriptionMetadata\";\nimport { ExpansionPanelDescription } from \"./ExpansionPanelDescription\";\n/**\n * @hidden\n */\nvar ExpansionPanelDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ExpansionPanelDescriptionMetadata, _super);\n    function ExpansionPanelDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ExpansionPanelDescriptionMetadata.b = function (a) {\n        if (ExpansionPanelDescriptionMetadata.a == null) {\n            ExpansionPanelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ExpansionPanelDescriptionMetadata.c(ExpansionPanelDescriptionMetadata.a);\n        }\n        if (a.g(ExpansionPanelDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ExpansionPanelDescriptionMetadata.a);\n        OnCollapsedEventArgsDescriptionMetadata.d(a);\n        OnExpandedEventArgsDescriptionMetadata.d(a);\n    };\n    ExpansionPanelDescriptionMetadata.c = function (a) {\n        a.item(\"__qualifiedNameTS\", \"String:XExpansionPanel\");\n        a.item(\"Caption\", \"String\");\n        a.item(\"CaptionTextColor\", \"Brush\");\n        a.item(\"ActualCaptionTextColor\", \"Brush\");\n        a.item(\"CaptionCollapsedTextColor\", \"Brush\");\n        a.item(\"CaptionExpandedTextColor\", \"Brush\");\n        a.item(\"Description\", \"String\");\n        a.item(\"DescriptionTextColor\", \"Brush\");\n        a.item(\"ActualDescriptionTextColor\", \"Brush\");\n        a.item(\"DescriptionCollapsedTextColor\", \"Brush\");\n        a.item(\"DescriptionExpandedTextColor\", \"Brush\");\n        a.item(\"Elevation\", \"Number:int\");\n        a.item(\"ActualElevation\", \"Number:int\");\n        a.item(\"Expanded\", \"Boolean\");\n        a.item(\"HeaderBackgroundColor\", \"Brush\");\n        a.item(\"ActualHeaderBackgroundColor\", \"Brush\");\n        a.item(\"HeaderCollapsedBackgroundColor\", \"Brush\");\n        a.item(\"HeaderExpandedBackgroundColor\", \"Brush\");\n        a.item(\"ActualUmbraShadowColor\", \"Brush\");\n        a.item(\"ActualPenumbraShadowColor\", \"Brush\");\n        a.item(\"ActualAmbientShadowColor\", \"Brush\");\n        a.item(\"OnCollapsedRef\", \"EventRef::onCollapsed\");\n        a.item(\"OnExpandedRef\", \"EventRef::onExpanded\");\n    };\n    ExpansionPanelDescriptionMetadata.d = function (a) {\n        ExpansionPanelDescriptionMetadata.b(a);\n        a.u(\"ExpansionPanel\", function () { return new ExpansionPanelDescription(); });\n        a.t(\"ExpansionPanel\", ExpansionPanelDescriptionMetadata.a);\n    };\n    ExpansionPanelDescriptionMetadata.$t = markType(ExpansionPanelDescriptionMetadata, 'ExpansionPanelDescriptionMetadata');\n    ExpansionPanelDescriptionMetadata.a = null;\n    return ExpansionPanelDescriptionMetadata;\n}(Base));\nexport { ExpansionPanelDescriptionMetadata };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}