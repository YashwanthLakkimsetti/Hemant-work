{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, getBoxIfEnum, Type, markType } from \"./type\";\nimport { Random } from \"./Random\";\nimport { intDivide } from \"./number\";\nimport { CompareUtil } from \"./compareUtil\";\n/**\n * @hidden\n */\n\nvar ArrayExtension =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ArrayExtension, _super);\n\n  function ArrayExtension() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ArrayExtension.shuffle$1 = function ($t, a) {\n    if (a != null) {\n      var b = new Random(0);\n\n      for (var c = a.count - 1; c > 0; --c) {\n        var d = b.next1(c);\n        var e = a.item(c);\n        a.item(c, a.item(d));\n        a.item(d, e);\n      }\n    }\n  };\n\n  ArrayExtension.insertionIndex$1 = function ($t, a, b) {\n    var c = -1;\n    var d = 0;\n    var e = a.count;\n\n    while (c == -1) {\n      if (e <= d) {\n        c = d;\n      } else {\n        var f = intDivide(d + e, 2);\n\n        switch (Math.sign(CompareUtil.compareToObject(b, getBoxIfEnum($t, a.item(f))))) {\n          case -1:\n            e = f;\n            break;\n\n          case 0:\n            c = f;\n            break;\n\n          case 1:\n            d = f + 1;\n            break;\n        }\n      }\n    }\n\n    return c;\n  };\n\n  ArrayExtension.insertionIndex$11 = function ($t, a, b, c) {\n    var d = -1;\n    var e = 0;\n    var f = a.count;\n\n    while (d == -1) {\n      if (f <= e) {\n        d = e;\n      } else {\n        var g = intDivide(e + f, 2);\n\n        switch (Math.sign(b(c, a.item(g)))) {\n          case -1:\n            f = g;\n            break;\n\n          case 0:\n            d = g;\n            break;\n\n          case 1:\n            e = g + 1;\n            break;\n        }\n      }\n    }\n\n    return d;\n  };\n\n  ArrayExtension.binarySearch$11 = function ($t, a, b) {\n    var c = 0;\n    var d = a.count - 1;\n\n    while (c <= d) {\n      var e = c + (d - c >> 1);\n      var f = b(a.item(e));\n\n      if (f < 0) {\n        d = e - 1;\n      } else if (f > 0) {\n        c = e + 1;\n      } else {\n        return e;\n      }\n    }\n\n    return ~c;\n  };\n\n  ArrayExtension.binarySearch$1 = function ($t, a, b) {\n    var c = 0;\n    var d = a.count - 1;\n\n    while (c <= d) {\n      var e = c + (d - c >> 1);\n      var f = b(a.item(e));\n\n      if (f < 0) {\n        d = e - 1;\n      } else if (f > 0) {\n        c = e + 1;\n      } else {\n        return e;\n      }\n    }\n\n    return ~c;\n  };\n\n  ArrayExtension.getModulus$1 = function ($t, a, b) {\n    if (a == null) {\n      return Type.getDefaultValue($t);\n    }\n\n    if (a.count == 0) {\n      return Type.getDefaultValue($t);\n    }\n\n    return a.item(b % a.count);\n  };\n\n  ArrayExtension.$t = markType(ArrayExtension, 'ArrayExtension');\n  return ArrayExtension;\n}(Base);\n\nexport { ArrayExtension };","map":{"version":3,"names":["__extends","Base","getBoxIfEnum","Type","markType","Random","intDivide","CompareUtil","ArrayExtension","_super","apply","arguments","shuffle$1","$t","a","b","c","count","d","next1","e","item","insertionIndex$1","f","Math","sign","compareToObject","insertionIndex$11","g","binarySearch$11","binarySearch$1","getModulus$1","getDefaultValue"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/ArrayExtension.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, getBoxIfEnum, Type, markType } from \"./type\";\nimport { Random } from \"./Random\";\nimport { intDivide } from \"./number\";\nimport { CompareUtil } from \"./compareUtil\";\n/**\n * @hidden\n */\nvar ArrayExtension = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ArrayExtension, _super);\n    function ArrayExtension() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ArrayExtension.shuffle$1 = function ($t, a) {\n        if (a != null) {\n            var b = new Random(0);\n            for (var c = a.count - 1; c > 0; --c) {\n                var d = b.next1(c);\n                var e = a.item(c);\n                a.item(c, a.item(d));\n                a.item(d, e);\n            }\n        }\n    };\n    ArrayExtension.insertionIndex$1 = function ($t, a, b) {\n        var c = -1;\n        var d = 0;\n        var e = a.count;\n        while (c == -1) {\n            if (e <= d) {\n                c = d;\n            }\n            else {\n                var f = intDivide((d + e), 2);\n                switch (Math.sign(CompareUtil.compareToObject(b, getBoxIfEnum($t, a.item(f))))) {\n                    case -1:\n                        e = f;\n                        break;\n                    case 0:\n                        c = f;\n                        break;\n                    case 1:\n                        d = f + 1;\n                        break;\n                }\n            }\n        }\n        return c;\n    };\n    ArrayExtension.insertionIndex$11 = function ($t, a, b, c) {\n        var d = -1;\n        var e = 0;\n        var f = a.count;\n        while (d == -1) {\n            if (f <= e) {\n                d = e;\n            }\n            else {\n                var g = intDivide((e + f), 2);\n                switch (Math.sign(b(c, a.item(g)))) {\n                    case -1:\n                        f = g;\n                        break;\n                    case 0:\n                        d = g;\n                        break;\n                    case 1:\n                        e = g + 1;\n                        break;\n                }\n            }\n        }\n        return d;\n    };\n    ArrayExtension.binarySearch$11 = function ($t, a, b) {\n        var c = 0;\n        var d = a.count - 1;\n        while (c <= d) {\n            var e = (c + ((d - c) >> 1));\n            var f = b(a.item(e));\n            if (f < 0) {\n                d = e - 1;\n            }\n            else if (f > 0) {\n                c = e + 1;\n            }\n            else {\n                return e;\n            }\n        }\n        return ~c;\n    };\n    ArrayExtension.binarySearch$1 = function ($t, a, b) {\n        var c = 0;\n        var d = a.count - 1;\n        while (c <= d) {\n            var e = (c + ((d - c) >> 1));\n            var f = b(a.item(e));\n            if (f < 0) {\n                d = e - 1;\n            }\n            else if (f > 0) {\n                c = e + 1;\n            }\n            else {\n                return e;\n            }\n        }\n        return ~c;\n    };\n    ArrayExtension.getModulus$1 = function ($t, a, b) {\n        if (a == null) {\n            return Type.getDefaultValue($t);\n        }\n        if (a.count == 0) {\n            return Type.getDefaultValue($t);\n        }\n        return a.item(b % a.count);\n    };\n    ArrayExtension.$t = markType(ArrayExtension, 'ArrayExtension');\n    return ArrayExtension;\n}(Base));\nexport { ArrayExtension };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}