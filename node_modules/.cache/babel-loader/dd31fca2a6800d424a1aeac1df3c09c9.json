{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { BrushSelectionMode_$type } from \"./BrushSelectionMode\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { CustomPaletteBrushScale } from \"./CustomPaletteBrushScale\";\nimport { ensureEnum, brushToString } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses index-based brush selection mode.\n*/\n\nvar IgrCustomPaletteBrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrCustomPaletteBrushScale, _super);\n\n  function IgrCustomPaletteBrushScale(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCustomPaletteBrushScale.prototype.createImplementation = function () {\n    return new CustomPaletteBrushScale();\n  };\n\n  Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"brushSelectionMode\", {\n    /**\n     * Gets or sets the brush selection mode.\n    */\n    get: function get() {\n      return this.i.brushSelectionMode;\n    },\n    set: function set(v) {\n      this.i.brushSelectionMode = ensureEnum(BrushSelectionMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"isReady\", {\n    /**\n     * Checks if this scale is ready for useage with a series\n    */\n    get: function get() {\n      return this.i.isReady;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrCustomPaletteBrushScale.prototype.getBrush1 = function (index, total) {\n    var iv = this.i.getBrush1(index, total);\n    return brushToString(iv);\n  };\n\n  return IgrCustomPaletteBrushScale;\n}(IgrBrushScale);\n\nexport { IgrCustomPaletteBrushScale };","map":{"version":3,"names":["__extends","BrushSelectionMode_$type","IgrBrushScale","CustomPaletteBrushScale","ensureEnum","brushToString","IgrCustomPaletteBrushScale","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","brushSelectionMode","set","v","isReady","getBrush1","index","total","iv"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-custom-palette-brush-scale.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { BrushSelectionMode_$type } from \"./BrushSelectionMode\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { CustomPaletteBrushScale } from \"./CustomPaletteBrushScale\";\nimport { ensureEnum, brushToString } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses index-based brush selection mode.\n*/\nvar IgrCustomPaletteBrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrCustomPaletteBrushScale, _super);\n    function IgrCustomPaletteBrushScale(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCustomPaletteBrushScale.prototype.createImplementation = function () {\n        return new CustomPaletteBrushScale();\n    };\n    Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"brushSelectionMode\", {\n        /**\n         * Gets or sets the brush selection mode.\n        */\n        get: function () {\n            return this.i.brushSelectionMode;\n        },\n        set: function (v) {\n            this.i.brushSelectionMode = ensureEnum(BrushSelectionMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCustomPaletteBrushScale.prototype, \"isReady\", {\n        /**\n         * Checks if this scale is ready for useage with a series\n        */\n        get: function () {\n            return this.i.isReady;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrCustomPaletteBrushScale.prototype.getBrush1 = function (index, total) {\n        var iv = this.i.getBrush1(index, total);\n        return brushToString(iv);\n    };\n    return IgrCustomPaletteBrushScale;\n}(IgrBrushScale));\nexport { IgrCustomPaletteBrushScale };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AACA;AACA;AACA;;AACA,IAAIC,0BAA0B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC5EP,SAAS,CAACM,0BAAD,EAA6BC,MAA7B,CAAT;;EACA,SAASD,0BAAT,CAAoCE,KAApC,EAA2C;IACvC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,0BAA0B,CAACI,SAA3B,CAAqCC,oBAArC,GAA4D,YAAY;IACpE,OAAO,IAAIR,uBAAJ,EAAP;EACH,CAFD;;EAGAS,MAAM,CAACC,cAAP,CAAsBP,0BAA0B,CAACI,SAAjD,EAA4D,GAA5D,EAAiE;IAC7D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CAN4D;IAO7DC,UAAU,EAAE,KAPiD;IAQ7DC,YAAY,EAAE;EAR+C,CAAjE;EAUAL,MAAM,CAACC,cAAP,CAAsBP,0BAA0B,CAACI,SAAjD,EAA4D,oBAA5D,EAAkF;IAC9E;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,kBAAd;IACH,CAN6E;IAO9EC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,kBAAP,GAA4Bf,UAAU,CAACH,wBAAD,EAA2BoB,CAA3B,CAAtC;IACH,CAT6E;IAU9EL,UAAU,EAAE,KAVkE;IAW9EC,YAAY,EAAE;EAXgE,CAAlF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,0BAA0B,CAACI,SAAjD,EAA4D,SAA5D,EAAuE;IACnE;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOI,OAAd;IACH,CANkE;IAOnEN,UAAU,EAAE,KAPuD;IAQnEC,YAAY,EAAE;EARqD,CAAvE;;EAUAX,0BAA0B,CAACI,SAA3B,CAAqCa,SAArC,GAAiD,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;IACrE,IAAIC,EAAE,GAAG,KAAKR,CAAL,CAAOK,SAAP,CAAiBC,KAAjB,EAAwBC,KAAxB,CAAT;IACA,OAAOpB,aAAa,CAACqB,EAAD,CAApB;EACH,CAHD;;EAIA,OAAOpB,0BAAP;AACH,CA9C6D,CA8C5DJ,aA9C4D,CAA9D;;AA+CA,SAASI,0BAAT"},"metadata":{},"sourceType":"module"}