{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { FullStochasticOscillatorIndicator } from \"./FullStochasticOscillatorIndicator\";\n/**\n * Represents a IgxDataChartComponent Full Stochastic Oscillator indicator series.\n * Default required members: High, Low, Close\n*\n* The `IgrFullStochasticOscillatorIndicator` class represents a IgxDataChartComponent Full Stochastic Oscillator indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFullStochasticOscillatorIndicator\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* this.series = new IgrFullStochasticOscillatorIndicator({name: \"series\"});\n* this.series.dataSource = this.financialData;\n* this.series.xAxis = this.timeXAxis;\n* this.series.yAxis = this.numericYAxis;\n* this.series.xAxisName = \"timeXAxis\";\n* this.series.yAxisName = \"numericYAxis\";\n* this.series.highMemberPath=\"High\"\n* this.series.lowMemberPath=\"Low\"\n* this.series.closeMemberPath=\"Close\"\n* this.series.openMemberPath=\"Open\"\n* this.series.volumeMemberPath=\"Volume\"\n* ```\n*/\n\nvar IgrFullStochasticOscillatorIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrFullStochasticOscillatorIndicator, _super);\n\n  function IgrFullStochasticOscillatorIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrFullStochasticOscillatorIndicator.prototype.createImplementation = function () {\n    return new FullStochasticOscillatorIndicator();\n  };\n\n  Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current FullStochasticOscillatorIndicator object.\n     * The typical, and initial, value for FullStochasticOscillatorIndicator periods is 14.\n    *\n    * You can use the `period` property for the moving average period of the current FullStochasticOscillatorIndicator object.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFullStochasticOscillatorIndicator\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod={30} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.period = 30;\n    * ```\n    */\n    get: function get() {\n      return this.i.u1;\n    },\n    set: function set(v) {\n      this.i.u1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"smoothingPeriod\", {\n    /**\n     * Gets or sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.\n     * The typical, and initial, value for FullStochasticOscillatorIndicator SmoothingPeriod is 3.\n    *\n    * The `smoothingPeriod` property to fets/sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFullStochasticOscillatorIndicator\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tsmoothingPeriod={30} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.smoothingPeriod=30;\n    * ```\n    */\n    get: function get() {\n      return this.i.smoothingPeriod;\n    },\n    set: function set(v) {\n      this.i.smoothingPeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"triggerPeriod\", {\n    /**\n     * Gets or sets the moving average TriggerPeriod for the current FullStochasticOscillatorIndicator object.\n     * The typical, and initial, value for FullStochasticOscillatorIndicator TriggerPeriod is 3.\n    *\n    * You can use the `period` to set the current moving average period.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFullStochasticOscillatorIndicator\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttriggerPeriod={30} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.triggerPeriod = 30;\n    * ```\n    */\n    get: function get() {\n      return this.i.u3;\n    },\n    set: function set(v) {\n      this.i.u3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrFullStochasticOscillatorIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrFullStochasticOscillatorIndicator };","map":{"version":3,"names":["__extends","IgrStrategyBasedIndicator","FullStochasticOscillatorIndicator","IgrFullStochasticOscillatorIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","u1","set","v","smoothingPeriod","u3"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-full-stochastic-oscillator-indicator.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { FullStochasticOscillatorIndicator } from \"./FullStochasticOscillatorIndicator\";\n/**\n * Represents a IgxDataChartComponent Full Stochastic Oscillator indicator series.\n * Default required members: High, Low, Close\n*\n* The `IgrFullStochasticOscillatorIndicator` class represents a IgxDataChartComponent Full Stochastic Oscillator indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFullStochasticOscillatorIndicator\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* this.series = new IgrFullStochasticOscillatorIndicator({name: \"series\"});\n* this.series.dataSource = this.financialData;\n* this.series.xAxis = this.timeXAxis;\n* this.series.yAxis = this.numericYAxis;\n* this.series.xAxisName = \"timeXAxis\";\n* this.series.yAxisName = \"numericYAxis\";\n* this.series.highMemberPath=\"High\"\n* this.series.lowMemberPath=\"Low\"\n* this.series.closeMemberPath=\"Close\"\n* this.series.openMemberPath=\"Open\"\n* this.series.volumeMemberPath=\"Volume\"\n* ```\n*/\nvar IgrFullStochasticOscillatorIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrFullStochasticOscillatorIndicator, _super);\n    function IgrFullStochasticOscillatorIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrFullStochasticOscillatorIndicator.prototype.createImplementation = function () {\n        return new FullStochasticOscillatorIndicator();\n    };\n    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current FullStochasticOscillatorIndicator object.\n         * The typical, and initial, value for FullStochasticOscillatorIndicator periods is 14.\n        *\n        * You can use the `period` property for the moving average period of the current FullStochasticOscillatorIndicator object.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFullStochasticOscillatorIndicator\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod={30} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.period = 30;\n        * ```\n        */\n        get: function () {\n            return this.i.u1;\n        },\n        set: function (v) {\n            this.i.u1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"smoothingPeriod\", {\n        /**\n         * Gets or sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.\n         * The typical, and initial, value for FullStochasticOscillatorIndicator SmoothingPeriod is 3.\n        *\n        * The `smoothingPeriod` property to fets/sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFullStochasticOscillatorIndicator\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tsmoothingPeriod={30} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.smoothingPeriod=30;\n        * ```\n        */\n        get: function () {\n            return this.i.smoothingPeriod;\n        },\n        set: function (v) {\n            this.i.smoothingPeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, \"triggerPeriod\", {\n        /**\n         * Gets or sets the moving average TriggerPeriod for the current FullStochasticOscillatorIndicator object.\n         * The typical, and initial, value for FullStochasticOscillatorIndicator TriggerPeriod is 3.\n        *\n        * You can use the `period` to set the current moving average period.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFullStochasticOscillatorIndicator\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttriggerPeriod={30} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.triggerPeriod = 30;\n        * ```\n        */\n        get: function () {\n            return this.i.u3;\n        },\n        set: function (v) {\n            this.i.u3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrFullStochasticOscillatorIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrFullStochasticOscillatorIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}