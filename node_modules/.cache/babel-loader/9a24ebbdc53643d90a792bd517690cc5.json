{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TreemapNodeStyleMappingTargetType_$type } from \"./TreemapNodeStyleMappingTargetType\";\nimport { TreemapValueMappingMode_$type } from \"./TreemapValueMappingMode\";\nimport { IgrTreemapNodeStyle } from \"./igr-treemap-node-style\";\nimport { TreemapNodeStyleMapping } from \"./TreemapNodeStyleMapping\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a style to apply to a set of nodes in the treemap.\n*/\n\nvar IgrTreemapNodeStyleMapping =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrTreemapNodeStyleMapping, _super);\n\n  function IgrTreemapNodeStyleMapping(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrTreemapNodeStyleMapping.prototype.createImplementation = function () {\n    return new TreemapNodeStyleMapping();\n  };\n\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"targetType\", {\n    /**\n     * Gets or sets the unique name of the mapping.\n    */\n    get: function get() {\n      return this.i.bf;\n    },\n    set: function set(v) {\n      this.i.bf = ensureEnum(TreemapNodeStyleMappingTargetType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"name\", {\n    /**\n     * Gets or sets the unique name of the mapping.\n    */\n    get: function get() {\n      return this.i.bs;\n    },\n    set: function set(v) {\n      this.i.bs = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"minimumValue\", {\n    /**\n     * Gets or sets the minimum value to which the mapping applies.\n    */\n    get: function get() {\n      return this.i.bl;\n    },\n    set: function set(v) {\n      this.i.bl = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"maximumValue\", {\n    /**\n     * Gets or sets the maximum value to which the mapping applies.\n    */\n    get: function get() {\n      return this.i.bk;\n    },\n    set: function set(v) {\n      this.i.bk = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"value\", {\n    /**\n     * Gets or sets the value to which the mapping applies.\n    */\n    get: function get() {\n      return this.i.bn;\n    },\n    set: function set(v) {\n      this.i.bn = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"mappingMode\", {\n    /**\n     * Gets or sets the mapping mode to use to evaluate whether the mapping applies.\n    */\n    get: function get() {\n      return this.i.bh;\n    },\n    set: function set(v) {\n      this.i.bh = ensureEnum(TreemapValueMappingMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrTreemapNodeStyleMapping;\n}(IgrTreemapNodeStyle);\n\nexport { IgrTreemapNodeStyleMapping };","map":{"version":3,"names":["__extends","TreemapNodeStyleMappingTargetType_$type","TreemapValueMappingMode_$type","IgrTreemapNodeStyle","TreemapNodeStyleMapping","ensureEnum","IgrTreemapNodeStyleMapping","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","bf","set","v","bs","bl","bk","bn","bh"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-treemap-node-style-mapping.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { TreemapNodeStyleMappingTargetType_$type } from \"./TreemapNodeStyleMappingTargetType\";\nimport { TreemapValueMappingMode_$type } from \"./TreemapValueMappingMode\";\nimport { IgrTreemapNodeStyle } from \"./igr-treemap-node-style\";\nimport { TreemapNodeStyleMapping } from \"./TreemapNodeStyleMapping\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a style to apply to a set of nodes in the treemap.\n*/\nvar IgrTreemapNodeStyleMapping = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrTreemapNodeStyleMapping, _super);\n    function IgrTreemapNodeStyleMapping(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrTreemapNodeStyleMapping.prototype.createImplementation = function () {\n        return new TreemapNodeStyleMapping();\n    };\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"targetType\", {\n        /**\n         * Gets or sets the unique name of the mapping.\n        */\n        get: function () {\n            return this.i.bf;\n        },\n        set: function (v) {\n            this.i.bf = ensureEnum(TreemapNodeStyleMappingTargetType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"name\", {\n        /**\n         * Gets or sets the unique name of the mapping.\n        */\n        get: function () {\n            return this.i.bs;\n        },\n        set: function (v) {\n            this.i.bs = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"minimumValue\", {\n        /**\n         * Gets or sets the minimum value to which the mapping applies.\n        */\n        get: function () {\n            return this.i.bl;\n        },\n        set: function (v) {\n            this.i.bl = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"maximumValue\", {\n        /**\n         * Gets or sets the maximum value to which the mapping applies.\n        */\n        get: function () {\n            return this.i.bk;\n        },\n        set: function (v) {\n            this.i.bk = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"value\", {\n        /**\n         * Gets or sets the value to which the mapping applies.\n        */\n        get: function () {\n            return this.i.bn;\n        },\n        set: function (v) {\n            this.i.bn = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"mappingMode\", {\n        /**\n         * Gets or sets the mapping mode to use to evaluate whether the mapping applies.\n        */\n        get: function () {\n            return this.i.bh;\n        },\n        set: function (v) {\n            this.i.bh = ensureEnum(TreemapValueMappingMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrTreemapNodeStyleMapping;\n}(IgrTreemapNodeStyle));\nexport { IgrTreemapNodeStyleMapping };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}