{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, EnumUtil, markType } from \"./type\";\nimport { IDataSeriesAdapterRule_$type } from \"./IDataSeriesAdapterRule\";\nimport { DataSeriesIntent_$type } from \"./DataSeriesIntent\";\nimport { DataSeries } from \"./DataSeries\";\nimport { DataSeriesMemberPathHint } from \"./DataSeriesMemberPathHint\";\n/**\n * @hidden\n */\n\nvar SimpleCategorySeriesRule =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SimpleCategorySeriesRule, _super);\n\n  function SimpleCategorySeriesRule() {\n    var _this = _super.call(this) || this;\n\n    _this._priority = 0;\n    _this._useColumnThreshold = 0;\n    _this._distinctCheckThreshold = 0;\n    _this.priority = 10;\n    _this.distinctCheckThreshold = 50000;\n    _this.useColumnThreshold = 30;\n    return _this;\n  }\n\n  Object.defineProperty(SimpleCategorySeriesRule.prototype, \"priority\", {\n    get: function get() {\n      return this._priority;\n    },\n    set: function set(a) {\n      this._priority = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SimpleCategorySeriesRule.prototype, \"useColumnThreshold\", {\n    get: function get() {\n      return this._useColumnThreshold;\n    },\n    set: function set(a) {\n      this._useColumnThreshold = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SimpleCategorySeriesRule.prototype, \"distinctCheckThreshold\", {\n    get: function get() {\n      return this._distinctCheckThreshold;\n    },\n    set: function set(a) {\n      this._distinctCheckThreshold = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SimpleCategorySeriesRule.c = function (a, b) {\n    var c = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, 16));\n\n    if (c.length > 0) {\n      return c[0];\n    }\n\n    return function (d) {\n      return d != null ? d : function (e) {\n        return e != null ? e : function (f) {\n          return f != null ? f : a.analyzer.getFirstStringProperty();\n        }(a.analyzer.getFirstDistinctMonotonicNumericProperty(b));\n      }(a.analyzer.getFirstDistinctDateTimeProperty(b));\n    }(a.analyzer.getFirstDistinctStringProperty(b));\n  };\n\n  SimpleCategorySeriesRule.prototype.evaluate = function (a) {\n    var b = SimpleCategorySeriesRule.c(a, this.distinctCheckThreshold);\n    var c = null;\n    var d = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, 0));\n\n    if (d.length > 0) {\n      c = d;\n    }\n\n    if (c == null) {\n      c = a.analyzer.getAllNumericProperties();\n    }\n\n    if (c == null || c.length == 0) {\n      return;\n    }\n\n    var e = a.getCurrentDataSource().actualCount;\n\n    for (var f = 0; f < c.length; f++) {\n      if (c[f] == b && c.length > 1) {\n        continue;\n      }\n\n      var g = new Array(1);\n      g[0] = c[f];\n      var h = a.analyzer.getTitleString(null, g);\n      var i = new DataSeries();\n      var j = new DataSeriesMemberPathHint();\n      j.intent = 0;\n      j.path = c[f];\n      var k = new DataSeriesMemberPathHint();\n      k.intent = 16;\n      k.path = b;\n      i.addMemberPathHint(j);\n      i.addMemberPathHint(k);\n\n      if (e > this.useColumnThreshold) {\n        i.suggestedSeries = 0;\n      } else {\n        i.suggestedSeries = 1;\n      }\n\n      this.d(i, a);\n      i.suggestedPrimaryAxis = 0;\n      i.suggestedSecondaryAxis = 1;\n      i.name = c[f];\n\n      if (h != null) {\n        i.title = h;\n      } else {\n        i.title = c[f];\n        i.title = a.analyzer.expandCamelCasedWords(i.title);\n      }\n\n      a.addDataSeries(i, this);\n    }\n  };\n\n  SimpleCategorySeriesRule.prototype.d = function (a, b) {\n    if (!b.hasValidType(a)) {\n      a.suggestedSeries = 0;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 1;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 2;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 6;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 7;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 4;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 5;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 10;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 8;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 0;\n    }\n  };\n\n  SimpleCategorySeriesRule.$t = markType(SimpleCategorySeriesRule, 'SimpleCategorySeriesRule', Base.$, [IDataSeriesAdapterRule_$type]);\n  return SimpleCategorySeriesRule;\n}(Base);\n\nexport { SimpleCategorySeriesRule };","map":{"version":3,"names":["__extends","Base","EnumUtil","markType","IDataSeriesAdapterRule_$type","DataSeriesIntent_$type","DataSeries","DataSeriesMemberPathHint","SimpleCategorySeriesRule","_super","_this","call","_priority","_useColumnThreshold","_distinctCheckThreshold","priority","distinctCheckThreshold","useColumnThreshold","Object","defineProperty","prototype","get","set","a","enumerable","configurable","c","b","analyzer","getAllPropertiesWithIntent","getName","length","d","e","f","getFirstStringProperty","getFirstDistinctMonotonicNumericProperty","getFirstDistinctDateTimeProperty","getFirstDistinctStringProperty","evaluate","getAllNumericProperties","getCurrentDataSource","actualCount","g","Array","h","getTitleString","i","j","intent","path","k","addMemberPathHint","suggestedSeries","suggestedPrimaryAxis","suggestedSecondaryAxis","name","title","expandCamelCasedWords","addDataSeries","hasValidType","$t","$"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/SimpleCategorySeriesRule.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, EnumUtil, markType } from \"./type\";\nimport { IDataSeriesAdapterRule_$type } from \"./IDataSeriesAdapterRule\";\nimport { DataSeriesIntent_$type } from \"./DataSeriesIntent\";\nimport { DataSeries } from \"./DataSeries\";\nimport { DataSeriesMemberPathHint } from \"./DataSeriesMemberPathHint\";\n/**\n * @hidden\n */\nvar SimpleCategorySeriesRule = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SimpleCategorySeriesRule, _super);\n    function SimpleCategorySeriesRule() {\n        var _this = _super.call(this) || this;\n        _this._priority = 0;\n        _this._useColumnThreshold = 0;\n        _this._distinctCheckThreshold = 0;\n        _this.priority = 10;\n        _this.distinctCheckThreshold = 50000;\n        _this.useColumnThreshold = 30;\n        return _this;\n    }\n    Object.defineProperty(SimpleCategorySeriesRule.prototype, \"priority\", {\n        get: function () {\n            return this._priority;\n        },\n        set: function (a) {\n            this._priority = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SimpleCategorySeriesRule.prototype, \"useColumnThreshold\", {\n        get: function () {\n            return this._useColumnThreshold;\n        },\n        set: function (a) {\n            this._useColumnThreshold = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SimpleCategorySeriesRule.prototype, \"distinctCheckThreshold\", {\n        get: function () {\n            return this._distinctCheckThreshold;\n        },\n        set: function (a) {\n            this._distinctCheckThreshold = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SimpleCategorySeriesRule.c = function (a, b) {\n        var c = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, (16)));\n        if (c.length > 0) {\n            return c[0];\n        }\n        return ((function (d) { return d != null ? d : ((function (e) { return e != null ? e : ((function (f) { return f != null ? f : a.analyzer.getFirstStringProperty(); })(a.analyzer.getFirstDistinctMonotonicNumericProperty(b))); })(a.analyzer.getFirstDistinctDateTimeProperty(b))); })(a.analyzer.getFirstDistinctStringProperty(b)));\n    };\n    SimpleCategorySeriesRule.prototype.evaluate = function (a) {\n        var b = SimpleCategorySeriesRule.c(a, this.distinctCheckThreshold);\n        var c = null;\n        var d = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, (0)));\n        if (d.length > 0) {\n            c = d;\n        }\n        if (c == null) {\n            c = a.analyzer.getAllNumericProperties();\n        }\n        if (c == null || c.length == 0) {\n            return;\n        }\n        var e = a.getCurrentDataSource().actualCount;\n        for (var f = 0; f < c.length; f++) {\n            if (c[f] == b && c.length > 1) {\n                continue;\n            }\n            var g = new Array(1);\n            g[0] = c[f];\n            var h = a.analyzer.getTitleString(null, g);\n            var i = new DataSeries();\n            var j = new DataSeriesMemberPathHint();\n            j.intent = 0;\n            j.path = c[f];\n            var k = new DataSeriesMemberPathHint();\n            k.intent = 16;\n            k.path = b;\n            i.addMemberPathHint(j);\n            i.addMemberPathHint(k);\n            if (e > this.useColumnThreshold) {\n                i.suggestedSeries = 0;\n            }\n            else {\n                i.suggestedSeries = 1;\n            }\n            this.d(i, a);\n            i.suggestedPrimaryAxis = 0;\n            i.suggestedSecondaryAxis = 1;\n            i.name = c[f];\n            if (h != null) {\n                i.title = h;\n            }\n            else {\n                i.title = c[f];\n                i.title = a.analyzer.expandCamelCasedWords(i.title);\n            }\n            a.addDataSeries(i, this);\n        }\n    };\n    SimpleCategorySeriesRule.prototype.d = function (a, b) {\n        if (!b.hasValidType(a)) {\n            a.suggestedSeries = 0;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 1;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 2;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 6;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 7;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 4;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 5;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 10;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 8;\n            if (b.hasValidType(a)) {\n                return;\n            }\n            a.suggestedSeries = 0;\n        }\n    };\n    SimpleCategorySeriesRule.$t = markType(SimpleCategorySeriesRule, 'SimpleCategorySeriesRule', Base.$, [IDataSeriesAdapterRule_$type]);\n    return SimpleCategorySeriesRule;\n}(Base));\nexport { SimpleCategorySeriesRule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}