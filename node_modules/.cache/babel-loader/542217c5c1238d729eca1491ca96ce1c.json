{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StrategyBasedIndicatorDescriptionMetadata } from \"./StrategyBasedIndicatorDescriptionMetadata\";\nimport { WilliamsPercentRIndicatorDescription } from \"./WilliamsPercentRIndicatorDescription\";\n/**\n * @hidden\n */\n\nvar WilliamsPercentRIndicatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(WilliamsPercentRIndicatorDescriptionMetadata, _super);\n\n  function WilliamsPercentRIndicatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WilliamsPercentRIndicatorDescriptionMetadata.b = function (a) {\n    if (WilliamsPercentRIndicatorDescriptionMetadata.a == null) {\n      WilliamsPercentRIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      WilliamsPercentRIndicatorDescriptionMetadata.c(WilliamsPercentRIndicatorDescriptionMetadata.a);\n    }\n\n    if (a.g(WilliamsPercentRIndicatorDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(WilliamsPercentRIndicatorDescriptionMetadata.a);\n  };\n\n  WilliamsPercentRIndicatorDescriptionMetadata.c = function (a) {\n    StrategyBasedIndicatorDescriptionMetadata.c(a);\n    a.item(\"Period\", \"Number:int\");\n  };\n\n  WilliamsPercentRIndicatorDescriptionMetadata.d = function (a) {\n    WilliamsPercentRIndicatorDescriptionMetadata.b(a);\n    a.u(\"WilliamsPercentRIndicator\", function () {\n      return new WilliamsPercentRIndicatorDescription();\n    });\n    a.t(\"WilliamsPercentRIndicator\", WilliamsPercentRIndicatorDescriptionMetadata.a);\n  };\n\n  WilliamsPercentRIndicatorDescriptionMetadata.$t = markType(WilliamsPercentRIndicatorDescriptionMetadata, 'WilliamsPercentRIndicatorDescriptionMetadata');\n  WilliamsPercentRIndicatorDescriptionMetadata.a = null;\n  return WilliamsPercentRIndicatorDescriptionMetadata;\n}(Base);\n\nexport { WilliamsPercentRIndicatorDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","StrategyBasedIndicatorDescriptionMetadata","WilliamsPercentRIndicatorDescription","WilliamsPercentRIndicatorDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/WilliamsPercentRIndicatorDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StrategyBasedIndicatorDescriptionMetadata } from \"./StrategyBasedIndicatorDescriptionMetadata\";\nimport { WilliamsPercentRIndicatorDescription } from \"./WilliamsPercentRIndicatorDescription\";\n/**\n * @hidden\n */\nvar WilliamsPercentRIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(WilliamsPercentRIndicatorDescriptionMetadata, _super);\n    function WilliamsPercentRIndicatorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WilliamsPercentRIndicatorDescriptionMetadata.b = function (a) {\n        if (WilliamsPercentRIndicatorDescriptionMetadata.a == null) {\n            WilliamsPercentRIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            WilliamsPercentRIndicatorDescriptionMetadata.c(WilliamsPercentRIndicatorDescriptionMetadata.a);\n        }\n        if (a.g(WilliamsPercentRIndicatorDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(WilliamsPercentRIndicatorDescriptionMetadata.a);\n    };\n    WilliamsPercentRIndicatorDescriptionMetadata.c = function (a) {\n        StrategyBasedIndicatorDescriptionMetadata.c(a);\n        a.item(\"Period\", \"Number:int\");\n    };\n    WilliamsPercentRIndicatorDescriptionMetadata.d = function (a) {\n        WilliamsPercentRIndicatorDescriptionMetadata.b(a);\n        a.u(\"WilliamsPercentRIndicator\", function () { return new WilliamsPercentRIndicatorDescription(); });\n        a.t(\"WilliamsPercentRIndicator\", WilliamsPercentRIndicatorDescriptionMetadata.a);\n    };\n    WilliamsPercentRIndicatorDescriptionMetadata.$t = markType(WilliamsPercentRIndicatorDescriptionMetadata, 'WilliamsPercentRIndicatorDescriptionMetadata');\n    WilliamsPercentRIndicatorDescriptionMetadata.a = null;\n    return WilliamsPercentRIndicatorDescriptionMetadata;\n}(Base));\nexport { WilliamsPercentRIndicatorDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,yCAAT,QAA0D,6CAA1D;AACA,SAASC,oCAAT,QAAqD,wCAArD;AACA;AACA;AACA;;AACA,IAAIC,4CAA4C;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC9FR,SAAS,CAACO,4CAAD,EAA+CC,MAA/C,CAAT;;EACA,SAASD,4CAAT,GAAwD;IACpD,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,4CAA4C,CAACI,CAA7C,GAAiD,UAAUC,CAAV,EAAa;IAC1D,IAAIL,4CAA4C,CAACK,CAA7C,IAAkD,IAAtD,EAA4D;MACxDL,4CAA4C,CAACK,CAA7C,GAAiD,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAjD;MACAK,4CAA4C,CAACM,CAA7C,CAA+CN,4CAA4C,CAACK,CAA5F;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,4CAA4C,CAACK,CAAjD,CAAJ,EAAyD;MACrD;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,4CAA4C,CAACK,CAAjD;EACH,CATD;;EAUAL,4CAA4C,CAACM,CAA7C,GAAiD,UAAUD,CAAV,EAAa;IAC1DP,yCAAyC,CAACQ,CAA1C,CAA4CD,CAA5C;IACAA,CAAC,CAACI,IAAF,CAAO,QAAP,EAAiB,YAAjB;EACH,CAHD;;EAIAT,4CAA4C,CAACU,CAA7C,GAAiD,UAAUL,CAAV,EAAa;IAC1DL,4CAA4C,CAACI,CAA7C,CAA+CC,CAA/C;IACAA,CAAC,CAACM,CAAF,CAAI,2BAAJ,EAAiC,YAAY;MAAE,OAAO,IAAIZ,oCAAJ,EAAP;IAAoD,CAAnG;IACAM,CAAC,CAACO,CAAF,CAAI,2BAAJ,EAAiCZ,4CAA4C,CAACK,CAA9E;EACH,CAJD;;EAKAL,4CAA4C,CAACa,EAA7C,GAAkDjB,QAAQ,CAACI,4CAAD,EAA+C,8CAA/C,CAA1D;EACAA,4CAA4C,CAACK,CAA7C,GAAiD,IAAjD;EACA,OAAOL,4CAAP;AACH,CA3B+E,CA2B9EN,IA3B8E,CAAhF;;AA4BA,SAASM,4CAAT"},"metadata":{},"sourceType":"module"}