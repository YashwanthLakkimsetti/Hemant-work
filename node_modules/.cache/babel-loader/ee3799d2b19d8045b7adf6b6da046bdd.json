{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrAnchoredRadialSeries } from \"./igr-anchored-radial-series\";\nimport { RadialColumnSeries } from \"./RadialColumnSeries\";\n/**\n * Represents a IgxDataChartComponent radial column series.\n * Compare values across categories by using radial rectangles.\n*/\n\nvar IgrRadialColumnSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrRadialColumnSeries, _super);\n\n  function IgrRadialColumnSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrRadialColumnSeries.prototype.createImplementation = function () {\n    return new RadialColumnSeries();\n  };\n\n  Object.defineProperty(IgrRadialColumnSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialColumnSeries.prototype, \"isColumn\", {\n    /**\n     * Gets whether the current series shows a column shape.\n    */\n    get: function get() {\n      return this.i.dh;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialColumnSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function get() {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialColumnSeries.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function get() {\n      return this.i.t7;\n    },\n    set: function set(v) {\n      this.i.t7 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialColumnSeries.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function get() {\n      return this.i.t8;\n    },\n    set: function set(v) {\n      this.i.t8 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * When overridden in a derived class, is invoked whenever application code or internal processes\n   * call ApplyTemplate.\n  \r\n  */\n\n  IgrRadialColumnSeries.prototype.onApplyTemplate = function () {\n    this.i.ac();\n  };\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  */\n\n\n  IgrRadialColumnSeries.prototype.getItemSpan = function () {\n    var iv = this.i.ga();\n    return iv;\n  };\n\n  return IgrRadialColumnSeries;\n}(IgrAnchoredRadialSeries);\n\nexport { IgrRadialColumnSeries };","map":{"version":3,"names":["__extends","IgrAnchoredRadialSeries","RadialColumnSeries","IgrRadialColumnSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","dh","d2","t7","set","v","t8","onApplyTemplate","ac","getItemSpan","iv","ga"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-radial-column-series.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrAnchoredRadialSeries } from \"./igr-anchored-radial-series\";\nimport { RadialColumnSeries } from \"./RadialColumnSeries\";\n/**\n * Represents a IgxDataChartComponent radial column series.\n * Compare values across categories by using radial rectangles.\n*/\nvar IgrRadialColumnSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrRadialColumnSeries, _super);\n    function IgrRadialColumnSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrRadialColumnSeries.prototype.createImplementation = function () {\n        return new RadialColumnSeries();\n    };\n    Object.defineProperty(IgrRadialColumnSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRadialColumnSeries.prototype, \"isColumn\", {\n        /**\n         * Gets whether the current series shows a column shape.\n        */\n        get: function () {\n            return this.i.dh;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRadialColumnSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRadialColumnSeries.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.t7;\n        },\n        set: function (v) {\n            this.i.t7 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRadialColumnSeries.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.t8;\n        },\n        set: function (v) {\n            this.i.t8 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * When overridden in a derived class, is invoked whenever application code or internal processes\n     * call ApplyTemplate.\n    \r\n    */\n    IgrRadialColumnSeries.prototype.onApplyTemplate = function () {\n        this.i.ac();\n    };\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    */\n    IgrRadialColumnSeries.prototype.getItemSpan = function () {\n        var iv = this.i.ga();\n        return (iv);\n    };\n    return IgrRadialColumnSeries;\n}(IgrAnchoredRadialSeries));\nexport { IgrRadialColumnSeries };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACvEJ,SAAS,CAACG,qBAAD,EAAwBC,MAAxB,CAAT;;EACA,SAASD,qBAAT,CAA+BE,KAA/B,EAAsC;IAClC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,qBAAqB,CAACI,SAAtB,CAAgCC,oBAAhC,GAAuD,YAAY;IAC/D,OAAO,IAAIN,kBAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,qBAAqB,CAACI,SAA5C,EAAuD,GAAvD,EAA4D;IACxD;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANuD;IAOxDC,UAAU,EAAE,KAP4C;IAQxDC,YAAY,EAAE;EAR0C,CAA5D;EAUAL,MAAM,CAACC,cAAP,CAAsBP,qBAAqB,CAACI,SAA5C,EAAuD,UAAvD,EAAmE;IAC/D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CAN8D;IAO/DH,UAAU,EAAE,KAPmD;IAQ/DC,YAAY,EAAE;EARiD,CAAnE;EAUAL,MAAM,CAACC,cAAP,CAAsBP,qBAAqB,CAACI,SAA5C,EAAuD,8BAAvD,EAAuF;IACnF;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOE,EAAd;IACH,CANkF;IAOnFJ,UAAU,EAAE,KAPuE;IAQnFC,YAAY,EAAE;EARqE,CAAvF;EAUAL,MAAM,CAACC,cAAP,CAAsBP,qBAAqB,CAACI,SAA5C,EAAuD,SAAvD,EAAkE;IAC9D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOG,EAAd;IACH,CAN6D;IAO9DC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKL,CAAL,CAAOG,EAAP,GAAY,CAACE,CAAb;IACH,CAT6D;IAU9DP,UAAU,EAAE,KAVkD;IAW9DC,YAAY,EAAE;EAXgD,CAAlE;EAaAL,MAAM,CAACC,cAAP,CAAsBP,qBAAqB,CAACI,SAA5C,EAAuD,SAAvD,EAAkE;IAC9D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOM,EAAd;IACH,CAN6D;IAO9DF,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKL,CAAL,CAAOM,EAAP,GAAY,CAACD,CAAb;IACH,CAT6D;IAU9DP,UAAU,EAAE,KAVkD;IAW9DC,YAAY,EAAE;EAXgD,CAAlE;EAaA;AACJ;AACA;AACA;AACA;;EACIX,qBAAqB,CAACI,SAAtB,CAAgCe,eAAhC,GAAkD,YAAY;IAC1D,KAAKP,CAAL,CAAOQ,EAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;;;EACIpB,qBAAqB,CAACI,SAAtB,CAAgCiB,WAAhC,GAA8C,YAAY;IACtD,IAAIC,EAAE,GAAG,KAAKV,CAAL,CAAOW,EAAP,EAAT;IACA,OAAQD,EAAR;EACH,CAHD;;EAIA,OAAOtB,qBAAP;AACH,CAjFwD,CAiFvDF,uBAjFuD,CAAzD;;AAkFA,SAASE,qBAAT"},"metadata":{},"sourceType":"module"}