{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { FormatException } from \"./type\";\nimport { dateMinValue } from \"./date\";\nimport { truncate } from \"./number\";\n\nvar ConvertUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function ConvertUtil() {}\n\n  ConvertUtil.toBoolean = function (v, provider) {\n    if (v.toBoolean) {\n      return v.toBoolean(provider);\n    }\n\n    if (typeof v === 'string' || v instanceof String) {\n      if (v.toLowerCase().trim() == \"true\") {\n        return true;\n      }\n\n      return false;\n    }\n\n    return !!v;\n  };\n\n  ConvertUtil.toString1 = function (v, provider) {\n    if (v.toString1) {\n      return v.toString1(provider);\n    }\n\n    if (typeof v === 'string' || v instanceof String) {\n      return v;\n    }\n\n    return v.toString();\n  };\n\n  ConvertUtil.toChar = function (v, provider) {\n    if (v.toChar) {\n      return v.toChar(provider);\n    }\n\n    if (typeof v === 'string' || v instanceof String) {\n      return v[0];\n    }\n\n    return String.fromCharCode(+v);\n  };\n\n  ConvertUtil.toDateTime = function (v, provider) {\n    if (v.toDateTime) {\n      return v.toDateTime(provider);\n    }\n\n    if (v == null) {\n      return dateMinValue();\n    }\n\n    var str = v.toString();\n\n    if (/^\\s*([0-9]{1,4}\\s*((\\s+[ap]m?)|(((:\\s*[0-9]{1,2}\\s*){1,2}(\\.\\s*[0-9]+)?)(\\s+[ap]m?)?)))\\s*$/i.test(str)) {\n      // The string can be a time string only, in which case we should return today at that time.\n      str = new Date().toDateString() + \" \" + str;\n    }\n\n    var dt = new Date(Date.parse(str));\n    if (isNaN(+dt)) throw new FormatException(0, \"\");\n    return dt;\n  };\n\n  ConvertUtil.convertToNumber = function (meth, v, minValue, maxValue, trunc, provider, throwOnNaN) {\n    if (v[meth]) {\n      return v[meth](provider);\n    }\n\n    var numberVal = 0;\n\n    if (typeof v === 'string' || v instanceof String) {\n      numberVal = parseFloat(v);\n\n      if (throwOnNaN === true && isNaN(numberVal)) {\n        throw new FormatException(0, \"The string cannot be converted to a number\");\n      }\n    } else {\n      numberVal = +v;\n    }\n\n    if (numberVal < minValue) {\n      numberVal = minValue;\n    }\n\n    if (numberVal > maxValue) {\n      numberVal = maxValue;\n    }\n\n    if (trunc) {\n      numberVal = truncate(numberVal);\n    }\n\n    return numberVal;\n  };\n\n  ConvertUtil.toByte = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toByte\", v, 0, 255, true, provider, true);\n  };\n\n  ConvertUtil.toDecimal = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toDecimal\", v, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, false, provider, true);\n  };\n\n  ConvertUtil.toDouble = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toDouble\", v, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, false, provider);\n  };\n\n  ConvertUtil.toInt16 = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toInt16\", v, -32768, 32767, true, provider, true);\n  };\n\n  ConvertUtil.toInt32 = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toInt32\", v, -2147483648, 2147483647, true, provider, true);\n  };\n\n  ConvertUtil.toInt64 = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toInt64\", v, -9223372036854775808, 9223372036854775807, true, provider, true);\n  };\n\n  ConvertUtil.toSByte = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toSByte\", v, -128, 127, true, provider, true);\n  };\n\n  ConvertUtil.toUInt16 = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toUInt16\", v, 0, 65535, true, provider, true);\n  };\n\n  ConvertUtil.toUInt32 = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toUInt32\", v, 0, 4294967295, true, provider, true);\n  };\n\n  ConvertUtil.toUInt64 = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toUInt64\", v, 0, 18446744073709551615, true, provider, true);\n  };\n\n  ConvertUtil.toSingle = function (v, provider) {\n    return ConvertUtil.convertToNumber(\"toSingle\", v, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, false, provider);\n  };\n\n  return ConvertUtil;\n}();\n\nexport { ConvertUtil };","map":{"version":3,"names":["FormatException","dateMinValue","truncate","ConvertUtil","toBoolean","v","provider","String","toLowerCase","trim","toString1","toString","toChar","fromCharCode","toDateTime","str","test","Date","toDateString","dt","parse","isNaN","convertToNumber","meth","minValue","maxValue","trunc","throwOnNaN","numberVal","parseFloat","toByte","toDecimal","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","toDouble","toInt16","toInt32","toInt64","toSByte","toUInt16","toUInt32","toUInt64","toSingle"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/convertUtil.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { FormatException } from \"./type\";\nimport { dateMinValue } from \"./date\";\nimport { truncate } from \"./number\";\nvar ConvertUtil = /** @class */ /*@__PURE__*/ (function () {\n    function ConvertUtil() {\n    }\n    ConvertUtil.toBoolean = function (v, provider) {\n        if (v.toBoolean) {\n            return v.toBoolean(provider);\n        }\n        if (typeof v === 'string' || v instanceof String) {\n            if (v.toLowerCase().trim() == \"true\") {\n                return true;\n            }\n            return false;\n        }\n        return !!v;\n    };\n    ConvertUtil.toString1 = function (v, provider) {\n        if (v.toString1) {\n            return v.toString1(provider);\n        }\n        if (typeof v === 'string' || v instanceof String) {\n            return v;\n        }\n        return v.toString();\n    };\n    ConvertUtil.toChar = function (v, provider) {\n        if (v.toChar) {\n            return v.toChar(provider);\n        }\n        if (typeof v === 'string' || v instanceof String) {\n            return v[0];\n        }\n        return String.fromCharCode(+v);\n    };\n    ConvertUtil.toDateTime = function (v, provider) {\n        if (v.toDateTime) {\n            return v.toDateTime(provider);\n        }\n        if (v == null) {\n            return dateMinValue();\n        }\n        var str = v.toString();\n        if (/^\\s*([0-9]{1,4}\\s*((\\s+[ap]m?)|(((:\\s*[0-9]{1,2}\\s*){1,2}(\\.\\s*[0-9]+)?)(\\s+[ap]m?)?)))\\s*$/i.test(str)) {\n            // The string can be a time string only, in which case we should return today at that time.\n            str = new Date().toDateString() + \" \" + str;\n        }\n        var dt = new Date(Date.parse(str));\n        if (isNaN(+dt))\n            throw new FormatException(0, \"\");\n        return dt;\n    };\n    ConvertUtil.convertToNumber = function (meth, v, minValue, maxValue, trunc, provider, throwOnNaN) {\n        if (v[meth]) {\n            return v[meth](provider);\n        }\n        var numberVal = 0;\n        if (typeof v === 'string' || v instanceof String) {\n            numberVal = parseFloat(v);\n            if (throwOnNaN === true && isNaN(numberVal)) {\n                throw new FormatException(0, \"The string cannot be converted to a number\");\n            }\n        }\n        else {\n            numberVal = +v;\n        }\n        if (numberVal < minValue) {\n            numberVal = minValue;\n        }\n        if (numberVal > maxValue) {\n            numberVal = maxValue;\n        }\n        if (trunc) {\n            numberVal = truncate(numberVal);\n        }\n        return numberVal;\n    };\n    ConvertUtil.toByte = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toByte\", v, 0, 255, true, provider, true);\n    };\n    ConvertUtil.toDecimal = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toDecimal\", v, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, false, provider, true);\n    };\n    ConvertUtil.toDouble = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toDouble\", v, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, false, provider);\n    };\n    ConvertUtil.toInt16 = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toInt16\", v, -32768, 32767, true, provider, true);\n    };\n    ConvertUtil.toInt32 = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toInt32\", v, -2147483648, 2147483647, true, provider, true);\n    };\n    ConvertUtil.toInt64 = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toInt64\", v, -9223372036854775808, 9223372036854775807, true, provider, true);\n    };\n    ConvertUtil.toSByte = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toSByte\", v, -128, 127, true, provider, true);\n    };\n    ConvertUtil.toUInt16 = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toUInt16\", v, 0, 65535, true, provider, true);\n    };\n    ConvertUtil.toUInt32 = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toUInt32\", v, 0, 4294967295, true, provider, true);\n    };\n    ConvertUtil.toUInt64 = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toUInt64\", v, 0, 18446744073709551615, true, provider, true);\n    };\n    ConvertUtil.toSingle = function (v, provider) {\n        return ConvertUtil.convertToNumber(\"toSingle\", v, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, false, provider);\n    };\n    return ConvertUtil;\n}());\nexport { ConvertUtil };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}