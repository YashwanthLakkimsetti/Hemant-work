{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __read, __spreadArray } from \"tslib\";\nimport { CultureInfo } from \"./culture\";\nimport { stringCompareTo, stringEscapeRegExp } from \"./string\";\nimport { intToString1, numberToString2 } from \"./numberExtended\";\nexport function startsWith1(target, s, comparisonType) {\n  if (target.length < s.length) {\n    return false;\n  }\n\n  return stringCompare1(target.slice(0, s.length), s, comparisonType || 0) === 0;\n}\n;\nexport function endsWith1(target, s, comparisonType) {\n  if (target.length < s.length) {\n    return false;\n  }\n\n  return stringCompare1(target.slice(-s.length), s, comparisonType || 0) === 0;\n}\n;\nexport function isLower(target) {\n  return target.toLowerCase() === target;\n}\nexport function isLetterOrDigit(target) {\n  var charCode = target.charCodeAt(0); // \"a\" <= c && c <= \"z\"\n\n  if (97 <= charCode && charCode <= 122) {\n    return true;\n  } // \"A\" <= c && c <= \"Z\"\n\n\n  if (65 <= charCode && charCode <= 90) {\n    return true;\n  } // \"0\" <= c && c <= \"9\"\n\n\n  if (48 <= charCode && charCode <= 57) {\n    return true;\n  }\n\n  if (charCode <= 0x7F) {\n    return false;\n  }\n\n  return unicode_hack_impl(\"(\\\\p{L}|\\\\p{Nd})\").test(target); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function isLetter(c) {\n  var charCode = c.charCodeAt(0); // \"a\" <= c && c <= \"z\"\n\n  if (97 <= charCode && charCode <= 122) {\n    return true;\n  } // \"A\" <= c && c <= \"Z\"\n\n\n  if (65 <= charCode && charCode <= 90) {\n    return true;\n  }\n\n  if (charCode <= 0x7F) {\n    return false;\n  }\n\n  return unicode_hack_impl(\"\\\\p{L}\").test(c); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function isDigit1(c, index) {\n  return isDigit(c[index]);\n}\nexport function isDigit(c) {\n  var charCode = c.charCodeAt(0); // \"0\" <= c && c <= \"9\"\n\n  if (48 <= charCode && charCode <= 57) {\n    return true;\n  }\n\n  if (charCode <= 0x7F) {\n    return false;\n  }\n\n  return unicode_hack_impl(\"\\\\p{Nd}\").test(c); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function isNumber(c) {\n  var charCode = c.charCodeAt(0); // \"0\" <= c && c <= \"9\"\n\n  if (48 <= charCode && charCode <= 57) {\n    return true;\n  }\n\n  if (charCode <= 0x7F) {\n    return false;\n  }\n\n  return unicode_hack_impl(\"\\\\p{N}\").test(c); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function padLeft(target, len, c) {\n  var s = target;\n  c = c || \" \";\n\n  while (s.length < len) {\n    s = c + s;\n  }\n\n  return s;\n}\nexport function reverse(target) {\n  /* Inverts the order of the characters in a string.\n      returnType=\"string\" Returns a new inverted string.\n  */\n  var s = \"\";\n\n  for (var i = target.length - 1; i >= 0; i--) {\n    s += target[i];\n  }\n\n  return s;\n}\n;\nexport function padRight(target, len, c) {\n  var s = target;\n  c = c || \" \";\n\n  while (s.length < len) {\n    s += c;\n  }\n\n  return s;\n}\n;\nexport function indexOfAny(target, chars) {\n  var s = target.toString();\n\n  for (var i = 0; i < s.length; i++) {\n    if (chars.indexOf(s[i]) > -1) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function lastIndexOfAny(target, chars) {\n  var s = target.toString();\n\n  for (var i = s.length - 1; i >= 0; i--) {\n    if (chars.indexOf(s[i]) > -1) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function stringFormat(format) {\n  var rest = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    rest[_i - 1] = arguments[_i];\n  }\n\n  return stringFormat1.apply(void 0, __spreadArray([format], __read(rest), false));\n}\n;\nexport function stringFormat1(format) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  return stringFormat2.apply(void 0, __spreadArray([CultureInfo.currentCulture, format], __read(args), false));\n}\n;\nexport function stringFormat2(provider, format) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  } // TODO: what is going on with provider here??\n  // TODO: Use the provider somehow\n\n\n  return format.replace(/{(\\d+)(?::)?([^}]*)?}/g, function (match, number, format) {\n    var arg = args[number];\n\n    if (arg === void 0) {\n      return match;\n    }\n\n    if (arg === null) {\n      return \"\";\n    }\n\n    if (format) {\n      if (format[0] === \"X\") {\n        return intToString1(arg, format, provider);\n      } else {\n        return numberToString2(arg, format, provider);\n      }\n    }\n\n    return arg;\n  });\n}\n;\nexport function stringCompare1(strA, strB, comparisonType) {\n  if (!strA) {\n    return !strB ? 0 : -1;\n  } else if (!strB) {\n    return 1;\n  } // TODO: Make sure this is right\n\n\n  switch (comparisonType) {\n    case 0\n    /* CurrentCulture */\n    :\n      return CultureInfo.currentCulture.compareInfo.compare4(strA, strB);\n\n    case 1\n    /* CurrentCultureIgnoreCase */\n    :\n      return CultureInfo.currentCulture.compareInfo.compare4(strA.toLowerCase(), strB.toLowerCase());\n\n    case 2\n    /* InvariantCulture */\n    :\n    case 4\n    /* Ordinal */\n    :\n      return stringCompareTo(strA, strB);\n\n    case 3\n    /* InvariantCultureIgnoreCase */\n    :\n    case 5\n    /* OrdinalIgnoreCase */\n    :\n      return stringCompareTo(strA.toLowerCase(), strB.toLowerCase());\n\n    default:\n      break;\n  }\n\n  return 0;\n}\n;\nexport function stringCompare2(strA, strB, culture, options) {\n  return culture.compareInfo.compare5(strA, strB, options);\n}\n;\nexport function stringCompare3(strA, indexA, strB, indexB, length) {\n  var v1 = strA.substr(indexA, length);\n  var v2 = strB.substr(indexB, length);\n  return stringCompare1(v1, v2, 0\n  /* CurrentCulture */\n  );\n}\n;\nexport function stringCompareOrdinal(strA, indexA, strB, indexB, length) {\n  var v1 = strA.substr(indexA, length);\n  var v2 = strB.substr(indexB, length);\n  return stringCompare1(v1, v2, 4\n  /* Ordinal */\n  );\n}\n;\nexport function stringEquals1(strA, strB, comparisonType) {\n  return stringCompare1(strA, strB, comparisonType) == 0;\n}\n;\nexport function stringInsert(str, index, value) {\n  return str.substr(0, index) + value + str.substr(index);\n}\n; // https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n\nexport function b64toUint8Array(b64Data, nBlocksSize) {\n  /*jslint bitwise: true */\n  function b64ToUint6(nChr) {\n    return nChr > 64 && nChr < 91 ? nChr - 65 : nChr > 96 && nChr < 123 ? nChr - 71 : nChr > 47 && nChr < 58 ? nChr + 4 : nChr === 43 ? 62 : nChr === 47 ? 63 : 0;\n  }\n\n  var sB64Enc = b64Data.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"),\n      nInLen = sB64Enc.length,\n      nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2,\n      taBytes;\n\n  if (typeof window.Uint8Array === \"function\") {\n    taBytes = new Uint8Array(nOutLen);\n  } else {\n    taBytes = new Array(nOutLen);\n  }\n\n  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n    nMod4 = nInIdx & 3;\n    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\n      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n      }\n\n      nUint24 = 0;\n    }\n  }\n\n  return taBytes;\n}\n; // https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n\nexport function uint8ArraytoB64(aBytes) {\n  /*jslint bitwise: true */\n  function uint6ToB64(nUint6) {\n    return nUint6 < 26 ? nUint6 + 65 : nUint6 < 52 ? nUint6 + 71 : nUint6 < 62 ? nUint6 - 4 : nUint6 === 62 ? 43 : nUint6 === 63 ? 47 : 65;\n  }\n\n  var nMod3 = 2,\n      sB64Enc = \"\";\n\n  for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n    nMod3 = nIdx % 3;\n\n    if (nIdx > 0 && nIdx * 4 / 3 % 76 === 0) {\n      sB64Enc += \"\\r\\n\";\n    }\n\n    nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n\n    if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n      sB64Enc += String.fromCharCode(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));\n      nUint24 = 0;\n    }\n  }\n\n  return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? \"\" : nMod3 === 1 ? \"=\" : \"==\");\n}\nexport function stringSplit(value, separators, options) {\n  var r = \"\",\n      i;\n\n  for (i = 0; i < separators.length; i++) {\n    if (i !== 0) {\n      r += \"|\";\n    }\n\n    r += stringEscapeRegExp(separators[i]);\n  }\n\n  var result = value.split(new RegExp(r));\n\n  for (i = result.length - 1; i >= 0; i--) {\n    /*jslint bitwise: true */\n    if (result[i].length === 0 && options & 1\n    /* RemoveEmptyEntries */\n    || separators.indexOf(result[i]) > -1) {\n      result.splice(i, 1);\n    }\n  }\n\n  return result;\n}\n;\n/*! unicode_hack.js\nCopyright (C) 2010-2012,2014  Marcelo Gibson de Castro GonÃ§alves. All rights reserved.\n\r\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout any warranty.\n*/\n// jscs:disable\n\nvar unicodeCategories = {\n  Cn: \"[\\u0378\\u0379\\u037F-\\u0383\\u038B\\u038D\\u03A2\\u0528-\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B-\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u0604\\u0605\\u061C\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u08FF\\u0978\\u0980\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0\\u0AF2-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0C00\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C34\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5A-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C81\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D01\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5F\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EDE-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6-\\u10CF\\u10FD-\\u10FF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F5-\\u13FF\\u169D-\\u169F\\u16F1-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191D-\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BAB-\\u1BAD\\u1BBA-\\u1BBF\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CCF\\u1CF3-\\u1CFF\\u1DE7-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065-\\u2069\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BA-\\u20CF\\u20F1-\\u20FF\\u218A-\\u218F\\u23F4-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2700\\u27CB\\u27CD\\u2B4D-\\u2B4F\\u2B5A-\\u2BFF\\u2C2F\\u2C5F\\u2CF2-\\u2CF8\\u2D26-\\u2D2F\\u2D66-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E32-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FCC-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA674-\\uA67B\\uA698-\\uA69F\\uA6F8-\\uA6FF\\uA78F\\uA792-\\uA79F\\uA7AA-\\uA7F9\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FC-\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9E0-\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAA7C-\\uAA7F\\uAAC3-\\uAADA\\uAAE0-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F-\\uABBF\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA2E\\uFA2F\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE27-\\uFE2F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF]\",\n  Lu: \"[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10A0-\\u10C5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uFF21-\\uFF3A]\",\n  Ll: \"[a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1D00-\\u1D2B\\u1D62-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7C\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2D00-\\u2D25\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7FA\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]\",\n  Lt: \"[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]\",\n  Lm: \"[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D61\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA717-\\uA71F\\uA770\\uA788\\uA9CF\\uAA70\\uAADD\\uFF70\\uFF9E\\uFF9F]\",\n  Lo: \"[\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u1100-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BC0-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u2135-\\u2138\\u2D30-\\u2D65\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCB\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA2D\\uFA30-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]\",\n  Mn: \"[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]\",\n  Me: \"[\\u0488\\u0489\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672]\",\n  Mc: \"[\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]\",\n  Nd: \"[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]\",\n  Nl: \"[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]\",\n  No: \"[\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D70-\\u0D75\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835]\",\n  Zs: \"[ \\xA0\\u1680\\u180E\\u2000-\\u200A\\u202F\\u205F\\u3000]\",\n  Zl: \"[\\u2028]\",\n  Zp: \"[\\u2029]\",\n  Cc: \"[\\0-\\x1F\\x7F-\\x9F]\",\n  Cf: \"[\\xAD\\u0600-\\u0603\\u06DD\\u070F\\u17B4\\u17B5\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\uFEFF\\uFFF9-\\uFFFB]\",\n  Cs: \"[\\uD800-\\uDFFF]\",\n  Co: \"[\\uE000-\\uF8FF]\",\n  Ps: \"[([{\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3E\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62]\",\n  Pd: \"[-\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D]\",\n  Pc: \"[_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]\",\n  Pe: \"[)\\\\]}\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3F\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63]\",\n  Sm: \"[+<->|~\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2308-\\u230B\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27CA\\u27CC\\u27CE-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC]\",\n  Po: \"[!-#%-'*,./:;?@\\\\\\xA1\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1361-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30\\u2E31\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65]\",\n  Sk: \"[^`\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3]\",\n  Sc: \"[$\\xA2-\\xA5\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20B9\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]\",\n  Pi: \"[\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20]\",\n  So: \"[\\xA6\\xA7\\xA9\\xAE\\xB0\\xB6\\u0482\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D79\\u0F01-\\u0F03\\u0F13-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1360\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u23F3\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u26FF\\u2701-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B50-\\u2B59\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD]\",\n  Pf: \"[\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21]\"\n};\n\nvar unicode_hack_impl = /*@__PURE__*/function () {\n  /* Regexps to match characters in the BMP according to their Unicode category.\n      Extracted from running all characters (code units) against Java's\n      Character.getType. Source:\n      https://ideone.com/04llh4\n  */\n\n  /* Also supports the general category (only the first letter) */\n  var firstLetters = {},\n      p;\n\n  for (p in unicodeCategories) {\n    if (firstLetters[p[0]]) {\n      firstLetters[p[0]] = unicodeCategories[p].substring(0, unicodeCategories[p].length - 1) + firstLetters[p[0]].substring(1);\n    } else {\n      firstLetters[p[0]] = unicodeCategories[p];\n    }\n  }\n\n  for (p in firstLetters) {\n    unicodeCategories[p] = firstLetters[p];\n  }\n  /* Gets a regex written in a dialect that supports unicode categories and\n      translates it to a dialect supported by JavaScript. */\n\n\n  return function (regexpString) {\n    var modifiers = \"\";\n\n    if (regexpString instanceof RegExp) {\n      modifiers = (regexpString.global ? \"g\" : \"\") + (regexpString.ignoreCase ? \"i\" : \"\") + (regexpString.multiline ? \"m\" : \"\");\n      regexpString = regexpString.source;\n    }\n\n    regexpString = regexpString.replace(/\\\\p\\{(..?)\\}/g, function (match, group) {\n      return unicodeCategories[group] || match;\n    });\n    return new RegExp(regexpString, modifiers);\n  };\n}();\n\nexport function unicode_hack(regexpString) {\n  return unicode_hack_impl(regexpString);\n} //jscs:enable\n\nexport function netRegexToJS(netPattern) {\n  var jsPattern = \"\";\n  var nextNETGroupIndex = 1;\n  var nextJSGroupIndex = 1;\n  var namedGroups = [];\n  var nameToJSGroupIndexMap = {};\n  var netToJSGroupIndexMap = [[0]];\n  var matchMustStartAtCurrentPosition = false;\n  var name;\n  var i = 0;\n\n  if (netPattern.startsWith(\"\\\\G\")) {\n    i += 2;\n    matchMustStartAtCurrentPosition = true;\n  }\n\n  var isInClass = false;\n\n  for (; i < netPattern.length; i++) {\n    var current = netPattern.charAt(i);\n\n    switch (current) {\n      case \"\\\\\":\n        switch (netPattern.charAt(i + 1)) {\n          case \"A\":\n            jsPattern = jsPattern.concat(\"^\");\n            i++;\n            break;\n\n          case \"z\":\n          case \"Z\":\n            jsPattern = jsPattern.concat(\"$\");\n            i++;\n            break;\n\n          case \"G\":\n            throw new Error(\"\\\\G .NET Regex escape is only supported at the start of the pattern.\");\n\n          case \"p\":\n            if (netPattern.charAt(i + 2) !== \"{\") {\n              throw new Error(\"\\\\p should be followed by braces.\");\n            }\n\n            var endBraceIndex = netPattern.indexOf(\"}\", i + 3);\n\n            if (endBraceIndex < 0) {\n              throw new Error(\"Could not find the close brace of the \\\\p pattern.\");\n            }\n\n            var pattern = netPattern.substring(i + 3, endBraceIndex);\n            i = endBraceIndex;\n            var content = unicodeCategories[pattern];\n\n            if (content === void 0) {\n              throw new Error(\"Unknown \\\\p pattern: \" + pattern);\n            }\n\n            if (isInClass) {\n              jsPattern = jsPattern.concat(content.substr(1, content.length - 2));\n            } else {\n              jsPattern = jsPattern.concat(content);\n            }\n\n            break;\n\n          default:\n            jsPattern = jsPattern.concat(netPattern.substr(i, 2));\n            i++;\n            break;\n        }\n\n        break;\n\n      case \"/\":\n        jsPattern = jsPattern.concat(\"\\\\/\");\n        break;\n\n      case \"[\":\n        isInClass = true;\n        jsPattern = jsPattern.concat(\"[\");\n        break;\n\n      case \"]\":\n        isInClass = false;\n        jsPattern = jsPattern.concat(\"]\");\n        break;\n\n      case \"(\":\n        jsPattern = jsPattern.concat(\"(\");\n        var next = netPattern[i + 1];\n        name = \"\";\n\n        if (next === \"?\") {\n          i++;\n          next = netPattern[i + 1];\n\n          if (next === \"<\" || next === \"\\\"\") {\n            if (netPattern[i + 2] === \"=\" || netPattern[i + 2] === \"!\") {\n              throw new Error(\"Lookbehind assertions are not supported in JavaScript: \" + pattern);\n            }\n\n            i++;\n            var end = next === \"<\" ? \">\" : \"\\\"\";\n            var start = ++i;\n\n            for (; i < netPattern.length && netPattern[i] != end; i++) {}\n\n            name = netPattern.slice(start, i);\n          } else {\n            jsPattern = jsPattern.concat(\"?\"); // Non-capturing group\n\n            if (next === \":\") {\n              continue;\n            }\n          }\n        }\n\n        var currentJSGroupIndex = nextJSGroupIndex++;\n\n        if (name.length !== 0) {\n          if (!(namedGroups.indexOf(name) > -1)) {\n            namedGroups.push(name);\n          }\n\n          var jsGroups = nameToJSGroupIndexMap[name];\n\n          if (!jsGroups) {\n            nameToJSGroupIndexMap[name] = jsGroups = [];\n          }\n\n          jsGroups.push(currentJSGroupIndex);\n        } else {\n          netToJSGroupIndexMap[nextNETGroupIndex++] = [currentJSGroupIndex];\n        }\n\n        break;\n\n      default:\n        jsPattern = jsPattern.concat(netPattern.substr(i, 1));\n        break;\n    }\n  }\n\n  var nameToNetGroupIndexMap = {};\n\n  for (i = 0; i < namedGroups.length; i++) {\n    var currentNETGroupIndex = nextNETGroupIndex++;\n    name = namedGroups[i];\n    netToJSGroupIndexMap[currentNETGroupIndex] = nameToJSGroupIndexMap[name];\n    nameToNetGroupIndexMap[name] = currentNETGroupIndex;\n  }\n\n  return {\n    pattern: jsPattern,\n    nameToNetGroupIndexMap: nameToNetGroupIndexMap,\n    netToJSGroupIndexMap: netToJSGroupIndexMap,\n    matchMustStartAtCurrentPosition: matchMustStartAtCurrentPosition\n  };\n}\nexport function trim(target) {\n  var rest = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    rest[_i - 1] = arguments[_i];\n  }\n\n  if (rest.length == 0) return target.trim();\n  var parts = stringSplit(target, rest, 0\n  /* None */\n  );\n  return parts.join(\"\");\n}\nexport function trimStart(target) {\n  var rest = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    rest[_i - 1] = arguments[_i];\n  }\n\n  if (target.length === 0) {\n    return target;\n  }\n\n  var args;\n  if (rest.length == 0) args = [\" \"];else if (rest.length == 1 && Array.isArray(rest[0])) {\n    args = rest[0];\n  } else {\n    args = rest;\n  }\n  var i = 0;\n\n  for (; i < target.length && args.indexOf(target.charAt(i)) > -1; i++) {}\n\n  return target.substring(i);\n}\nexport function trimEnd(target) {\n  var rest = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    rest[_i - 1] = arguments[_i];\n  }\n\n  if (target.length === 0) {\n    return target;\n  }\n\n  var args;\n  if (rest.length == 0) args = [\" \"];else if (rest.length == 1 && Array.isArray(rest[0])) {\n    args = rest[0];\n  } else {\n    args = rest;\n  }\n  var i = target.length - 1;\n\n  for (; i >= 0 && args.indexOf(target.charAt(i)) > -1; i--) {}\n\n  return target.substring(0, i + 1);\n}","map":{"version":3,"names":["__read","__spreadArray","CultureInfo","stringCompareTo","stringEscapeRegExp","intToString1","numberToString2","startsWith1","target","s","comparisonType","length","stringCompare1","slice","endsWith1","isLower","toLowerCase","isLetterOrDigit","charCode","charCodeAt","unicode_hack_impl","test","isLetter","c","isDigit1","index","isDigit","isNumber","padLeft","len","reverse","i","padRight","indexOfAny","chars","toString","indexOf","lastIndexOfAny","stringFormat","format","rest","_i","arguments","stringFormat1","apply","args","stringFormat2","currentCulture","provider","replace","match","number","arg","strA","strB","compareInfo","compare4","stringCompare2","culture","options","compare5","stringCompare3","indexA","indexB","v1","substr","v2","stringCompareOrdinal","stringEquals1","stringInsert","str","value","b64toUint8Array","b64Data","nBlocksSize","b64ToUint6","nChr","sB64Enc","nInLen","nOutLen","Math","ceil","taBytes","window","Uint8Array","Array","nMod3","nMod4","nUint24","nOutIdx","nInIdx","uint8ArraytoB64","aBytes","uint6ToB64","nUint6","nLen","nIdx","String","fromCharCode","stringSplit","separators","r","result","split","RegExp","splice","unicodeCategories","Cn","Lu","Ll","Lt","Lm","Lo","Mn","Me","Mc","Nd","Nl","No","Zs","Zl","Zp","Cc","Cf","Cs","Co","Ps","Pd","Pc","Pe","Sm","Po","Sk","Sc","Pi","So","Pf","firstLetters","p","substring","regexpString","modifiers","global","ignoreCase","multiline","source","group","unicode_hack","netRegexToJS","netPattern","jsPattern","nextNETGroupIndex","nextJSGroupIndex","namedGroups","nameToJSGroupIndexMap","netToJSGroupIndexMap","matchMustStartAtCurrentPosition","name","startsWith","isInClass","current","charAt","concat","Error","endBraceIndex","pattern","content","next","end","start","currentJSGroupIndex","push","jsGroups","nameToNetGroupIndexMap","currentNETGroupIndex","trim","parts","join","trimStart","isArray","trimEnd"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/stringExtended.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __read, __spreadArray } from \"tslib\";\nimport { CultureInfo } from \"./culture\";\nimport { stringCompareTo, stringEscapeRegExp } from \"./string\";\nimport { intToString1, numberToString2 } from \"./numberExtended\";\nexport function startsWith1(target, s, comparisonType) {\n    if (target.length < s.length) {\n        return false;\n    }\n    return stringCompare1(target.slice(0, s.length), s, comparisonType || 0) === 0;\n}\n;\nexport function endsWith1(target, s, comparisonType) {\n    if (target.length < s.length) {\n        return false;\n    }\n    return stringCompare1(target.slice(-s.length), s, comparisonType || 0) === 0;\n}\n;\nexport function isLower(target) {\n    return target.toLowerCase() === target;\n}\nexport function isLetterOrDigit(target) {\n    var charCode = target.charCodeAt(0);\n    // \"a\" <= c && c <= \"z\"\n    if (97 <= charCode && charCode <= 122) {\n        return true;\n    }\n    // \"A\" <= c && c <= \"Z\"\n    if (65 <= charCode && charCode <= 90) {\n        return true;\n    }\n    // \"0\" <= c && c <= \"9\"\n    if (48 <= charCode && charCode <= 57) {\n        return true;\n    }\n    if (charCode <= 0x7F) {\n        return false;\n    }\n    return unicode_hack_impl(\"(\\\\p{L}|\\\\p{Nd})\").test(target); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function isLetter(c) {\n    var charCode = c.charCodeAt(0);\n    // \"a\" <= c && c <= \"z\"\n    if (97 <= charCode && charCode <= 122) {\n        return true;\n    }\n    // \"A\" <= c && c <= \"Z\"\n    if (65 <= charCode && charCode <= 90) {\n        return true;\n    }\n    if (charCode <= 0x7F) {\n        return false;\n    }\n    return unicode_hack_impl(\"\\\\p{L}\").test(c); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function isDigit1(c, index) {\n    return isDigit(c[index]);\n}\nexport function isDigit(c) {\n    var charCode = c.charCodeAt(0);\n    // \"0\" <= c && c <= \"9\"\n    if (48 <= charCode && charCode <= 57) {\n        return true;\n    }\n    if (charCode <= 0x7F) {\n        return false;\n    }\n    return unicode_hack_impl(\"\\\\p{Nd}\").test(c); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function isNumber(c) {\n    var charCode = c.charCodeAt(0);\n    // \"0\" <= c && c <= \"9\"\n    if (48 <= charCode && charCode <= 57) {\n        return true;\n    }\n    if (charCode <= 0x7F) {\n        return false;\n    }\n    return unicode_hack_impl(\"\\\\p{N}\").test(c); // jscs:ignore requireCamelCaseOrUpperCaseIdentifiers\n}\nexport function padLeft(target, len, c) {\n    var s = target;\n    c = c || \" \";\n    while (s.length < len) {\n        s = c + s;\n    }\n    return s;\n}\nexport function reverse(target) {\n    /* Inverts the order of the characters in a string.\n        returnType=\"string\" Returns a new inverted string.\n    */\n    var s = \"\";\n    for (var i = target.length - 1; i >= 0; i--) {\n        s += target[i];\n    }\n    return s;\n}\n;\nexport function padRight(target, len, c) {\n    var s = target;\n    c = c || \" \";\n    while (s.length < len) {\n        s += c;\n    }\n    return s;\n}\n;\nexport function indexOfAny(target, chars) {\n    var s = target.toString();\n    for (var i = 0; i < s.length; i++) {\n        if (chars.indexOf(s[i]) > -1) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function lastIndexOfAny(target, chars) {\n    var s = target.toString();\n    for (var i = s.length - 1; i >= 0; i--) {\n        if (chars.indexOf(s[i]) > -1) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function stringFormat(format) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    return stringFormat1.apply(void 0, __spreadArray([format], __read(rest), false));\n}\n;\nexport function stringFormat1(format) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return stringFormat2.apply(void 0, __spreadArray([CultureInfo.currentCulture, format], __read(args), false));\n}\n;\nexport function stringFormat2(provider, format) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    // TODO: what is going on with provider here??\n    // TODO: Use the provider somehow\n    return format.replace(/{(\\d+)(?::)?([^}]*)?}/g, function (match, number, format) {\n        var arg = args[number];\n        if (arg === void 0) {\n            return match;\n        }\n        if (arg === null) {\n            return \"\";\n        }\n        if (format) {\n            if (format[0] === \"X\") {\n                return intToString1(arg, format, provider);\n            }\n            else {\n                return numberToString2(arg, format, provider);\n            }\n        }\n        return arg;\n    });\n}\n;\nexport function stringCompare1(strA, strB, comparisonType) {\n    if (!strA) {\n        return !strB ? 0 : -1;\n    }\n    else if (!strB) {\n        return 1;\n    }\n    // TODO: Make sure this is right\n    switch (comparisonType) {\n        case 0 /* CurrentCulture */:\n            return CultureInfo.currentCulture\n                .compareInfo.compare4(strA, strB);\n        case 1 /* CurrentCultureIgnoreCase */:\n            return CultureInfo.currentCulture.compareInfo\n                .compare4(strA.toLowerCase(), strB.toLowerCase());\n        case 2 /* InvariantCulture */:\n        case 4 /* Ordinal */:\n            return stringCompareTo(strA, strB);\n        case 3 /* InvariantCultureIgnoreCase */:\n        case 5 /* OrdinalIgnoreCase */:\n            return stringCompareTo(strA.toLowerCase(), strB.toLowerCase());\n        default:\n            break;\n    }\n    return 0;\n}\n;\nexport function stringCompare2(strA, strB, culture, options) {\n    return culture.compareInfo.compare5(strA, strB, options);\n}\n;\nexport function stringCompare3(strA, indexA, strB, indexB, length) {\n    var v1 = strA.substr(indexA, length);\n    var v2 = strB.substr(indexB, length);\n    return stringCompare1(v1, v2, 0 /* CurrentCulture */);\n}\n;\nexport function stringCompareOrdinal(strA, indexA, strB, indexB, length) {\n    var v1 = strA.substr(indexA, length);\n    var v2 = strB.substr(indexB, length);\n    return stringCompare1(v1, v2, 4 /* Ordinal */);\n}\n;\nexport function stringEquals1(strA, strB, comparisonType) {\n    return stringCompare1(strA, strB, comparisonType) == 0;\n}\n;\nexport function stringInsert(str, index, value) {\n    return str.substr(0, index) + value + str.substr(index);\n}\n;\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\nexport function b64toUint8Array(b64Data, nBlocksSize) {\n    /*jslint bitwise: true */\n    function b64ToUint6(nChr) {\n        return nChr > 64 && nChr < 91 ?\n            nChr - 65\n            : nChr > 96 && nChr < 123 ?\n                nChr - 71\n                : nChr > 47 && nChr < 58 ?\n                    nChr + 4\n                    : nChr === 43 ?\n                        62\n                        : nChr === 47 ?\n                            63\n                            :\n                                0;\n    }\n    var sB64Enc = b64Data.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"), nInLen = sB64Enc.length, nOutLen = nBlocksSize ?\n        Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize :\n        nInLen * 3 + 1 >> 2, taBytes;\n    if (typeof window.Uint8Array === \"function\") {\n        taBytes = new Uint8Array(nOutLen);\n    }\n    else {\n        taBytes = new Array(nOutLen);\n    }\n    for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n        nMod4 = nInIdx & 3;\n        nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n        if (nMod4 === 3 || nInLen - nInIdx === 1) {\n            for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n            }\n            nUint24 = 0;\n        }\n    }\n    return taBytes;\n}\n;\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\nexport function uint8ArraytoB64(aBytes) {\n    /*jslint bitwise: true */\n    function uint6ToB64(nUint6) {\n        return nUint6 < 26 ?\n            nUint6 + 65\n            : nUint6 < 52 ?\n                nUint6 + 71\n                : nUint6 < 62 ?\n                    nUint6 - 4\n                    : nUint6 === 62 ?\n                        43\n                        : nUint6 === 63 ?\n                            47\n                            :\n                                65;\n    }\n    var nMod3 = 2, sB64Enc = \"\";\n    for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n        nMod3 = nIdx % 3;\n        if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) {\n            sB64Enc += \"\\r\\n\";\n        }\n        nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n        if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n            sB64Enc += String.fromCharCode(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));\n            nUint24 = 0;\n        }\n    }\n    return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) +\n        (nMod3 === 2 ? \"\" : nMod3 === 1 ? \"=\" : \"==\");\n}\nexport function stringSplit(value, separators, options) {\n    var r = \"\", i;\n    for (i = 0; i < separators.length; i++) {\n        if (i !== 0) {\n            r += \"|\";\n        }\n        r += stringEscapeRegExp(separators[i]);\n    }\n    var result = value.split(new RegExp(r));\n    for (i = result.length - 1; i >= 0; i--) {\n        /*jslint bitwise: true */\n        if ((result[i].length === 0 &&\n            (options & 1 /* RemoveEmptyEntries */)) ||\n            separators.indexOf(result[i]) > -1) {\n            result.splice(i, 1);\n        }\n    }\n    return result;\n}\n;\n/*! unicode_hack.js\nCopyright (C) 2010-2012,2014  Marcelo Gibson de Castro GonÃ§alves. All rights reserved.\n\r\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout any warranty.\n*/\n// jscs:disable\nvar unicodeCategories = {\n    Cn: \"[\\u0378\\u0379\\u037f-\\u0383\\u038b\\u038d\\u03a2\\u0528-\\u0530\\u0557\\u0558\\u0560\\u0588\\u058b-\\u0590\\u05c8-\\u05cf\\u05eb-\\u05ef\\u05f5-\\u05ff\\u0604\\u0605\\u061c\\u061d\\u070e\\u074b\\u074c\\u07b2-\\u07bf\\u07fb-\\u07ff\\u082e\\u082f\\u083f\\u085c\\u085d\\u085f-\\u08ff\\u0978\\u0980\\u0984\\u098d\\u098e\\u0991\\u0992\\u09a9\\u09b1\\u09b3-\\u09b5\\u09ba\\u09bb\\u09c5\\u09c6\\u09c9\\u09ca\\u09cf-\\u09d6\\u09d8-\\u09db\\u09de\\u09e4\\u09e5\\u09fc-\\u0a00\\u0a04\\u0a0b-\\u0a0e\\u0a11\\u0a12\\u0a29\\u0a31\\u0a34\\u0a37\\u0a3a\\u0a3b\\u0a3d\\u0a43-\\u0a46\\u0a49\\u0a4a\\u0a4e-\\u0a50\\u0a52-\\u0a58\\u0a5d\\u0a5f-\\u0a65\\u0a76-\\u0a80\\u0a84\\u0a8e\\u0a92\\u0aa9\\u0ab1\\u0ab4\\u0aba\\u0abb\\u0ac6\\u0aca\\u0ace\\u0acf\\u0ad1-\\u0adf\\u0ae4\\u0ae5\\u0af0\\u0af2-\\u0b00\\u0b04\\u0b0d\\u0b0e\\u0b11\\u0b12\\u0b29\\u0b31\\u0b34\\u0b3a\\u0b3b\\u0b45\\u0b46\\u0b49\\u0b4a\\u0b4e-\\u0b55\\u0b58-\\u0b5b\\u0b5e\\u0b64\\u0b65\\u0b78-\\u0b81\\u0b84\\u0b8b-\\u0b8d\\u0b91\\u0b96-\\u0b98\\u0b9b\\u0b9d\\u0ba0-\\u0ba2\\u0ba5-\\u0ba7\\u0bab-\\u0bad\\u0bba-\\u0bbd\\u0bc3-\\u0bc5\\u0bc9\\u0bce\\u0bcf\\u0bd1-\\u0bd6\\u0bd8-\\u0be5\\u0bfb-\\u0c00\\u0c04\\u0c0d\\u0c11\\u0c29\\u0c34\\u0c3a-\\u0c3c\\u0c45\\u0c49\\u0c4e-\\u0c54\\u0c57\\u0c5a-\\u0c5f\\u0c64\\u0c65\\u0c70-\\u0c77\\u0c80\\u0c81\\u0c84\\u0c8d\\u0c91\\u0ca9\\u0cb4\\u0cba\\u0cbb\\u0cc5\\u0cc9\\u0cce-\\u0cd4\\u0cd7-\\u0cdd\\u0cdf\\u0ce4\\u0ce5\\u0cf0\\u0cf3-\\u0d01\\u0d04\\u0d0d\\u0d11\\u0d3b\\u0d3c\\u0d45\\u0d49\\u0d4f-\\u0d56\\u0d58-\\u0d5f\\u0d64\\u0d65\\u0d76-\\u0d78\\u0d80\\u0d81\\u0d84\\u0d97-\\u0d99\\u0db2\\u0dbc\\u0dbe\\u0dbf\\u0dc7-\\u0dc9\\u0dcb-\\u0dce\\u0dd5\\u0dd7\\u0de0-\\u0df1\\u0df5-\\u0e00\\u0e3b-\\u0e3e\\u0e5c-\\u0e80\\u0e83\\u0e85\\u0e86\\u0e89\\u0e8b\\u0e8c\\u0e8e-\\u0e93\\u0e98\\u0ea0\\u0ea4\\u0ea6\\u0ea8\\u0ea9\\u0eac\\u0eba\\u0ebe\\u0ebf\\u0ec5\\u0ec7\\u0ece\\u0ecf\\u0eda\\u0edb\\u0ede-\\u0eff\\u0f48\\u0f6d-\\u0f70\\u0f98\\u0fbd\\u0fcd\\u0fdb-\\u0fff\\u10c6-\\u10cf\\u10fd-\\u10ff\\u1249\\u124e\\u124f\\u1257\\u1259\\u125e\\u125f\\u1289\\u128e\\u128f\\u12b1\\u12b6\\u12b7\\u12bf\\u12c1\\u12c6\\u12c7\\u12d7\\u1311\\u1316\\u1317\\u135b\\u135c\\u137d-\\u137f\\u139a-\\u139f\\u13f5-\\u13ff\\u169d-\\u169f\\u16f1-\\u16ff\\u170d\\u1715-\\u171f\\u1737-\\u173f\\u1754-\\u175f\\u176d\\u1771\\u1774-\\u177f\\u17de\\u17df\\u17ea-\\u17ef\\u17fa-\\u17ff\\u180f\\u181a-\\u181f\\u1878-\\u187f\\u18ab-\\u18af\\u18f6-\\u18ff\\u191d-\\u191f\\u192c-\\u192f\\u193c-\\u193f\\u1941-\\u1943\\u196e\\u196f\\u1975-\\u197f\\u19ac-\\u19af\\u19ca-\\u19cf\\u19db-\\u19dd\\u1a1c\\u1a1d\\u1a5f\\u1a7d\\u1a7e\\u1a8a-\\u1a8f\\u1a9a-\\u1a9f\\u1aae-\\u1aff\\u1b4c-\\u1b4f\\u1b7d-\\u1b7f\\u1bab-\\u1bad\\u1bba-\\u1bbf\\u1bf4-\\u1bfb\\u1c38-\\u1c3a\\u1c4a-\\u1c4c\\u1c80-\\u1ccf\\u1cf3-\\u1cff\\u1de7-\\u1dfb\\u1f16\\u1f17\\u1f1e\\u1f1f\\u1f46\\u1f47\\u1f4e\\u1f4f\\u1f58\\u1f5a\\u1f5c\\u1f5e\\u1f7e\\u1f7f\\u1fb5\\u1fc5\\u1fd4\\u1fd5\\u1fdc\\u1ff0\\u1ff1\\u1ff5\\u1fff\\u2065-\\u2069\\u2072\\u2073\\u208f\\u209d-\\u209f\\u20ba-\\u20cf\\u20f1-\\u20ff\\u218a-\\u218f\\u23f4-\\u23ff\\u2427-\\u243f\\u244b-\\u245f\\u2700\\u27cb\\u27cd\\u2b4d-\\u2b4f\\u2b5a-\\u2bff\\u2c2f\\u2c5f\\u2cf2-\\u2cf8\\u2d26-\\u2d2f\\u2d66-\\u2d6e\\u2d71-\\u2d7e\\u2d97-\\u2d9f\\u2da7\\u2daf\\u2db7\\u2dbf\\u2dc7\\u2dcf\\u2dd7\\u2ddf\\u2e32-\\u2e7f\\u2e9a\\u2ef4-\\u2eff\\u2fd6-\\u2fef\\u2ffc-\\u2fff\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312e-\\u3130\\u318f\\u31bb-\\u31bf\\u31e4-\\u31ef\\u321f\\u32ff\\u4db6-\\u4dbf\\u9fcc-\\u9fff\\ua48d-\\ua48f\\ua4c7-\\ua4cf\\ua62c-\\ua63f\\ua674-\\ua67b\\ua698-\\ua69f\\ua6f8-\\ua6ff\\ua78f\\ua792-\\ua79f\\ua7aa-\\ua7f9\\ua82c-\\ua82f\\ua83a-\\ua83f\\ua878-\\ua87f\\ua8c5-\\ua8cd\\ua8da-\\ua8df\\ua8fc-\\ua8ff\\ua954-\\ua95e\\ua97d-\\ua97f\\ua9ce\\ua9da-\\ua9dd\\ua9e0-\\ua9ff\\uaa37-\\uaa3f\\uaa4e\\uaa4f\\uaa5a\\uaa5b\\uaa7c-\\uaa7f\\uaac3-\\uaada\\uaae0-\\uab00\\uab07\\uab08\\uab0f\\uab10\\uab17-\\uab1f\\uab27\\uab2f-\\uabbf\\uabee\\uabef\\uabfa-\\uabff\\ud7a4-\\ud7af\\ud7c7-\\ud7ca\\ud7fc-\\ud7ff\\ufa2e\\ufa2f\\ufa6e\\ufa6f\\ufada-\\ufaff\\ufb07-\\ufb12\\ufb18-\\ufb1c\\ufb37\\ufb3d\\ufb3f\\ufb42\\ufb45\\ufbc2-\\ufbd2\\ufd40-\\ufd4f\\ufd90\\ufd91\\ufdc8-\\ufdef\\ufdfe\\ufdff\\ufe1a-\\ufe1f\\ufe27-\\ufe2f\\ufe53\\ufe67\\ufe6c-\\ufe6f\\ufe75\\ufefd\\ufefe\\uff00\\uffbf-\\uffc1\\uffc8\\uffc9\\uffd0\\uffd1\\uffd8\\uffd9\\uffdd-\\uffdf\\uffe7\\uffef-\\ufff8\\ufffe\\uffff]\",\n    Lu: \"[\\u0041-\\u005a\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017b\\u017d\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019c\\u019d\\u019f\\u01a0\\u01a2\\u01a4\\u01a6\\u01a7\\u01a9\\u01ac\\u01ae\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a\\u023b\\u023d\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\uff21-\\uff3a]\",\n    Ll: \"[\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d62-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6\\u1fc7\\u1fd0-\\u1fd3\\u1fd6\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6\\u1ff7\\u210a\\u210e\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73\\u2c74\\u2c76-\\u2c7c\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3\\u2ce4\\u2cec\\u2cee\\u2d00-\\u2d25\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a]\",\n    Lt: \"[\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc]\",\n    Lm: \"[\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5\\u06e6\\u07f4\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d61\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua9cf\\uaa70\\uaadd\\uff70\\uff9e\\uff9f]\",\n    Lo: \"[\\u01bb\\u01c0-\\u01c3\\u0294\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u063f\\u0641-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u0800-\\u0815\\u0840-\\u0858\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0972-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e45\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0edc\\u0edd\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10d0-\\u10fa\\u1100-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17dc\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bc0-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c77\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u2135-\\u2138\\u2d30-\\u2d65\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3006\\u303c\\u3041-\\u3096\\u309f\\u30a1-\\u30fa\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcb\\ua000-\\ua014\\ua016-\\ua48c\\ua4d0-\\ua4f7\\ua500-\\ua60b\\ua610-\\ua61f\\ua62a\\ua62b\\ua66e\\ua6a0-\\ua6e5\\ua7fb-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa6f\\uaa71-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb\\uaadc\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff66-\\uff6f\\uff71-\\uff9d\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]\",\n    Mn: \"[\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2\\u09e3\\u0a01\\u0a02\\u0a3c\\u0a41\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70\\u0a71\\u0a75\\u0a81\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7\\u0ac8\\u0acd\\u0ae2\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc\\u0ccd\\u0ce2\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039\\u103a\\u103d\\u103e\\u1058\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193b\\u1a17\\u1a18\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80\\u1b81\\u1ba2-\\u1ba5\\u1ba8\\u1ba9\\u1be6\\u1be8\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua66f\\ua67c\\ua67d\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua825\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31\\uaa32\\uaa35\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26]\",\n    Me: \"[\\u0488\\u0489\\u20dd-\\u20e0\\u20e2-\\u20e4\\ua670-\\ua672]\",\n    Mc: \"[\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e\\u094f\\u0982\\u0983\\u09be-\\u09c0\\u09c7\\u09c8\\u09cb\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb\\u0acc\\u0b02\\u0b03\\u0b3e\\u0b40\\u0b47\\u0b48\\u0b4b\\u0b4c\\u0b57\\u0bbe\\u0bbf\\u0bc1\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7\\u0cc8\\u0cca\\u0ccb\\u0cd5\\u0cd6\\u0d02\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0f3e\\u0f3f\\u0f7f\\u102b\\u102c\\u1031\\u1038\\u103b\\u103c\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8\\u19c9\\u1a19-\\u1a1b\\u1a55\\u1a57\\u1a61\\u1a63\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43\\u1b44\\u1b82\\u1ba1\\u1ba6\\u1ba7\\u1baa\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2\\u1bf3\\u1c24-\\u1c2b\\u1c34\\u1c35\\u1ce1\\u1cf2\\ua823\\ua824\\ua827\\ua880\\ua881\\ua8b4-\\ua8c3\\ua952\\ua953\\ua983\\ua9b4\\ua9b5\\ua9ba\\ua9bb\\ua9bd-\\ua9c0\\uaa2f\\uaa30\\uaa33\\uaa34\\uaa4d\\uaa7b\\uabe3\\uabe4\\uabe6\\uabe7\\uabe9\\uabea\\uabec]\",\n    Nd: \"[\\u0030-\\u0039\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19]\",\n    Nl: \"[\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef]\",\n    No: \"[\\u00b2\\u00b3\\u00b9\\u00bc-\\u00be\\u09f4-\\u09f9\\u0b72-\\u0b77\\u0bf0-\\u0bf2\\u0c78-\\u0c7e\\u0d70-\\u0d75\\u0f2a-\\u0f33\\u1369-\\u137c\\u17f0-\\u17f9\\u19da\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215f\\u2189\\u2460-\\u249b\\u24ea-\\u24ff\\u2776-\\u2793\\u2cfd\\u3192-\\u3195\\u3220-\\u3229\\u3251-\\u325f\\u3280-\\u3289\\u32b1-\\u32bf\\ua830-\\ua835]\",\n    Zs: \"[\\u0020\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000]\",\n    Zl: \"[\\u2028]\",\n    Zp: \"[\\u2029]\",\n    Cc: \"[\\u0000-\\u001f\\u007f-\\u009f]\",\n    Cf: \"[\\u00ad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb]\",\n    Cs: \"[\\ud800-\\udfff]\",\n    Co: \"[\\ue000-\\uf8ff]\",\n    Ps: \"[\\u0028\\u005b\\u007b\\u0f3a\\u0f3c\\u169b\\u201a\\u201e\\u2045\\u207d\\u208d\\u2329\\u2768\\u276a\\u276c\\u276e\\u2770\\u2772\\u2774\\u27c5\\u27e6\\u27e8\\u27ea\\u27ec\\u27ee\\u2983\\u2985\\u2987\\u2989\\u298b\\u298d\\u298f\\u2991\\u2993\\u2995\\u2997\\u29d8\\u29da\\u29fc\\u2e22\\u2e24\\u2e26\\u2e28\\u3008\\u300a\\u300c\\u300e\\u3010\\u3014\\u3016\\u3018\\u301a\\u301d\\ufd3e\\ufe17\\ufe35\\ufe37\\ufe39\\ufe3b\\ufe3d\\ufe3f\\ufe41\\ufe43\\ufe47\\ufe59\\ufe5b\\ufe5d\\uff08\\uff3b\\uff5b\\uff5f\\uff62]\",\n    Pd: \"[\\u002d\\u058a\\u05be\\u1400\\u1806\\u2010-\\u2015\\u2e17\\u2e1a\\u301c\\u3030\\u30a0\\ufe31\\ufe32\\ufe58\\ufe63\\uff0d]\",\n    Pc: \"[\\u005f\\u203f\\u2040\\u2054\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff3f]\",\n    Pe: \"[\\u0029\\\\\\u005d\\u007d\\u0f3b\\u0f3d\\u169c\\u2046\\u207e\\u208e\\u232a\\u2769\\u276b\\u276d\\u276f\\u2771\\u2773\\u2775\\u27c6\\u27e7\\u27e9\\u27eb\\u27ed\\u27ef\\u2984\\u2986\\u2988\\u298a\\u298c\\u298e\\u2990\\u2992\\u2994\\u2996\\u2998\\u29d9\\u29db\\u29fd\\u2e23\\u2e25\\u2e27\\u2e29\\u3009\\u300b\\u300d\\u300f\\u3011\\u3015\\u3017\\u3019\\u301b\\u301e\\u301f\\ufd3f\\ufe18\\ufe36\\ufe38\\ufe3a\\ufe3c\\ufe3e\\ufe40\\ufe42\\ufe44\\ufe48\\ufe5a\\ufe5c\\ufe5e\\uff09\\uff3d\\uff5d\\uff60\\uff63]\",\n    Sm: \"[\\u002b\\u003c-\\u003e\\u007c\\u007e\\u00ac\\u00b1\\u00d7\\u00f7\\u03f6\\u0606-\\u0608\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u2118\\u2140-\\u2144\\u214b\\u2190-\\u2194\\u219a\\u219b\\u21a0\\u21a3\\u21a6\\u21ae\\u21ce\\u21cf\\u21d2\\u21d4\\u21f4-\\u22ff\\u2308-\\u230b\\u2320\\u2321\\u237c\\u239b-\\u23b3\\u23dc-\\u23e1\\u25b7\\u25c1\\u25f8-\\u25ff\\u266f\\u27c0-\\u27c4\\u27c7-\\u27ca\\u27cc\\u27ce-\\u27e5\\u27f0-\\u27ff\\u2900-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2aff\\u2b30-\\u2b44\\u2b47-\\u2b4c\\ufb29\\ufe62\\ufe64-\\ufe66\\uff0b\\uff1c-\\uff1e\\uff5c\\uff5e\\uffe2\\uffe9-\\uffec]\",\n    Po: \"[\\u0021-\\u0023\\u0025-\\u0027\\u002a\\u002c\\u002e\\u002f\\u003a\\u003b\\u003f\\u0040\\u005c\\u00a1\\u00b7\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589\\u05c0\\u05c3\\u05c6\\u05f3\\u05f4\\u0609\\u060a\\u060c\\u060d\\u061b\\u061e\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964\\u0965\\u0970\\u0df4\\u0e4f\\u0e5a\\u0e5b\\u0f04-\\u0f12\\u0f85\\u0fd0-\\u0fd4\\u0fd9\\u0fda\\u104a-\\u104f\\u10fb\\u1361-\\u1368\\u166d\\u166e\\u16eb-\\u16ed\\u1735\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u1805\\u1807-\\u180a\\u1944\\u1945\\u1a1e\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e\\u1c7f\\u1cd3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203b-\\u203e\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205e\\u2cf9-\\u2cfc\\u2cfe\\u2cff\\u2d70\\u2e00\\u2e01\\u2e06-\\u2e08\\u2e0b\\u2e0e-\\u2e16\\u2e18\\u2e19\\u2e1b\\u2e1e\\u2e1f\\u2e2a-\\u2e2e\\u2e30\\u2e31\\u3001-\\u3003\\u303d\\u30fb\\ua4fe\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce\\ua8cf\\ua8f8-\\ua8fa\\ua92e\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de\\ua9df\\uaa5c-\\uaa5f\\uaade\\uaadf\\uabeb\\ufe10-\\ufe16\\ufe19\\ufe30\\ufe45\\ufe46\\ufe49-\\ufe4c\\ufe50-\\ufe52\\ufe54-\\ufe57\\ufe5f-\\ufe61\\ufe68\\ufe6a\\ufe6b\\uff01-\\uff03\\uff05-\\uff07\\uff0a\\uff0c\\uff0e\\uff0f\\uff1a\\uff1b\\uff1f\\uff20\\uff3c\\uff61\\uff64\\uff65]\",\n    Sk: \"[\\u005e\\u0060\\u00a8\\u00af\\u00b4\\u00b8\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u309b\\u309c\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ufbb2-\\ufbc1\\uff3e\\uff40\\uffe3]\",\n    Sc: \"[\\u0024\\u00a2-\\u00a5\\u060b\\u09f2\\u09f3\\u09fb\\u0af1\\u0bf9\\u0e3f\\u17db\\u20a0-\\u20b9\\ua838\\ufdfc\\ufe69\\uff04\\uffe0\\uffe1\\uffe5\\uffe6]\",\n    Pi: \"[\\u00ab\\u2018\\u201b\\u201c\\u201f\\u2039\\u2e02\\u2e04\\u2e09\\u2e0c\\u2e1c\\u2e20]\",\n    So: \"[\\u00a6\\u00a7\\u00a9\\u00ae\\u00b0\\u00b6\\u0482\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u09fa\\u0b70\\u0bf3-\\u0bf8\\u0bfa\\u0c7f\\u0d79\\u0f01-\\u0f03\\u0f13-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1360\\u1390-\\u1399\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u214a\\u214c\\u214d\\u214f\\u2195-\\u2199\\u219c-\\u219f\\u21a1\\u21a2\\u21a4\\u21a5\\u21a7-\\u21ad\\u21af-\\u21cd\\u21d0\\u21d1\\u21d3\\u21d5-\\u21f3\\u2300-\\u2307\\u230c-\\u231f\\u2322-\\u2328\\u232b-\\u237b\\u237d-\\u239a\\u23b4-\\u23db\\u23e2-\\u23f3\\u2400-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u25b6\\u25b8-\\u25c0\\u25c2-\\u25f7\\u2600-\\u266e\\u2670-\\u26ff\\u2701-\\u2767\\u2794-\\u27bf\\u2800-\\u28ff\\u2b00-\\u2b2f\\u2b45\\u2b46\\u2b50-\\u2b59\\u2ce5-\\u2cea\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u32fe\\u3300-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua828-\\ua82b\\ua836\\ua837\\ua839\\uaa77-\\uaa79\\ufdfd\\uffe4\\uffe8\\uffed\\uffee\\ufffc\\ufffd]\",\n    Pf: \"[\\u00bb\\u2019\\u201d\\u203a\\u2e03\\u2e05\\u2e0a\\u2e0d\\u2e1d\\u2e21]\"\n};\nvar unicode_hack_impl = /*@__PURE__*/ (function () {\n    /* Regexps to match characters in the BMP according to their Unicode category.\n        Extracted from running all characters (code units) against Java's\n        Character.getType. Source:\n        https://ideone.com/04llh4\n    */\n    /* Also supports the general category (only the first letter) */\n    var firstLetters = {}, p;\n    for (p in unicodeCategories) {\n        if (firstLetters[p[0]]) {\n            firstLetters[p[0]] = unicodeCategories[p]\n                .substring(0, unicodeCategories[p].length - 1) + firstLetters[p[0]].substring(1);\n        }\n        else {\n            firstLetters[p[0]] = unicodeCategories[p];\n        }\n    }\n    for (p in firstLetters) {\n        unicodeCategories[p] = firstLetters[p];\n    }\n    /* Gets a regex written in a dialect that supports unicode categories and\n        translates it to a dialect supported by JavaScript. */\n    return function (regexpString) {\n        var modifiers = \"\";\n        if (regexpString instanceof RegExp) {\n            modifiers = (regexpString.global ? \"g\" : \"\") +\n                (regexpString.ignoreCase ? \"i\" : \"\") +\n                (regexpString.multiline ? \"m\" : \"\");\n            regexpString = regexpString.source;\n        }\n        regexpString = regexpString.replace(/\\\\p\\{(..?)\\}/g, function (match, group) {\n            return unicodeCategories[group] || match;\n        });\n        return new RegExp(regexpString, modifiers);\n    };\n})();\nexport function unicode_hack(regexpString) {\n    return unicode_hack_impl(regexpString);\n}\n//jscs:enable\nexport function netRegexToJS(netPattern) {\n    var jsPattern = \"\";\n    var nextNETGroupIndex = 1;\n    var nextJSGroupIndex = 1;\n    var namedGroups = [];\n    var nameToJSGroupIndexMap = {};\n    var netToJSGroupIndexMap = [[0]];\n    var matchMustStartAtCurrentPosition = false;\n    var name;\n    var i = 0;\n    if (netPattern.startsWith(\"\\\\G\")) {\n        i += 2;\n        matchMustStartAtCurrentPosition = true;\n    }\n    var isInClass = false;\n    for (; i < netPattern.length; i++) {\n        var current = netPattern.charAt(i);\n        switch (current) {\n            case \"\\\\\":\n                switch (netPattern.charAt(i + 1)) {\n                    case \"A\":\n                        jsPattern = jsPattern.concat(\"^\");\n                        i++;\n                        break;\n                    case \"z\":\n                    case \"Z\":\n                        jsPattern = jsPattern.concat(\"$\");\n                        i++;\n                        break;\n                    case \"G\":\n                        throw new Error(\"\\\\G .NET Regex escape is only supported at the start of the pattern.\");\n                    case \"p\":\n                        if (netPattern.charAt(i + 2) !== \"{\") {\n                            throw new Error(\"\\\\p should be followed by braces.\");\n                        }\n                        var endBraceIndex = netPattern.indexOf(\"}\", i + 3);\n                        if (endBraceIndex < 0) {\n                            throw new Error(\"Could not find the close brace of the \\\\p pattern.\");\n                        }\n                        var pattern = netPattern.substring(i + 3, endBraceIndex);\n                        i = endBraceIndex;\n                        var content = unicodeCategories[pattern];\n                        if (content === void 0) {\n                            throw new Error(\"Unknown \\\\p pattern: \" + pattern);\n                        }\n                        if (isInClass) {\n                            jsPattern = jsPattern.concat(content.substr(1, content.length - 2));\n                        }\n                        else {\n                            jsPattern = jsPattern.concat(content);\n                        }\n                        break;\n                    default:\n                        jsPattern = jsPattern.concat(netPattern.substr(i, 2));\n                        i++;\n                        break;\n                }\n                break;\n            case \"/\":\n                jsPattern = jsPattern.concat(\"\\\\/\");\n                break;\n            case \"[\":\n                isInClass = true;\n                jsPattern = jsPattern.concat(\"[\");\n                break;\n            case \"]\":\n                isInClass = false;\n                jsPattern = jsPattern.concat(\"]\");\n                break;\n            case \"(\":\n                jsPattern = jsPattern.concat(\"(\");\n                var next = netPattern[i + 1];\n                name = \"\";\n                if (next === \"?\") {\n                    i++;\n                    next = netPattern[i + 1];\n                    if (next === \"<\" || next === \"\\\"\") {\n                        if (netPattern[i + 2] === \"=\" || netPattern[i + 2] === \"!\") {\n                            throw new Error(\"Lookbehind assertions are not supported in JavaScript: \" + pattern);\n                        }\n                        i++;\n                        var end = next === \"<\" ? \">\" : \"\\\"\";\n                        var start = ++i;\n                        for (; i < netPattern.length && netPattern[i] != end; i++) {\n                        }\n                        name = netPattern.slice(start, i);\n                    }\n                    else {\n                        jsPattern = jsPattern.concat(\"?\");\n                        // Non-capturing group\n                        if (next === \":\") {\n                            continue;\n                        }\n                    }\n                }\n                var currentJSGroupIndex = nextJSGroupIndex++;\n                if (name.length !== 0) {\n                    if (!(namedGroups.indexOf(name) > -1)) {\n                        namedGroups.push(name);\n                    }\n                    var jsGroups = nameToJSGroupIndexMap[name];\n                    if (!jsGroups) {\n                        nameToJSGroupIndexMap[name] = jsGroups = [];\n                    }\n                    jsGroups.push(currentJSGroupIndex);\n                }\n                else {\n                    netToJSGroupIndexMap[nextNETGroupIndex++] = [currentJSGroupIndex];\n                }\n                break;\n            default:\n                jsPattern = jsPattern.concat(netPattern.substr(i, 1));\n                break;\n        }\n    }\n    var nameToNetGroupIndexMap = {};\n    for (i = 0; i < namedGroups.length; i++) {\n        var currentNETGroupIndex = nextNETGroupIndex++;\n        name = namedGroups[i];\n        netToJSGroupIndexMap[currentNETGroupIndex] = nameToJSGroupIndexMap[name];\n        nameToNetGroupIndexMap[name] = currentNETGroupIndex;\n    }\n    return {\n        pattern: jsPattern,\n        nameToNetGroupIndexMap: nameToNetGroupIndexMap,\n        netToJSGroupIndexMap: netToJSGroupIndexMap,\n        matchMustStartAtCurrentPosition: matchMustStartAtCurrentPosition\n    };\n}\nexport function trim(target) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (rest.length == 0)\n        return target.trim();\n    var parts = stringSplit(target, rest, 0 /* None */);\n    return parts.join(\"\");\n}\nexport function trimStart(target) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (target.length === 0) {\n        return target;\n    }\n    var args;\n    if (rest.length == 0)\n        args = [\" \"];\n    else if (rest.length == 1 && Array.isArray(rest[0])) {\n        args = rest[0];\n    }\n    else {\n        args = rest;\n    }\n    var i = 0;\n    for (; i < target.length && args.indexOf(target.charAt(i)) > -1; i++) { }\n    return target.substring(i);\n}\nexport function trimEnd(target) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (target.length === 0) {\n        return target;\n    }\n    var args;\n    if (rest.length == 0)\n        args = [\" \"];\n    else if (rest.length == 1 && Array.isArray(rest[0])) {\n        args = rest[0];\n    }\n    else {\n        args = rest;\n    }\n    var i = target.length - 1;\n    for (; i >= 0 && args.indexOf(target.charAt(i)) > -1; i--) { }\n    return target.substring(0, i + 1);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}