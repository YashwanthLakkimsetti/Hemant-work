{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IndicatorDisplayType_$type } from \"./IndicatorDisplayType\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { IgrFinancialSeries } from \"./igr-financial-series\";\nimport { ensureEnum, brushToString, stringToBrush, toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents the base functionality for a IgxDataChartComponent financial indicator series.\n*\n* The `IgrFinancialIndicator` class represents the base functionality for a IgxDataChartComponent financial indicator series.\n*\n* ```ts\n*  <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis name=\"yAxis\" />\n*\n*    <IgrMassIndexIndicator\n*     name=\"series3\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*/\n\nvar IgrFinancialIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrFinancialIndicator, _super);\n\n  function IgrFinancialIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"isFinancialIndicator\", {\n    /**\n     * Gets whether the series is financial indicator\n    */\n    get: function get() {\n      return this.i.dq;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"displayType\", {\n    /**\n     * Gets or sets the display for the current FinancialIndicator object.\n    *\n    * The `displayType` property is used to display the current FinancialIndicator object.\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *    <IgrMassIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tdisplayType=\"Column\"  />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.displayType= IndicatorDisplayType.Column;\n    * ```\n    */\n    get: function get() {\n      return this.i.to;\n    },\n    set: function set(v) {\n      this.i.to = ensureEnum(IndicatorDisplayType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"defaultDisplayType\", {\n    /**\n     * Gets default display type for the current Financial Indicator\n    */\n    get: function get() {\n      return this.i.tn;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"ignoreFirst\", {\n    /**\n     * Gets or sets the number of values to hide at the beginning of the indicator.\n    *\n    * Use the `ignoreFirst` propert to hide the number of values at the beginning of the indicator.\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *    <IgrMassIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tignoreFirst=\"2\"/>\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.ignoreFirst  = 2;\n    * ```\n    */\n    get: function get() {\n      return this.i.tu;\n    },\n    set: function set(v) {\n      this.i.tu = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLineType\", {\n    /**\n     * Gets or sets the trend type for the current indicator series.\n    *\n    * Use `trendLineType` property to get the trend type for the current indicator series.\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *    <IgrMassIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLineType=\"CubicFit\"/>\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.trendLineType= TrendLineType.CubicFit;\n    * ```\n    */\n    get: function get() {\n      return this.i.trendLineType;\n    },\n    set: function set(v) {\n      this.i.trendLineType = ensureEnum(TrendLineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLineBrush\", {\n    /**\n     * Gets or sets the brush to use to draw the trend line.\n    *\n    * Use the `trendLineBrush` propert to draw the trend line.\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *    <IgrMassIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLineBrush=\"Red\"/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function get() {\n      return brushToString(this.i.trendLineBrush);\n    },\n    set: function set(v) {\n      this.i.trendLineBrush = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"actualTrendLineBrush\", {\n    /**\n     * Gets the effective TrendLineBrush for this indicator.\n    *\n    * Use the `actualTrendLineBrush` property to Gets the effective TrendLineBrush for the FinancialIndicator.\n    */\n    get: function get() {\n      return brushToString(this.i.uc);\n    },\n    set: function set(v) {\n      this.i.uc = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLineThickness\", {\n    /**\n     * Gets or sets the thickness of the current indicator object's trend line.\n    *\n    * Use `trendLineThickness` property for the thickness of the current indicator object's trend line.\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *    <IgrMassIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLineThickness=\"2\"/>\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    *  series.trendLineThickness=2 ;\n    * ```\n    */\n    get: function get() {\n      return this.i.trendLineThickness;\n    },\n    set: function set(v) {\n      this.i.trendLineThickness = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLinePeriod\", {\n    /**\n     * Gets or sets the trend line period for the current series.\n     * The typical, and initial, value for trend line period is 7.\n    *\n    * Use `trendLinePeriod` property for the trend line period of the current series.\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *    <IgrMassIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLinePeriod=\"30\"/>\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.trendLinePeriod  =30;\n    * ```\n    */\n    get: function get() {\n      return this.i.trendLinePeriod;\n    },\n    set: function set(v) {\n      this.i.trendLinePeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  *\n  * The `getSeriesValueBoundingBox` method returns the best available value bounding box within the series that has the best value match for the world position provided.\n  */\n\n  IgrFinancialIndicator.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.pu(toPoint(world));\n    return fromRect(iv);\n  };\n\n  IgrFinancialIndicator.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrFinancialIndicator.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.hj(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrFinancialIndicator.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.hh(toPoint(world), skipUnknowns);\n    return iv;\n  };\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The series is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  *\n  * The `scrollIntoView` method scrolls the series to display the item for the specified data item.\n  */\n\n\n  IgrFinancialIndicator.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n\n  return IgrFinancialIndicator;\n}(IgrFinancialSeries);\n\nexport { IgrFinancialIndicator };","map":{"version":3,"names":["__extends","IndicatorDisplayType_$type","TrendLineType_$type","IgrFinancialSeries","ensureEnum","brushToString","stringToBrush","toPoint","fromRect","IgrFinancialIndicator","_super","props","call","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","dq","to","set","v","tn","tu","trendLineType","trendLineBrush","uc","trendLineThickness","trendLinePeriod","getSeriesValueBoundingBox","world","iv","pu","getSeriesValue","useInterpolation","skipUnknowns","gj","getPreviousOrExactIndex","hj","getNextOrExactIndex","hh","scrollIntoView","item","en"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-financial-indicator.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IndicatorDisplayType_$type } from \"./IndicatorDisplayType\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { IgrFinancialSeries } from \"./igr-financial-series\";\nimport { ensureEnum, brushToString, stringToBrush, toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents the base functionality for a IgxDataChartComponent financial indicator series.\n*\n* The `IgrFinancialIndicator` class represents the base functionality for a IgxDataChartComponent financial indicator series.\n*\n* ```ts\n*  <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis name=\"yAxis\" />\n*\n*    <IgrMassIndexIndicator\n*     name=\"series3\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*/\nvar IgrFinancialIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrFinancialIndicator, _super);\n    function IgrFinancialIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"isFinancialIndicator\", {\n        /**\n         * Gets whether the series is financial indicator\n        */\n        get: function () {\n            return this.i.dq;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"displayType\", {\n        /**\n         * Gets or sets the display for the current FinancialIndicator object.\n        *\n        * The `displayType` property is used to display the current FinancialIndicator object.\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *    <IgrMassIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tdisplayType=\"Column\"  />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.displayType= IndicatorDisplayType.Column;\n        * ```\n        */\n        get: function () {\n            return this.i.to;\n        },\n        set: function (v) {\n            this.i.to = ensureEnum(IndicatorDisplayType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"defaultDisplayType\", {\n        /**\n         * Gets default display type for the current Financial Indicator\n        */\n        get: function () {\n            return this.i.tn;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"ignoreFirst\", {\n        /**\n         * Gets or sets the number of values to hide at the beginning of the indicator.\n        *\n        * Use the `ignoreFirst` propert to hide the number of values at the beginning of the indicator.\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *    <IgrMassIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tignoreFirst=\"2\"/>\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.ignoreFirst  = 2;\n        * ```\n        */\n        get: function () {\n            return this.i.tu;\n        },\n        set: function (v) {\n            this.i.tu = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLineType\", {\n        /**\n         * Gets or sets the trend type for the current indicator series.\n        *\n        * Use `trendLineType` property to get the trend type for the current indicator series.\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *    <IgrMassIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLineType=\"CubicFit\"/>\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.trendLineType= TrendLineType.CubicFit;\n        * ```\n        */\n        get: function () {\n            return this.i.trendLineType;\n        },\n        set: function (v) {\n            this.i.trendLineType = ensureEnum(TrendLineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLineBrush\", {\n        /**\n         * Gets or sets the brush to use to draw the trend line.\n        *\n        * Use the `trendLineBrush` propert to draw the trend line.\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *    <IgrMassIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLineBrush=\"Red\"/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return brushToString(this.i.trendLineBrush);\n        },\n        set: function (v) {\n            this.i.trendLineBrush = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"actualTrendLineBrush\", {\n        /**\n         * Gets the effective TrendLineBrush for this indicator.\n        *\n        * Use the `actualTrendLineBrush` property to Gets the effective TrendLineBrush for the FinancialIndicator.\n        */\n        get: function () {\n            return brushToString(this.i.uc);\n        },\n        set: function (v) {\n            this.i.uc = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLineThickness\", {\n        /**\n         * Gets or sets the thickness of the current indicator object's trend line.\n        *\n        * Use `trendLineThickness` property for the thickness of the current indicator object's trend line.\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *    <IgrMassIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLineThickness=\"2\"/>\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        *  series.trendLineThickness=2 ;\n        * ```\n        */\n        get: function () {\n            return this.i.trendLineThickness;\n        },\n        set: function (v) {\n            this.i.trendLineThickness = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialIndicator.prototype, \"trendLinePeriod\", {\n        /**\n         * Gets or sets the trend line period for the current series.\n         * The typical, and initial, value for trend line period is 7.\n        *\n        * Use `trendLinePeriod` property for the trend line period of the current series.\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrOrdinalTimeXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *    <IgrMassIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLinePeriod=\"30\"/>\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.trendLinePeriod  =30;\n        * ```\n        */\n        get: function () {\n            return this.i.trendLinePeriod;\n        },\n        set: function (v) {\n            this.i.trendLinePeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    *\n    * The `getSeriesValueBoundingBox` method returns the best available value bounding box within the series that has the best value match for the world position provided.\n    */\n    IgrFinancialIndicator.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.pu(toPoint(world));\n        return fromRect(iv);\n    };\n    IgrFinancialIndicator.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrFinancialIndicator.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.hj(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrFinancialIndicator.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.hh(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The series is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    *\n    * The `scrollIntoView` method scrolls the series to display the item for the specified data item.\n    */\n    IgrFinancialIndicator.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    return IgrFinancialIndicator;\n}(IgrFinancialSeries));\nexport { IgrFinancialIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}