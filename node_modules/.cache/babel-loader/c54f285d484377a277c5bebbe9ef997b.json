{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { BollingerBandWidthIndicator } from \"./BollingerBandWidthIndicator\";\n/**\n * Represents a IgxDataChartComponent Bollinger Bandwidth indicator series.\n * Represents the normalized width of the Bollinger bands for each provided value.\n * For more info see:\n * BollingerBandsOverlay\n * Default required members: High, Low, Close\n*\n* You can use the `IgrBollingerBandWidthIndicator` to represents a IgxDataChartComponent Bollinger Bandwidth indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFinancialPriceSeries\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*\n*     <IgrBollingerBandsOverlay\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*\n*     <IgrBollingerBandWidthIndicator\n*     name=\"series3\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*/\n\nvar IgrBollingerBandWidthIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrBollingerBandWidthIndicator, _super);\n\n  function IgrBollingerBandWidthIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrBollingerBandWidthIndicator.prototype.createImplementation = function () {\n    return new BollingerBandWidthIndicator();\n  };\n\n  Object.defineProperty(IgrBollingerBandWidthIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBollingerBandWidthIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the Bollinger Band Width Indicator.\n     * The typical, and initial, value for CCI periods is 20.\n    *\n    * You can use the `period` to set the moving average.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    *\n    *     <IgrBollingerBandsOverlay\n    *     name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    *\n    *     <IgrBollingerBandWidthIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod= {14} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.period = 14;\n    * ```\n    */\n    get: function get() {\n      return this.i.u2;\n    },\n    set: function set(v) {\n      this.i.u2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrBollingerBandWidthIndicator.prototype, \"multiplier\", {\n    /**\n     * Gets or sets the multiplier for the Bollinger Band width.\n     * The typical, and initial, value for Bollinger Band width multiplier is 2.\n    *\n    * Use the `multiplier` property for the Bollinger Band width. The typical, and initial, value for Bollinger Band width multiplier is 2.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    *\n    *     <IgrBollingerBandsOverlay\n    *     name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    *\n    *     <IgrBollingerBandWidthIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tMultiplier= {2} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.multiplier = 14;\n    * ```\n    */\n    get: function get() {\n      return this.i.u1;\n    },\n    set: function set(v) {\n      this.i.u1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrBollingerBandWidthIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrBollingerBandWidthIndicator };","map":{"version":3,"names":["__extends","IgrStrategyBasedIndicator","BollingerBandWidthIndicator","IgrBollingerBandWidthIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","u2","set","v","u1"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-bollinger-band-width-indicator.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { BollingerBandWidthIndicator } from \"./BollingerBandWidthIndicator\";\n/**\n * Represents a IgxDataChartComponent Bollinger Bandwidth indicator series.\n * Represents the normalized width of the Bollinger bands for each provided value.\n * For more info see:\n * BollingerBandsOverlay\n * Default required members: High, Low, Close\n*\n* You can use the `IgrBollingerBandWidthIndicator` to represents a IgxDataChartComponent Bollinger Bandwidth indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFinancialPriceSeries\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*\n*     <IgrBollingerBandsOverlay\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*\n*     <IgrBollingerBandWidthIndicator\n*     name=\"series3\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*/\nvar IgrBollingerBandWidthIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrBollingerBandWidthIndicator, _super);\n    function IgrBollingerBandWidthIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrBollingerBandWidthIndicator.prototype.createImplementation = function () {\n        return new BollingerBandWidthIndicator();\n    };\n    Object.defineProperty(IgrBollingerBandWidthIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBollingerBandWidthIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the Bollinger Band Width Indicator.\n         * The typical, and initial, value for CCI periods is 20.\n        *\n        * You can use the `period` to set the moving average.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        *\n        *     <IgrBollingerBandsOverlay\n        *     name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        *\n        *     <IgrBollingerBandWidthIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod= {14} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.period = 14;\n        * ```\n        */\n        get: function () {\n            return this.i.u2;\n        },\n        set: function (v) {\n            this.i.u2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrBollingerBandWidthIndicator.prototype, \"multiplier\", {\n        /**\n         * Gets or sets the multiplier for the Bollinger Band width.\n         * The typical, and initial, value for Bollinger Band width multiplier is 2.\n        *\n        * Use the `multiplier` property for the Bollinger Band width. The typical, and initial, value for Bollinger Band width multiplier is 2.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        *\n        *     <IgrBollingerBandsOverlay\n        *     name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        *\n        *     <IgrBollingerBandWidthIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tMultiplier= {2} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.multiplier = 14;\n        * ```\n        */\n        get: function () {\n            return this.i.u1;\n        },\n        set: function (v) {\n            this.i.u1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrBollingerBandWidthIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrBollingerBandWidthIndicator };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,2BAAT,QAA4C,+BAA5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,8BAA8B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAChFJ,SAAS,CAACG,8BAAD,EAAiCC,MAAjC,CAAT;;EACA,SAASD,8BAAT,CAAwCE,KAAxC,EAA+C;IAC3C,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,8BAA8B,CAACI,SAA/B,CAAyCC,oBAAzC,GAAgE,YAAY;IACxE,OAAO,IAAIN,2BAAJ,EAAP;EACH,CAFD;;EAGAO,MAAM,CAACC,cAAP,CAAsBP,8BAA8B,CAACI,SAArD,EAAgE,GAAhE,EAAqE;IACjE;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANgE;IAOjEC,UAAU,EAAE,KAPqD;IAQjEC,YAAY,EAAE;EARmD,CAArE;EAUAL,MAAM,CAACC,cAAP,CAAsBP,8BAA8B,CAACI,SAArD,EAAgE,QAAhE,EAA0E;IACtE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CA3DqE;IA4DtEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,EAAP,GAAY,CAACE,CAAb;IACH,CA9DqE;IA+DtEL,UAAU,EAAE,KA/D0D;IAgEtEC,YAAY,EAAE;EAhEwD,CAA1E;EAkEAL,MAAM,CAACC,cAAP,CAAsBP,8BAA8B,CAACI,SAArD,EAAgE,YAAhE,EAA8E;IAC1E;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOI,EAAd;IACH,CA3DyE;IA4D1EF,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOI,EAAP,GAAY,CAACD,CAAb;IACH,CA9DyE;IA+D1EL,UAAU,EAAE,KA/D8D;IAgE1EC,YAAY,EAAE;EAhE4D,CAA9E;EAkEA,OAAOX,8BAAP;AACH,CAvJiE,CAuJhEF,yBAvJgE,CAAlE;;AAwJA,SAASE,8BAAT"},"metadata":{},"sourceType":"module"}