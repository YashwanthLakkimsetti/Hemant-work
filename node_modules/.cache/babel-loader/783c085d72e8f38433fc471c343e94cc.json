{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataSourceDataProviderSchemaChangedEventArgsDescription } from \"./DataSourceDataProviderSchemaChangedEventArgsDescription\";\n/**\n * @hidden\n */\n\nvar DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata, _super);\n\n  function DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.b = function (a) {\n    if (DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a == null) {\n      DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.c(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a);\n    }\n\n    if (a.g(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a);\n  };\n\n  DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.c = function (a) {};\n\n  DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.d = function (a) {\n    DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.b(a);\n    a.u(\"DataSourceDataProviderSchemaChangedEventArgs\", function () {\n      return new DataSourceDataProviderSchemaChangedEventArgsDescription();\n    });\n    a.t(\"DataSourceDataProviderSchemaChangedEventArgs\", DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a);\n  };\n\n  DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.$t = markType(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata, 'DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata');\n  DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a = null;\n  return DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata;\n}(Base);\n\nexport { DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","DataSourceDataProviderSchemaChangedEventArgsDescription","DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataSourceDataProviderSchemaChangedEventArgsDescription } from \"./DataSourceDataProviderSchemaChangedEventArgsDescription\";\n/**\n * @hidden\n */\nvar DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata, _super);\n    function DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.b = function (a) {\n        if (DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a == null) {\n            DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.c(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a);\n        }\n        if (a.g(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a);\n    };\n    DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.c = function (a) {\n    };\n    DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.d = function (a) {\n        DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.b(a);\n        a.u(\"DataSourceDataProviderSchemaChangedEventArgs\", function () { return new DataSourceDataProviderSchemaChangedEventArgsDescription(); });\n        a.t(\"DataSourceDataProviderSchemaChangedEventArgs\", DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a);\n    };\n    DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.$t = markType(DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata, 'DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata');\n    DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata.a = null;\n    return DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata;\n}(Base));\nexport { DataSourceDataProviderSchemaChangedEventArgsDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,uDAAT,QAAwE,2DAAxE;AACA;AACA;AACA;;AACA,IAAIC,+DAA+D;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACjHP,SAAS,CAACM,+DAAD,EAAkEC,MAAlE,CAAT;;EACA,SAASD,+DAAT,GAA2E;IACvE,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,+DAA+D,CAACI,CAAhE,GAAoE,UAAUC,CAAV,EAAa;IAC7E,IAAIL,+DAA+D,CAACK,CAAhE,IAAqE,IAAzE,EAA+E;MAC3EL,+DAA+D,CAACK,CAAhE,GAAoE,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAApE;MACAI,+DAA+D,CAACM,CAAhE,CAAkEN,+DAA+D,CAACK,CAAlI;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,+DAA+D,CAACK,CAApE,CAAJ,EAA4E;MACxE;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,+DAA+D,CAACK,CAApE;EACH,CATD;;EAUAL,+DAA+D,CAACM,CAAhE,GAAoE,UAAUD,CAAV,EAAa,CAChF,CADD;;EAEAL,+DAA+D,CAACS,CAAhE,GAAoE,UAAUJ,CAAV,EAAa;IAC7EL,+DAA+D,CAACI,CAAhE,CAAkEC,CAAlE;IACAA,CAAC,CAACK,CAAF,CAAI,8CAAJ,EAAoD,YAAY;MAAE,OAAO,IAAIX,uDAAJ,EAAP;IAAuE,CAAzI;IACAM,CAAC,CAACM,CAAF,CAAI,8CAAJ,EAAoDX,+DAA+D,CAACK,CAApH;EACH,CAJD;;EAKAL,+DAA+D,CAACY,EAAhE,GAAqEf,QAAQ,CAACG,+DAAD,EAAkE,iEAAlE,CAA7E;EACAA,+DAA+D,CAACK,CAAhE,GAAoE,IAApE;EACA,OAAOL,+DAAP;AACH,CAzBkG,CAyBjGL,IAzBiG,CAAnG;;AA0BA,SAASK,+DAAT"},"metadata":{},"sourceType":"module"}