{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TextColumnDescription } from \"./TextColumnDescription\";\n/**\n * @hidden\n */\n\nvar TextColumnDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TextColumnDescriptionMetadata, _super);\n\n  function TextColumnDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TextColumnDescriptionMetadata.b = function (a) {\n    if (TextColumnDescriptionMetadata.a == null) {\n      TextColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TextColumnDescriptionMetadata.c(TextColumnDescriptionMetadata.a);\n    }\n\n    if (a.g(TextColumnDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TextColumnDescriptionMetadata.a);\n  };\n\n  TextColumnDescriptionMetadata.c = function (a) {\n    ColumnDescriptionMetadata.c(a);\n    a.item(\"EditorType\", \"ExportedType:string:EditorType\");\n    a.item(\"EditorType@names\", \"Default;Text;Numeric;Date;Combo\");\n    a.item(\"EditorDataSourceRef\", \"(w:EditorItemsSource,xam:EditorItemsSource,wf:EditorItemsSource)DataRef::object\");\n    a.item(\"EditorDataSource\", \"(w:EditorItemsSource,xam:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource\");\n    a.item(\"EditorTextField\", \"String\");\n    a.item(\"EditorValueField\", \"String\");\n  };\n\n  TextColumnDescriptionMetadata.d = function (a) {\n    TextColumnDescriptionMetadata.b(a);\n    a.u(\"TextColumn\", function () {\n      return new TextColumnDescription();\n    });\n    a.t(\"TextColumn\", TextColumnDescriptionMetadata.a);\n  };\n\n  TextColumnDescriptionMetadata.$t = markType(TextColumnDescriptionMetadata, 'TextColumnDescriptionMetadata');\n  TextColumnDescriptionMetadata.a = null;\n  return TextColumnDescriptionMetadata;\n}(Base);\n\nexport { TextColumnDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","ColumnDescriptionMetadata","TextColumnDescription","TextColumnDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","u","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/TextColumnDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TextColumnDescription } from \"./TextColumnDescription\";\n/**\n * @hidden\n */\nvar TextColumnDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TextColumnDescriptionMetadata, _super);\n    function TextColumnDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextColumnDescriptionMetadata.b = function (a) {\n        if (TextColumnDescriptionMetadata.a == null) {\n            TextColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TextColumnDescriptionMetadata.c(TextColumnDescriptionMetadata.a);\n        }\n        if (a.g(TextColumnDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TextColumnDescriptionMetadata.a);\n    };\n    TextColumnDescriptionMetadata.c = function (a) {\n        ColumnDescriptionMetadata.c(a);\n        a.item(\"EditorType\", \"ExportedType:string:EditorType\");\n        a.item(\"EditorType@names\", \"Default;Text;Numeric;Date;Combo\");\n        a.item(\"EditorDataSourceRef\", \"(w:EditorItemsSource,xam:EditorItemsSource,wf:EditorItemsSource)DataRef::object\");\n        a.item(\"EditorDataSource\", \"(w:EditorItemsSource,xam:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource\");\n        a.item(\"EditorTextField\", \"String\");\n        a.item(\"EditorValueField\", \"String\");\n    };\n    TextColumnDescriptionMetadata.d = function (a) {\n        TextColumnDescriptionMetadata.b(a);\n        a.u(\"TextColumn\", function () { return new TextColumnDescription(); });\n        a.t(\"TextColumn\", TextColumnDescriptionMetadata.a);\n    };\n    TextColumnDescriptionMetadata.$t = markType(TextColumnDescriptionMetadata, 'TextColumnDescriptionMetadata');\n    TextColumnDescriptionMetadata.a = null;\n    return TextColumnDescriptionMetadata;\n}(Base));\nexport { TextColumnDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA;AACA;AACA;;AACA,IAAIC,6BAA6B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC/ER,SAAS,CAACO,6BAAD,EAAgCC,MAAhC,CAAT;;EACA,SAASD,6BAAT,GAAyC;IACrC,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,6BAA6B,CAACI,CAA9B,GAAkC,UAAUC,CAAV,EAAa;IAC3C,IAAIL,6BAA6B,CAACK,CAA9B,IAAmC,IAAvC,EAA6C;MACzCL,6BAA6B,CAACK,CAA9B,GAAkC,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAlC;MACAK,6BAA6B,CAACM,CAA9B,CAAgCN,6BAA6B,CAACK,CAA9D;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,6BAA6B,CAACK,CAAlC,CAAJ,EAA0C;MACtC;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,6BAA6B,CAACK,CAAlC;EACH,CATD;;EAUAL,6BAA6B,CAACM,CAA9B,GAAkC,UAAUD,CAAV,EAAa;IAC3CP,yBAAyB,CAACQ,CAA1B,CAA4BD,CAA5B;IACAA,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,gCAArB;IACAJ,CAAC,CAACI,IAAF,CAAO,kBAAP,EAA2B,iCAA3B;IACAJ,CAAC,CAACI,IAAF,CAAO,qBAAP,EAA8B,iFAA9B;IACAJ,CAAC,CAACI,IAAF,CAAO,kBAAP,EAA2B,4GAA3B;IACAJ,CAAC,CAACI,IAAF,CAAO,iBAAP,EAA0B,QAA1B;IACAJ,CAAC,CAACI,IAAF,CAAO,kBAAP,EAA2B,QAA3B;EACH,CARD;;EASAT,6BAA6B,CAACU,CAA9B,GAAkC,UAAUL,CAAV,EAAa;IAC3CL,6BAA6B,CAACI,CAA9B,CAAgCC,CAAhC;IACAA,CAAC,CAACM,CAAF,CAAI,YAAJ,EAAkB,YAAY;MAAE,OAAO,IAAIZ,qBAAJ,EAAP;IAAqC,CAArE;IACAM,CAAC,CAACO,CAAF,CAAI,YAAJ,EAAkBZ,6BAA6B,CAACK,CAAhD;EACH,CAJD;;EAKAL,6BAA6B,CAACa,EAA9B,GAAmCjB,QAAQ,CAACI,6BAAD,EAAgC,+BAAhC,CAA3C;EACAA,6BAA6B,CAACK,CAA9B,GAAkC,IAAlC;EACA,OAAOL,6BAAP;AACH,CAhCgE,CAgC/DN,IAhC+D,CAAjE;;AAiCA,SAASM,6BAAT"},"metadata":{},"sourceType":"module"}