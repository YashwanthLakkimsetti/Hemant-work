{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar DataGridComparisonOperatorSelectorDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataGridComparisonOperatorSelectorDescription, _super);\n\n  function DataGridComparisonOperatorSelectorDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.n = null;\n    _this.k = null;\n    _this.f = 0;\n    _this.l = null;\n    _this.g = 0;\n    _this.o = null;\n    _this.m = null;\n    _this.j = null;\n    return _this;\n  }\n\n  DataGridComparisonOperatorSelectorDescription.prototype.get_type = function () {\n    return \"DataGridComparisonOperatorSelector\";\n  };\n\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"type\", {\n    get: function get() {\n      return this.get_type();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"value\", {\n    get: function get() {\n      return this.n;\n    },\n    set: function set(a) {\n      this.n = a;\n      this.e(\"Value\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterID\", {\n    get: function get() {\n      return this.k;\n    },\n    set: function set(a) {\n      this.k = a;\n      this.e(\"CustomFilterID\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterIndex\", {\n    get: function get() {\n      return this.f;\n    },\n    set: function set(a) {\n      this.f = a;\n      this.e(\"CustomFilterIndex\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"dataType\", {\n    get: function get() {\n      return this.l;\n    },\n    set: function set(a) {\n      this.l = a;\n      this.e(\"DataType\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"maxHeight\", {\n    get: function get() {\n      return this.g;\n    },\n    set: function set(a) {\n      this.g = a;\n      this.e(\"MaxHeight\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"valueChangedRef\", {\n    get: function get() {\n      return this.o;\n    },\n    set: function set(a) {\n      this.o = a;\n      this.e(\"ValueChangedRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"openingRef\", {\n    get: function get() {\n      return this.m;\n    },\n    set: function set(a) {\n      this.m = a;\n      this.e(\"OpeningRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"closingRef\", {\n    get: function get() {\n      return this.j;\n    },\n    set: function set(a) {\n      this.j = a;\n      this.e(\"ClosingRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  DataGridComparisonOperatorSelectorDescription.$t = markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);\n  return DataGridComparisonOperatorSelectorDescription;\n}(Description);\n\nexport { DataGridComparisonOperatorSelectorDescription };","map":{"version":3,"names":["__extends","Description","markType","DataGridComparisonOperatorSelectorDescription","_super","_this","call","n","k","f","l","g","o","m","j","prototype","get_type","Object","defineProperty","get","enumerable","configurable","set","a","e","$t","$"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/DataGridComparisonOperatorSelectorDescription.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar DataGridComparisonOperatorSelectorDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataGridComparisonOperatorSelectorDescription, _super);\n    function DataGridComparisonOperatorSelectorDescription() {\n        var _this = _super.call(this) || this;\n        _this.n = null;\n        _this.k = null;\n        _this.f = 0;\n        _this.l = null;\n        _this.g = 0;\n        _this.o = null;\n        _this.m = null;\n        _this.j = null;\n        return _this;\n    }\n    DataGridComparisonOperatorSelectorDescription.prototype.get_type = function () {\n        return \"DataGridComparisonOperatorSelector\";\n    };\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"value\", {\n        get: function () {\n            return this.n;\n        },\n        set: function (a) {\n            this.n = a;\n            this.e(\"Value\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterID\", {\n        get: function () {\n            return this.k;\n        },\n        set: function (a) {\n            this.k = a;\n            this.e(\"CustomFilterID\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterIndex\", {\n        get: function () {\n            return this.f;\n        },\n        set: function (a) {\n            this.f = a;\n            this.e(\"CustomFilterIndex\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"dataType\", {\n        get: function () {\n            return this.l;\n        },\n        set: function (a) {\n            this.l = a;\n            this.e(\"DataType\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"maxHeight\", {\n        get: function () {\n            return this.g;\n        },\n        set: function (a) {\n            this.g = a;\n            this.e(\"MaxHeight\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"valueChangedRef\", {\n        get: function () {\n            return this.o;\n        },\n        set: function (a) {\n            this.o = a;\n            this.e(\"ValueChangedRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"openingRef\", {\n        get: function () {\n            return this.m;\n        },\n        set: function (a) {\n            this.m = a;\n            this.e(\"OpeningRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"closingRef\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            this.j = a;\n            this.e(\"ClosingRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DataGridComparisonOperatorSelectorDescription.$t = markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);\n    return DataGridComparisonOperatorSelectorDescription;\n}(Description));\nexport { DataGridComparisonOperatorSelectorDescription };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}