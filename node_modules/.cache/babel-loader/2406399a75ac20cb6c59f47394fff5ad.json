{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar MarkerSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(MarkerSeriesDescriptionMetadata, _super);\n\n  function MarkerSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MarkerSeriesDescriptionMetadata.b = function (a) {\n    if (MarkerSeriesDescriptionMetadata.a == null) {\n      MarkerSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      MarkerSeriesDescriptionMetadata.c(MarkerSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(MarkerSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(MarkerSeriesDescriptionMetadata.a);\n  };\n\n  MarkerSeriesDescriptionMetadata.c = function (a) {\n    SeriesDescriptionMetadata.c(a);\n    a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n    a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n    a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n    a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n    a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n    a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n    a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n    a.item(\"MarkerThickness\", \"Number:double\");\n    a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n    a.item(\"MarkerBrush\", \"Brush\");\n    a.item(\"ActualMarkerBrush\", \"Brush\");\n    a.item(\"MarkerOutline\", \"Brush\");\n    a.item(\"ActualMarkerOutline\", \"Brush\");\n  };\n\n  MarkerSeriesDescriptionMetadata.d = function (a) {\n    MarkerSeriesDescriptionMetadata.b(a);\n    a.t(\"MarkerSeries\", MarkerSeriesDescriptionMetadata.a);\n  };\n\n  MarkerSeriesDescriptionMetadata.$t = markType(MarkerSeriesDescriptionMetadata, 'MarkerSeriesDescriptionMetadata');\n  MarkerSeriesDescriptionMetadata.a = null;\n  return MarkerSeriesDescriptionMetadata;\n}(Base);\n\nexport { MarkerSeriesDescriptionMetadata };","map":{"version":3,"names":["__extends","Base","String_$type","markType","Dictionary$2","SeriesDescriptionMetadata","MarkerSeriesDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","t","$t"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/MarkerSeriesDescriptionMetadata.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar MarkerSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(MarkerSeriesDescriptionMetadata, _super);\n    function MarkerSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MarkerSeriesDescriptionMetadata.b = function (a) {\n        if (MarkerSeriesDescriptionMetadata.a == null) {\n            MarkerSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            MarkerSeriesDescriptionMetadata.c(MarkerSeriesDescriptionMetadata.a);\n        }\n        if (a.g(MarkerSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(MarkerSeriesDescriptionMetadata.a);\n    };\n    MarkerSeriesDescriptionMetadata.c = function (a) {\n        SeriesDescriptionMetadata.c(a);\n        a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n        a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n        a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n        a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n        a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n        a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n        a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n        a.item(\"MarkerThickness\", \"Number:double\");\n        a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n        a.item(\"MarkerBrush\", \"Brush\");\n        a.item(\"ActualMarkerBrush\", \"Brush\");\n        a.item(\"MarkerOutline\", \"Brush\");\n        a.item(\"ActualMarkerOutline\", \"Brush\");\n    };\n    MarkerSeriesDescriptionMetadata.d = function (a) {\n        MarkerSeriesDescriptionMetadata.b(a);\n        a.t(\"MarkerSeries\", MarkerSeriesDescriptionMetadata.a);\n    };\n    MarkerSeriesDescriptionMetadata.$t = markType(MarkerSeriesDescriptionMetadata, 'MarkerSeriesDescriptionMetadata');\n    MarkerSeriesDescriptionMetadata.a = null;\n    return MarkerSeriesDescriptionMetadata;\n}(Base));\nexport { MarkerSeriesDescriptionMetadata };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA;AACA;AACA;;AACA,IAAIC,+BAA+B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACjFP,SAAS,CAACM,+BAAD,EAAkCC,MAAlC,CAAT;;EACA,SAASD,+BAAT,GAA2C;IACvC,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,+BAA+B,CAACI,CAAhC,GAAoC,UAAUC,CAAV,EAAa;IAC7C,IAAIL,+BAA+B,CAACK,CAAhC,IAAqC,IAAzC,EAA+C;MAC3CL,+BAA+B,CAACK,CAAhC,GAAoC,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAApC;MACAI,+BAA+B,CAACM,CAAhC,CAAkCN,+BAA+B,CAACK,CAAlE;IACH;;IACD,IAAIA,CAAC,CAACE,CAAF,CAAIP,+BAA+B,CAACK,CAApC,CAAJ,EAA4C;MACxC;IACH;;IACDA,CAAC,CAACG,CAAF,CAAIR,+BAA+B,CAACK,CAApC;EACH,CATD;;EAUAL,+BAA+B,CAACM,CAAhC,GAAoC,UAAUD,CAAV,EAAa;IAC7CN,yBAAyB,CAACO,CAA1B,CAA4BD,CAA5B;IACAA,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,gCAArB;IACAJ,CAAC,CAACI,IAAF,CAAO,kBAAP,EAA2B,kHAA3B;IACAJ,CAAC,CAACI,IAAF,CAAO,mBAAP,EAA4B,uCAA5B;IACAJ,CAAC,CAACI,IAAF,CAAO,yBAAP,EAAkC,8BAAlC;IACAJ,CAAC,CAACI,IAAF,CAAO,gBAAP,EAAyB,oCAAzB;IACAJ,CAAC,CAACI,IAAF,CAAO,sBAAP,EAA+B,gCAA/B;IACAJ,CAAC,CAACI,IAAF,CAAO,mBAAP,EAA4B,qDAA5B;IACAJ,CAAC,CAACI,IAAF,CAAO,iBAAP,EAA0B,eAA1B;IACAJ,CAAC,CAACI,IAAF,CAAO,yBAAP,EAAkC,iEAAlC;IACAJ,CAAC,CAACI,IAAF,CAAO,aAAP,EAAsB,OAAtB;IACAJ,CAAC,CAACI,IAAF,CAAO,mBAAP,EAA4B,OAA5B;IACAJ,CAAC,CAACI,IAAF,CAAO,eAAP,EAAwB,OAAxB;IACAJ,CAAC,CAACI,IAAF,CAAO,qBAAP,EAA8B,OAA9B;EACH,CAfD;;EAgBAT,+BAA+B,CAACU,CAAhC,GAAoC,UAAUL,CAAV,EAAa;IAC7CL,+BAA+B,CAACI,CAAhC,CAAkCC,CAAlC;IACAA,CAAC,CAACM,CAAF,CAAI,cAAJ,EAAoBX,+BAA+B,CAACK,CAApD;EACH,CAHD;;EAIAL,+BAA+B,CAACY,EAAhC,GAAqCf,QAAQ,CAACG,+BAAD,EAAkC,iCAAlC,CAA7C;EACAA,+BAA+B,CAACK,CAAhC,GAAoC,IAApC;EACA,OAAOL,+BAAP;AACH,CAtCkE,CAsCjEL,IAtCiE,CAAnE;;AAuCA,SAASK,+BAAT"},"metadata":{},"sourceType":"module"}