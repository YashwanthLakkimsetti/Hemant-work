{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NumericScaleMode_$type } from \"./NumericScaleMode\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Defines a set of basic methods and properties used to create a StraightNumeric axis.\n*/\n\nvar IgrStraightNumericAxisBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStraightNumericAxisBase, _super);\n\n  function IgrStraightNumericAxisBase(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrStraightNumericAxisBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStraightNumericAxisBase.prototype, \"scaleMode\", {\n    /**\n     * Gets or sets the axis scale mode.\n    *\n    * `scaleMode` can be used on numeric axes to allow scaling data values using built-in scalers. The available scalers are linear or logarithmic.\n    *\n    * ```ts\n    * this.yAxis.scaleMode = NumericScaleMode.Logarithmic;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\"\n    * \tscaleMode=\"logarithmic\" />\n    *\n    *     <IgrLineSeries\n    *      name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    * \tyAxisName=\"yAxis\"\n    * \tvalueMemberPath=\"Value\" />\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function get() {\n      return this.i.nf;\n    },\n    set: function set(v) {\n      this.i.nf = ensureEnum(NumericScaleMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStraightNumericAxisBase;\n}(IgrNumericAxisBase);\n\nexport { IgrStraightNumericAxisBase };","map":{"version":3,"names":["__extends","NumericScaleMode_$type","IgrNumericAxisBase","ensureEnum","IgrStraightNumericAxisBase","_super","props","call","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","nf","set","v"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-straight-numeric-axis-base.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { NumericScaleMode_$type } from \"./NumericScaleMode\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Defines a set of basic methods and properties used to create a StraightNumeric axis.\n*/\nvar IgrStraightNumericAxisBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStraightNumericAxisBase, _super);\n    function IgrStraightNumericAxisBase(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrStraightNumericAxisBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStraightNumericAxisBase.prototype, \"scaleMode\", {\n        /**\n         * Gets or sets the axis scale mode.\n        *\n        * `scaleMode` can be used on numeric axes to allow scaling data values using built-in scalers. The available scalers are linear or logarithmic.\n        *\n        * ```ts\n        * this.yAxis.scaleMode = NumericScaleMode.Logarithmic;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\"\n        * \tscaleMode=\"logarithmic\" />\n        *\n        *     <IgrLineSeries\n        *      name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        * \tyAxisName=\"yAxis\"\n        * \tvalueMemberPath=\"Value\" />\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.nf;\n        },\n        set: function (v) {\n            this.i.nf = ensureEnum(NumericScaleMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStraightNumericAxisBase;\n}(IgrNumericAxisBase));\nexport { IgrStraightNumericAxisBase };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA;AACA;AACA;;AACA,IAAIC,0BAA0B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC5EL,SAAS,CAACI,0BAAD,EAA6BC,MAA7B,CAAT;;EACA,SAASD,0BAAT,CAAoCE,KAApC,EAA2C;IACvC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDE,MAAM,CAACC,cAAP,CAAsBL,0BAA0B,CAACM,SAAjD,EAA4D,GAA5D,EAAiE;IAC7D;AACR;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CAN4D;IAO7DC,UAAU,EAAE,KAPiD;IAQ7DC,YAAY,EAAE;EAR+C,CAAjE;EAUAN,MAAM,CAACC,cAAP,CAAsBL,0BAA0B,CAACM,SAAjD,EAA4D,WAA5D,EAAyE;IACrE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CA5BoE;IA6BrEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKH,CAAL,CAAOC,EAAP,GAAYb,UAAU,CAACF,sBAAD,EAAyBiB,CAAzB,CAAtB;IACH,CA/BoE;IAgCrEL,UAAU,EAAE,KAhCyD;IAiCrEC,YAAY,EAAE;EAjCuD,CAAzE;EAmCA,OAAOV,0BAAP;AACH,CAnD6D,CAmD5DF,kBAnD4D,CAA9D;;AAoDA,SAASE,0BAAT"},"metadata":{},"sourceType":"module"}