{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar DataFormats =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataFormats, _super);\n\n  function DataFormats() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataFormats.$t = markType(DataFormats, 'DataFormats');\n  DataFormats.a = \"CSV\";\n  DataFormats.b = \"HTML Format\";\n  DataFormats.c = \"System.String\";\n  DataFormats.d = \"Text\";\n  DataFormats.e = \"UnicodeText\";\n  return DataFormats;\n}(Base);\n\nexport { DataFormats };","map":{"version":3,"names":["__extends","Base","markType","DataFormats","_super","apply","arguments","$t","a","b","c","d","e"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/DataFormats.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar DataFormats = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataFormats, _super);\n    function DataFormats() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataFormats.$t = markType(DataFormats, 'DataFormats');\n    DataFormats.a = \"CSV\";\n    DataFormats.b = \"HTML Format\";\n    DataFormats.c = \"System.String\";\n    DataFormats.d = \"Text\";\n    DataFormats.e = \"UnicodeText\";\n    return DataFormats;\n}(Base));\nexport { DataFormats };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC7DJ,SAAS,CAACG,WAAD,EAAcC,MAAd,CAAT;;EACA,SAASD,WAAT,GAAuB;IACnB,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,WAAW,CAACI,EAAZ,GAAiBL,QAAQ,CAACC,WAAD,EAAc,aAAd,CAAzB;EACAA,WAAW,CAACK,CAAZ,GAAgB,KAAhB;EACAL,WAAW,CAACM,CAAZ,GAAgB,aAAhB;EACAN,WAAW,CAACO,CAAZ,GAAgB,eAAhB;EACAP,WAAW,CAACQ,CAAZ,GAAgB,MAAhB;EACAR,WAAW,CAACS,CAAZ,GAAgB,aAAhB;EACA,OAAOT,WAAP;AACH,CAZ8C,CAY7CF,IAZ6C,CAA/C;;AAaA,SAASE,WAAT"},"metadata":{},"sourceType":"module"}