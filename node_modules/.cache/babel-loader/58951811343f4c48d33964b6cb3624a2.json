{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, IEqualityComparer$1_$type, Point_$type, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar PointComparer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PointComparer, _super);\n\n  function PointComparer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PointComparer.prototype.equalsC = function (a, b) {\n    return a.x == b.x && a.y == b.y;\n  };\n\n  PointComparer.prototype.getHashCodeC = function (a) {\n    return a.x ^ a.y;\n  };\n\n  PointComparer.$t = markType(PointComparer, 'PointComparer', Base.$, [IEqualityComparer$1_$type.specialize(Point_$type)]);\n  return PointComparer;\n}(Base);\n\nexport { PointComparer };","map":{"version":3,"names":["__extends","Base","IEqualityComparer$1_$type","Point_$type","markType","PointComparer","_super","apply","arguments","prototype","equalsC","a","b","x","y","getHashCodeC","$t","$","specialize"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-core/esm5/lib/PointComparer.js"],"sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, IEqualityComparer$1_$type, Point_$type, markType } from \"./type\";\n/**\n * @hidden\n */\nvar PointComparer = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PointComparer, _super);\n    function PointComparer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PointComparer.prototype.equalsC = function (a, b) {\n        return a.x == b.x && a.y == b.y;\n    };\n    PointComparer.prototype.getHashCodeC = function (a) {\n        return (a.x) ^ (a.y);\n    };\n    PointComparer.$t = markType(PointComparer, 'PointComparer', Base.$, [IEqualityComparer$1_$type.specialize(Point_$type)]);\n    return PointComparer;\n}(Base));\nexport { PointComparer };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,WAA1C,EAAuDC,QAAvD,QAAuE,QAAvE;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EAC/DN,SAAS,CAACK,aAAD,EAAgBC,MAAhB,CAAT;;EACA,SAASD,aAAT,GAAyB;IACrB,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,aAAa,CAACI,SAAd,CAAwBC,OAAxB,GAAkC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAC9C,OAAOD,CAAC,CAACE,CAAF,IAAOD,CAAC,CAACC,CAAT,IAAcF,CAAC,CAACG,CAAF,IAAOF,CAAC,CAACE,CAA9B;EACH,CAFD;;EAGAT,aAAa,CAACI,SAAd,CAAwBM,YAAxB,GAAuC,UAAUJ,CAAV,EAAa;IAChD,OAAQA,CAAC,CAACE,CAAH,GAASF,CAAC,CAACG,CAAlB;EACH,CAFD;;EAGAT,aAAa,CAACW,EAAd,GAAmBZ,QAAQ,CAACC,aAAD,EAAgB,eAAhB,EAAiCJ,IAAI,CAACgB,CAAtC,EAAyC,CAACf,yBAAyB,CAACgB,UAA1B,CAAqCf,WAArC,CAAD,CAAzC,CAA3B;EACA,OAAOE,aAAP;AACH,CAbgD,CAa/CJ,IAb+C,CAAjD;;AAcA,SAASI,aAAT"},"metadata":{},"sourceType":"module"}