{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { PriceDisplayType_$type } from \"./PriceDisplayType\";\nimport { IgrFinancialSeries } from \"./igr-financial-series\";\nimport { FinancialPriceSeries } from \"./FinancialPriceSeries\";\nimport { ensureEnum, brushToString, stringToBrush, toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent financial price series that renders as Candlestick or OHLC representations.\n * Default required members: Open, Low, High, Close\n*\n* The `IgrFinancialPriceSeries` class represents a IgxDataChartComponent financial price series that renders as Candlestick or OHLC representations.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFinancialPriceSeries\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* this.series = new IgrFinancialPriceSeries({name: \"series\"});\n* this.series.dataSource = this.financialData;\n* this.series.xAxis = this.timeXAxis;\n* this.series.yAxis = this.numericYAxis;\n* this.series.xAxisName = \"timeXAxis\";\n* this.series.yAxisName = \"numericYAxis\";\n* this.series.highMemberPath=\"High\" ;\n* this.series.lowMemberPath=\"Low\";\n* this.series.closeMemberPath=\"Close\";\n* this.series.openMemberPath=\"Open\";\n* this.series.volumeMemberPath=\"Volume\";\n* ```\n*/\n\nvar IgrFinancialPriceSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrFinancialPriceSeries, _super);\n\n  function IgrFinancialPriceSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrFinancialPriceSeries.prototype.createImplementation = function () {\n    return new FinancialPriceSeries();\n  };\n\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function get() {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"isFinancialSeries\", {\n    /**\n     * Gets whether the series has financial OHLC/candlestick visuals\n    */\n    get: function get() {\n      return this.i.ds;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLineType\", {\n    /**\n     * Gets or sets the trend type for the current financial series.\n    *\n    * Use the `trendLineType` property for the trend type of the current financial series.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLineType={this.state.trendLineType}  />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.trendLineType= \"CubicFit\";\n    * ```\n    */\n    get: function get() {\n      return this.i.trendLineType;\n    },\n    set: function set(v) {\n      this.i.trendLineType = ensureEnum(TrendLineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLineBrush\", {\n    /**\n     * Gets or sets the brush to use to draw the trend line.\n    *\n    * Use the `trendLineBrush` property to brush the the trend line.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLineBrush=\"Blue\" />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.trendLineBrush=\"red\";\n    * ```\n    */\n    get: function get() {\n      return brushToString(this.i.trendLineBrush);\n    },\n    set: function set(v) {\n      this.i.trendLineBrush = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"actualTrendLineBrush\", {\n    /**\n     * Gets the effective TrendLineBrush for this FinancialPriceSeries.\n    *\n    * Use the `actualTrendLineBrush` property to Gets the effective TrendLineBrush for the FinancialIndicator.\n    *\n    * ````ts\n    * <IgrDataChart\n    *         ref={this.onChartRef}\n    *         dataSource={this.data}\n    *         width=\"100%\"\n    *         height=\"100%\" >\n    *\n    *         <IgrCategoryXAxis name=\"xAxis\" label=\"Label\" />\n    *         <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *         <IgrFinancialPriceSeries\n    *             name=\"series1\"\n    *             xAxisName=\"xAxis\"\n    *             yAxisName=\"yAxis\"\n    *             highMemberPath=\"High\"\n    *             lowMemberPath=\"Low\"\n    *             closeMemberPath=\"Close\"\n    *             openMemberPath=\"Open\"\n    *             volumeMemberPath=\"Volume\"\n    *             trendLineType={this.state.trendLineType}\n    *             displayType= \"Candlestick\"\n    *             trendLinePeriod = {2}\n    *             actualTrendLineBrush= \"blue\"/>\n    *\n    *     </IgrDataChart>\n    *\n    * \t```\n    * ````\n    */\n    get: function get() {\n      return brushToString(this.i.uu);\n    },\n    set: function set(v) {\n      this.i.uu = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLineThickness\", {\n    /**\n     * Gets or sets the thickness of the current FinancialPriceSeries object's trend line.\n    *\n    * Use the `trendLineThickness` property for the thickness of the current FinancialPriceSeries object's trend line.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLineThickness=\"3\"/>\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.trendLineThickness=5;\n    * ```\n    */\n    get: function get() {\n      return this.i.trendLineThickness;\n    },\n    set: function set(v) {\n      this.i.trendLineThickness = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLinePeriod\", {\n    /**\n     * Gets or sets the trend line period for the current series.\n     * The typical, and initial, value for trend line period is 7.\n    *\n    * Use the `trendLinePeriod` property for the periodo the the current series.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \ttrendLinePeriod={7} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.trendLinePeriod= 7;\n    * ```\n    */\n    get: function get() {\n      return this.i.trendLinePeriod;\n    },\n    set: function set(v) {\n      this.i.trendLinePeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"displayType\", {\n    /**\n     * Gets or sets the display type for the current FinancialPriceSeries object.\n    *\n    * Use the `displayType` property for the display type of the current FinancialPriceSeries object.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.displayType=PriceDisplayType.Candlestick;\n    * ```\n    */\n    get: function get() {\n      return this.i.tn;\n    },\n    set: function set(v) {\n      this.i.tn = ensureEnum(PriceDisplayType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"negativeOutline\", {\n    /**\n     * Brush to use for outlining negative elements in the series.\n    *\n    * Use the `negativeOutline` property to brush the outline negative elements in the series.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tnegativeOutline=\"Red\" />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * series.negativeOutline=\"red\";\n    * ```\n    */\n    get: function get() {\n      return brushToString(this.i.uv);\n    },\n    set: function set(v) {\n      this.i.uv = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"lowMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series' Low value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.t0;\n    },\n    set: function set(v) {\n      this.i.t0 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"highMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series' High value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.tw;\n    },\n    set: function set(v) {\n      this.i.tw = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"closeMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series' Close value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.tr;\n    },\n    set: function set(v) {\n      this.i.tr = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"openMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series' Open value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.t5;\n    },\n    set: function set(v) {\n      this.i.t5 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"lowMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series' Low value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.t2;\n    },\n    set: function set(v) {\n      this.i.t2 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"highMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series' High value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.ty;\n    },\n    set: function set(v) {\n      this.i.ty = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"closeMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series' Close value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.tt;\n    },\n    set: function set(v) {\n      this.i.tt = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialPriceSeries.prototype, \"openMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series' Open value in the Data Legend.\n    */\n    get: function get() {\n      return this.i.t7;\n    },\n    set: function set(v) {\n      this.i.t7 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  *\n  * The `getSeriesValueBoundingBox` method return the best available value bounding box within the series that has the best value match for the world position provided.\n  */\n\n  IgrFinancialPriceSeries.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.pu(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The categorySeries is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  *\n  * The `scrollIntoView` methos scrolls the series to display the item for the specified data item.\n  */\n\n\n  IgrFinancialPriceSeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  *\n  * The `getItemSpan` method is used For a category plotted series, returns the current width of the items within the categories.\n  *\n  * This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned\n  */\n\n\n  IgrFinancialPriceSeries.prototype.getItemSpan = function () {\n    var iv = this.i.ga();\n    return iv;\n  };\n\n  IgrFinancialPriceSeries.prototype.setNegativeColors = function (negativeBrush, negativeOutline) {\n    this.i.mm(stringToBrush(negativeBrush), stringToBrush(negativeOutline));\n  };\n\n  return IgrFinancialPriceSeries;\n}(IgrFinancialSeries);\n\nexport { IgrFinancialPriceSeries };","map":{"version":3,"names":["__extends","TrendLineType_$type","PriceDisplayType_$type","IgrFinancialSeries","FinancialPriceSeries","ensureEnum","brushToString","stringToBrush","toPoint","fromRect","IgrFinancialPriceSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","ds","trendLineType","set","v","trendLineBrush","uu","trendLineThickness","trendLinePeriod","tn","uv","t0","tw","tr","t5","t2","ty","tt","t7","getSeriesValueBoundingBox","world","iv","pu","scrollIntoView","item","en","getItemSpan","ga","setNegativeColors","negativeBrush","negativeOutline","mm"],"sources":["C:/Users/lakki/Downloads/code/node_modules/igniteui-react-charts/esm5/lib/igr-financial-price-series.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { PriceDisplayType_$type } from \"./PriceDisplayType\";\nimport { IgrFinancialSeries } from \"./igr-financial-series\";\nimport { FinancialPriceSeries } from \"./FinancialPriceSeries\";\nimport { ensureEnum, brushToString, stringToBrush, toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent financial price series that renders as Candlestick or OHLC representations.\n * Default required members: Open, Low, High, Close\n*\n* The `IgrFinancialPriceSeries` class represents a IgxDataChartComponent financial price series that renders as Candlestick or OHLC representations.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrFinancialPriceSeries\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* this.series = new IgrFinancialPriceSeries({name: \"series\"});\n* this.series.dataSource = this.financialData;\n* this.series.xAxis = this.timeXAxis;\n* this.series.yAxis = this.numericYAxis;\n* this.series.xAxisName = \"timeXAxis\";\n* this.series.yAxisName = \"numericYAxis\";\n* this.series.highMemberPath=\"High\" ;\n* this.series.lowMemberPath=\"Low\";\n* this.series.closeMemberPath=\"Close\";\n* this.series.openMemberPath=\"Open\";\n* this.series.volumeMemberPath=\"Volume\";\n* ```\n*/\nvar IgrFinancialPriceSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrFinancialPriceSeries, _super);\n    function IgrFinancialPriceSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrFinancialPriceSeries.prototype.createImplementation = function () {\n        return new FinancialPriceSeries();\n    };\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"isFinancialSeries\", {\n        /**\n         * Gets whether the series has financial OHLC/candlestick visuals\n        */\n        get: function () {\n            return this.i.ds;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLineType\", {\n        /**\n         * Gets or sets the trend type for the current financial series.\n        *\n        * Use the `trendLineType` property for the trend type of the current financial series.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLineType={this.state.trendLineType}  />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.trendLineType= \"CubicFit\";\n        * ```\n        */\n        get: function () {\n            return this.i.trendLineType;\n        },\n        set: function (v) {\n            this.i.trendLineType = ensureEnum(TrendLineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLineBrush\", {\n        /**\n         * Gets or sets the brush to use to draw the trend line.\n        *\n        * Use the `trendLineBrush` property to brush the the trend line.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLineBrush=\"Blue\" />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.trendLineBrush=\"red\";\n        * ```\n        */\n        get: function () {\n            return brushToString(this.i.trendLineBrush);\n        },\n        set: function (v) {\n            this.i.trendLineBrush = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"actualTrendLineBrush\", {\n        /**\n         * Gets the effective TrendLineBrush for this FinancialPriceSeries.\n        *\n        * Use the `actualTrendLineBrush` property to Gets the effective TrendLineBrush for the FinancialIndicator.\n        *\n        * ````ts\n        * <IgrDataChart\n        *         ref={this.onChartRef}\n        *         dataSource={this.data}\n        *         width=\"100%\"\n        *         height=\"100%\" >\n        *\n        *         <IgrCategoryXAxis name=\"xAxis\" label=\"Label\" />\n        *         <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *         <IgrFinancialPriceSeries\n        *             name=\"series1\"\n        *             xAxisName=\"xAxis\"\n        *             yAxisName=\"yAxis\"\n        *             highMemberPath=\"High\"\n        *             lowMemberPath=\"Low\"\n        *             closeMemberPath=\"Close\"\n        *             openMemberPath=\"Open\"\n        *             volumeMemberPath=\"Volume\"\n        *             trendLineType={this.state.trendLineType}\n        *             displayType= \"Candlestick\"\n        *             trendLinePeriod = {2}\n        *             actualTrendLineBrush= \"blue\"/>\n        *\n        *     </IgrDataChart>\n        *\n        * \t```\n        * ````\n        */\n        get: function () {\n            return brushToString(this.i.uu);\n        },\n        set: function (v) {\n            this.i.uu = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLineThickness\", {\n        /**\n         * Gets or sets the thickness of the current FinancialPriceSeries object's trend line.\n        *\n        * Use the `trendLineThickness` property for the thickness of the current FinancialPriceSeries object's trend line.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLineThickness=\"3\"/>\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.trendLineThickness=5;\n        * ```\n        */\n        get: function () {\n            return this.i.trendLineThickness;\n        },\n        set: function (v) {\n            this.i.trendLineThickness = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"trendLinePeriod\", {\n        /**\n         * Gets or sets the trend line period for the current series.\n         * The typical, and initial, value for trend line period is 7.\n        *\n        * Use the `trendLinePeriod` property for the periodo the the current series.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \ttrendLinePeriod={7} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.trendLinePeriod= 7;\n        * ```\n        */\n        get: function () {\n            return this.i.trendLinePeriod;\n        },\n        set: function (v) {\n            this.i.trendLinePeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"displayType\", {\n        /**\n         * Gets or sets the display type for the current FinancialPriceSeries object.\n        *\n        * Use the `displayType` property for the display type of the current FinancialPriceSeries object.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.displayType=PriceDisplayType.Candlestick;\n        * ```\n        */\n        get: function () {\n            return this.i.tn;\n        },\n        set: function (v) {\n            this.i.tn = ensureEnum(PriceDisplayType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"negativeOutline\", {\n        /**\n         * Brush to use for outlining negative elements in the series.\n        *\n        * Use the `negativeOutline` property to brush the outline negative elements in the series.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tnegativeOutline=\"Red\" />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * series.negativeOutline=\"red\";\n        * ```\n        */\n        get: function () {\n            return brushToString(this.i.uv);\n        },\n        set: function (v) {\n            this.i.uv = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"lowMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series' Low value in the Data Legend.\n        */\n        get: function () {\n            return this.i.t0;\n        },\n        set: function (v) {\n            this.i.t0 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"highMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series' High value in the Data Legend.\n        */\n        get: function () {\n            return this.i.tw;\n        },\n        set: function (v) {\n            this.i.tw = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"closeMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series' Close value in the Data Legend.\n        */\n        get: function () {\n            return this.i.tr;\n        },\n        set: function (v) {\n            this.i.tr = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"openMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series' Open value in the Data Legend.\n        */\n        get: function () {\n            return this.i.t5;\n        },\n        set: function (v) {\n            this.i.t5 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"lowMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series' Low value in the Data Legend.\n        */\n        get: function () {\n            return this.i.t2;\n        },\n        set: function (v) {\n            this.i.t2 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"highMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series' High value in the Data Legend.\n        */\n        get: function () {\n            return this.i.ty;\n        },\n        set: function (v) {\n            this.i.ty = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"closeMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series' Close value in the Data Legend.\n        */\n        get: function () {\n            return this.i.tt;\n        },\n        set: function (v) {\n            this.i.tt = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialPriceSeries.prototype, \"openMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series' Open value in the Data Legend.\n        */\n        get: function () {\n            return this.i.t7;\n        },\n        set: function (v) {\n            this.i.t7 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    *\n    * The `getSeriesValueBoundingBox` method return the best available value bounding box within the series that has the best value match for the world position provided.\n    */\n    IgrFinancialPriceSeries.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.pu(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The categorySeries is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    *\n    * The `scrollIntoView` methos scrolls the series to display the item for the specified data item.\n    */\n    IgrFinancialPriceSeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    *\n    * The `getItemSpan` method is used For a category plotted series, returns the current width of the items within the categories.\n    *\n    * This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned\n    */\n    IgrFinancialPriceSeries.prototype.getItemSpan = function () {\n        var iv = this.i.ga();\n        return (iv);\n    };\n    IgrFinancialPriceSeries.prototype.setNegativeColors = function (negativeBrush, negativeOutline) {\n        this.i.mm(stringToBrush(negativeBrush), stringToBrush(negativeOutline));\n    };\n    return IgrFinancialPriceSeries;\n}(IgrFinancialSeries));\nexport { IgrFinancialPriceSeries };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,EAAmDC,OAAnD,EAA4DC,QAA5D,QAA4E,qBAA5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;EACzEX,SAAS,CAACU,uBAAD,EAA0BC,MAA1B,CAAT;;EACA,SAASD,uBAAT,CAAiCE,KAAjC,EAAwC;IACpC,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,uBAAuB,CAACI,SAAxB,CAAkCC,oBAAlC,GAAyD,YAAY;IACjE,OAAO,IAAIX,oBAAJ,EAAP;EACH,CAFD;;EAGAY,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,GAAzD,EAA8D;IAC1D;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKC,eAAZ;IACH,CANyD;IAO1DC,UAAU,EAAE,KAP8C;IAQ1DC,YAAY,EAAE;EAR4C,CAA9D;EAUAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,mBAAzD,EAA8E;IAC1E;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOC,EAAd;IACH,CANyE;IAO1EH,UAAU,EAAE,KAP8D;IAQ1EC,YAAY,EAAE;EAR4D,CAA9E;EAUAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,eAAzD,EAA0E;IACtE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOE,aAAd;IACH,CArCqE;IAsCtEC,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOE,aAAP,GAAuBnB,UAAU,CAACJ,mBAAD,EAAsByB,CAAtB,CAAjC;IACH,CAxCqE;IAyCtEN,UAAU,EAAE,KAzC0D;IA0CtEC,YAAY,EAAE;EA1CwD,CAA1E;EA4CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,gBAAzD,EAA2E;IACvE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAOZ,aAAa,CAAC,KAAKgB,CAAL,CAAOK,cAAR,CAApB;IACH,CArCsE;IAsCvEF,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOK,cAAP,GAAwBpB,aAAa,CAACmB,CAAD,CAArC;IACH,CAxCsE;IAyCvEN,UAAU,EAAE,KAzC2D;IA0CvEC,YAAY,EAAE;EA1CyD,CAA3E;EA4CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,sBAAzD,EAAiF;IAC7E;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAOZ,aAAa,CAAC,KAAKgB,CAAL,CAAOM,EAAR,CAApB;IACH,CArC4E;IAsC7EH,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOM,EAAP,GAAYrB,aAAa,CAACmB,CAAD,CAAzB;IACH,CAxC4E;IAyC7EN,UAAU,EAAE,KAzCiE;IA0C7EC,YAAY,EAAE;EA1C+D,CAAjF;EA4CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,oBAAzD,EAA+E;IAC3E;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOO,kBAAd;IACH,CArC0E;IAsC3EJ,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOO,kBAAP,GAA4B,CAACH,CAA7B;IACH,CAxC0E;IAyC3EN,UAAU,EAAE,KAzC+D;IA0C3EC,YAAY,EAAE;EA1C6D,CAA/E;EA4CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,iBAAzD,EAA4E;IACxE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOQ,eAAd;IACH,CAtCuE;IAuCxEL,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOQ,eAAP,GAAyB,CAACJ,CAA1B;IACH,CAzCuE;IA0CxEN,UAAU,EAAE,KA1C4D;IA2CxEC,YAAY,EAAE;EA3C0D,CAA5E;EA6CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,aAAzD,EAAwE;IACpE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOS,EAAd;IACH,CArCmE;IAsCpEN,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOS,EAAP,GAAY1B,UAAU,CAACH,sBAAD,EAAyBwB,CAAzB,CAAtB;IACH,CAxCmE;IAyCpEN,UAAU,EAAE,KAzCwD;IA0CpEC,YAAY,EAAE;EA1CsD,CAAxE;EA4CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,iBAAzD,EAA4E;IACxE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAOZ,aAAa,CAAC,KAAKgB,CAAL,CAAOU,EAAR,CAApB;IACH,CArCuE;IAsCxEP,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOU,EAAP,GAAYzB,aAAa,CAACmB,CAAD,CAAzB;IACH,CAxCuE;IAyCxEN,UAAU,EAAE,KAzC4D;IA0CxEC,YAAY,EAAE;EA1C0D,CAA5E;EA4CAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,wBAAzD,EAAmF;IAC/E;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOW,EAAd;IACH,CAN8E;IAO/ER,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOW,EAAP,GAAYP,CAAZ;IACH,CAT8E;IAU/EN,UAAU,EAAE,KAVmE;IAW/EC,YAAY,EAAE;EAXiE,CAAnF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,yBAAzD,EAAoF;IAChF;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOY,EAAd;IACH,CAN+E;IAOhFT,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOY,EAAP,GAAYR,CAAZ;IACH,CAT+E;IAUhFN,UAAU,EAAE,KAVoE;IAWhFC,YAAY,EAAE;EAXkE,CAApF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,0BAAzD,EAAqF;IACjF;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOa,EAAd;IACH,CANgF;IAOjFV,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOa,EAAP,GAAYT,CAAZ;IACH,CATgF;IAUjFN,UAAU,EAAE,KAVqE;IAWjFC,YAAY,EAAE;EAXmE,CAArF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,yBAAzD,EAAoF;IAChF;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOc,EAAd;IACH,CAN+E;IAOhFX,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOc,EAAP,GAAYV,CAAZ;IACH,CAT+E;IAUhFN,UAAU,EAAE,KAVoE;IAWhFC,YAAY,EAAE;EAXkE,CAApF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,uBAAzD,EAAkF;IAC9E;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOe,EAAd;IACH,CAN6E;IAO9EZ,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOe,EAAP,GAAYX,CAAZ;IACH,CAT6E;IAU9EN,UAAU,EAAE,KAVkE;IAW9EC,YAAY,EAAE;EAXgE,CAAlF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,wBAAzD,EAAmF;IAC/E;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOgB,EAAd;IACH,CAN8E;IAO/Eb,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOgB,EAAP,GAAYZ,CAAZ;IACH,CAT8E;IAU/EN,UAAU,EAAE,KAVmE;IAW/EC,YAAY,EAAE;EAXiE,CAAnF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,yBAAzD,EAAoF;IAChF;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOiB,EAAd;IACH,CAN+E;IAOhFd,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOiB,EAAP,GAAYb,CAAZ;IACH,CAT+E;IAUhFN,UAAU,EAAE,KAVoE;IAWhFC,YAAY,EAAE;EAXkE,CAApF;EAaAL,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,wBAAzD,EAAmF;IAC/E;AACR;AACA;IACQI,GAAG,EAAE,eAAY;MACb,OAAO,KAAKI,CAAL,CAAOkB,EAAd;IACH,CAN8E;IAO/Ef,GAAG,EAAE,aAAUC,CAAV,EAAa;MACd,KAAKJ,CAAL,CAAOkB,EAAP,GAAYd,CAAZ;IACH,CAT8E;IAU/EN,UAAU,EAAE,KAVmE;IAW/EC,YAAY,EAAE;EAXiE,CAAnF;EAaA;AACJ;AACA;AACA;AACA;AACA;AACA;;EACIX,uBAAuB,CAACI,SAAxB,CAAkC2B,yBAAlC,GAA8D,UAAUC,KAAV,EAAiB;IAC3E,IAAIC,EAAE,GAAG,KAAKrB,CAAL,CAAOsB,EAAP,CAAUpC,OAAO,CAACkC,KAAD,CAAjB,CAAT;IACA,OAAOjC,QAAQ,CAACkC,EAAD,CAAf;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIjC,uBAAuB,CAACI,SAAxB,CAAkC+B,cAAlC,GAAmD,UAAUC,IAAV,EAAgB;IAC/D,IAAIH,EAAE,GAAG,KAAKrB,CAAL,CAAOyB,EAAP,CAAUD,IAAV,CAAT;IACA,OAAQH,EAAR;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIjC,uBAAuB,CAACI,SAAxB,CAAkCkC,WAAlC,GAAgD,YAAY;IACxD,IAAIL,EAAE,GAAG,KAAKrB,CAAL,CAAO2B,EAAP,EAAT;IACA,OAAQN,EAAR;EACH,CAHD;;EAIAjC,uBAAuB,CAACI,SAAxB,CAAkCoC,iBAAlC,GAAsD,UAAUC,aAAV,EAAyBC,eAAzB,EAA0C;IAC5F,KAAK9B,CAAL,CAAO+B,EAAP,CAAU9C,aAAa,CAAC4C,aAAD,CAAvB,EAAwC5C,aAAa,CAAC6C,eAAD,CAArD;EACH,CAFD;;EAGA,OAAO1C,uBAAP;AACH,CAje0D,CAiezDP,kBAjeyD,CAA3D;;AAkeA,SAASO,uBAAT"},"metadata":{},"sourceType":"module"}